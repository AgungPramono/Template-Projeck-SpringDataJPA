2016-08-05 19:20:40,639 INFO  o.s.c.s.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@16e8792: startup date [Fri Aug 05 19:20:40 ICT 2016]; root of context hierarchy 
2016-08-05 19:20:40,701 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-05 19:20:41,263 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-05 19:20:41,497 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-05 19:20:41,528 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-05 19:20:41,637 INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.3.11.Final} 
2016-08-05 19:20:41,637 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-05 19:20:41,653 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-05 19:20:41,949 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.5.Final} 
2016-08-05 19:20:42,308 WARN  o.h.e.j.internal.JdbcServicesImpl - HHH000342: Could not obtain connection to query metadata : Cannot create PoolableConnectionFactory (Unknown database 'belajar_development') 
2016-08-05 19:20:42,324 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-05 19:20:42,324 INFO  o.h.e.j.internal.LobCreatorBuilder - HHH000422: Disabling contextual LOB creation as connection was null 
2016-08-05 19:20:42,464 INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-05 19:20:43,041 INFO  o.h.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update 
2016-08-05 19:20:43,041 INFO  o.h.tool.hbm2ddl.SchemaUpdate - HHH000102: Fetching database metadata 
2016-08-05 19:20:43,057 ERROR o.h.tool.hbm2ddl.SchemaUpdate - HHH000319: Could not get database metadata 
org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Unknown database 'belajar_development')
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549) ~[commons-dbcp-1.4.jar:1.4]
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388) ~[commons-dbcp-1.4.jar:1.4]
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044) ~[commons-dbcp-1.4.jar:1.4]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:139) ~[hibernate-core-4.3.11.Final.jar:4.3.11.Final]
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:51) ~[hibernate-core-4.3.11.Final.jar:4.3.11.Final]
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:219) ~[hibernate-core-4.3.11.Final.jar:4.3.11.Final]
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:203) ~[hibernate-core-4.3.11.Final.jar:4.3.11.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:522) ~[hibernate-core-4.3.11.Final.jar:4.3.11.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1859) ~[hibernate-core-4.3.11.Final.jar:4.3.11.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$4.perform(EntityManagerFactoryBuilderImpl.java:857) [hibernate-entitymanager-4.3.10.Final.jar:4.3.10.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$4.perform(EntityManagerFactoryBuilderImpl.java:850) [hibernate-entitymanager-4.3.10.Final.jar:4.3.10.Final]
	at org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.withTccl(ClassLoaderServiceImpl.java:425) [hibernate-core-4.3.11.Final.jar:4.3.11.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:849) [hibernate-entitymanager-4.3.10.Final.jar:4.3.10.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:152) [hibernate-entitymanager-4.3.10.Final.jar:4.3.10.Final]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:338) [spring-orm-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318) [spring-orm-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1613) [spring-beans-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1550) [spring-beans-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) [spring-beans-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475) [spring-beans-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302) [spring-beans-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:229) [spring-beans-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298) [spring-beans-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193) [spring-beans-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:975) [spring-context-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:752) [spring-context-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482) [spring-context-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139) [spring-context-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83) [spring-context-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at com.agung.template.springjpa.Main.initContext(Main.java:19) [classes/:na]
	at com.agung.template.springjpa.Main.main(Main.java:28) [classes/:na]
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown database 'belajar_development'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_66]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_66]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_66]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422) ~[na:1.8.0_66]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:389) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.Util.getInstance(Util.java:372) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:980) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:870) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1659) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1206) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2239) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2270) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2069) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:794) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_66]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_66]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_66]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422) ~[na:1.8.0_66]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:389) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:325) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38) ~[commons-dbcp-1.4.jar:1.4]
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582) ~[commons-dbcp-1.4.jar:1.4]
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556) ~[commons-dbcp-1.4.jar:1.4]
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545) ~[commons-dbcp-1.4.jar:1.4]
	... 30 common frames omitted
2016-08-05 19:20:43,057 ERROR o.h.tool.hbm2ddl.SchemaUpdate - HHH000299: Could not complete schema update 
org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Unknown database 'belajar_development')
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549) ~[commons-dbcp-1.4.jar:1.4]
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388) ~[commons-dbcp-1.4.jar:1.4]
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044) ~[commons-dbcp-1.4.jar:1.4]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:139) ~[hibernate-core-4.3.11.Final.jar:4.3.11.Final]
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:51) ~[hibernate-core-4.3.11.Final.jar:4.3.11.Final]
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:219) ~[hibernate-core-4.3.11.Final.jar:4.3.11.Final]
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:203) ~[hibernate-core-4.3.11.Final.jar:4.3.11.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:522) ~[hibernate-core-4.3.11.Final.jar:4.3.11.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1859) ~[hibernate-core-4.3.11.Final.jar:4.3.11.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$4.perform(EntityManagerFactoryBuilderImpl.java:857) [hibernate-entitymanager-4.3.10.Final.jar:4.3.10.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$4.perform(EntityManagerFactoryBuilderImpl.java:850) [hibernate-entitymanager-4.3.10.Final.jar:4.3.10.Final]
	at org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.withTccl(ClassLoaderServiceImpl.java:425) [hibernate-core-4.3.11.Final.jar:4.3.11.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:849) [hibernate-entitymanager-4.3.10.Final.jar:4.3.10.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:152) [hibernate-entitymanager-4.3.10.Final.jar:4.3.10.Final]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:338) [spring-orm-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318) [spring-orm-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1613) [spring-beans-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1550) [spring-beans-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) [spring-beans-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475) [spring-beans-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302) [spring-beans-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:229) [spring-beans-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298) [spring-beans-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193) [spring-beans-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:975) [spring-context-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:752) [spring-context-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482) [spring-context-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139) [spring-context-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83) [spring-context-4.0.9.RELEASE.jar:4.0.9.RELEASE]
	at com.agung.template.springjpa.Main.initContext(Main.java:19) [classes/:na]
	at com.agung.template.springjpa.Main.main(Main.java:28) [classes/:na]
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown database 'belajar_development'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_66]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_66]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_66]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422) ~[na:1.8.0_66]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:389) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.Util.getInstance(Util.java:372) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:980) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:870) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1659) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1206) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2239) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2270) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2069) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:794) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_66]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_66]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_66]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422) ~[na:1.8.0_66]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:389) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:325) ~[mysql-connector-java-5.1.35.jar:5.1.35]
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38) ~[commons-dbcp-1.4.jar:1.4]
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582) ~[commons-dbcp-1.4.jar:1.4]
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556) ~[commons-dbcp-1.4.jar:1.4]
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545) ~[commons-dbcp-1.4.jar:1.4]
	... 30 common frames omitted
2016-08-05 19:21:14,780 INFO  o.s.c.s.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@16e8792: startup date [Fri Aug 05 19:21:14 ICT 2016]; root of context hierarchy 
2016-08-05 19:21:14,842 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-05 19:21:15,388 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-05 19:21:15,607 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-05 19:21:15,638 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-05 19:21:15,747 INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.3.11.Final} 
2016-08-05 19:21:15,747 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-05 19:21:15,763 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-05 19:21:16,043 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.5.Final} 
2016-08-05 19:21:16,543 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-05 19:21:16,699 INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-05 19:21:17,276 INFO  o.h.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update 
2016-08-05 19:21:17,276 INFO  o.h.tool.hbm2ddl.SchemaUpdate - HHH000102: Fetching database metadata 
2016-08-05 19:21:17,276 INFO  o.h.tool.hbm2ddl.SchemaUpdate - HHH000396: Updating schema 
2016-08-05 19:21:17,291 INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: m_produk 
2016-08-05 19:21:17,323 INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: m_produk 
2016-08-05 19:21:17,338 INFO  java.sql.DatabaseMetaData - HHH000262: Table not found: m_produk 
2016-08-05 19:21:17,947 INFO  o.h.tool.hbm2ddl.SchemaUpdate - HHH000232: Schema update complete 
2016-08-05 19:22:19,588 INFO  o.s.c.s.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@16e8792: startup date [Fri Aug 05 19:22:19 ICT 2016]; root of context hierarchy 
2016-08-05 19:22:19,651 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-05 19:22:20,197 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-05 19:22:20,415 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-05 19:22:20,462 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-05 19:22:20,571 INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.3.11.Final} 
2016-08-05 19:22:20,571 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-05 19:22:20,571 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-05 19:22:20,868 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.5.Final} 
2016-08-05 19:22:21,320 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-05 19:22:21,460 INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-05 19:22:22,069 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export 
2016-08-05 19:22:22,459 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete 
2016-08-05 19:23:15,427 INFO  o.s.c.s.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@16e8792: startup date [Fri Aug 05 19:23:15 ICT 2016]; root of context hierarchy 
2016-08-05 19:23:15,489 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-05 19:23:16,035 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-05 19:23:16,254 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-05 19:23:16,300 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-05 19:23:16,394 INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.3.11.Final} 
2016-08-05 19:23:16,410 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-05 19:23:16,410 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-05 19:23:16,737 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.5.Final} 
2016-08-05 19:23:17,174 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-05 19:23:17,330 INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-05 19:23:17,892 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export 
2016-08-05 19:23:18,188 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete 
2016-08-05 19:24:44,016 INFO  o.s.c.s.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@16e8792: startup date [Fri Aug 05 19:24:44 ICT 2016]; root of context hierarchy 
2016-08-05 19:24:44,078 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-05 19:24:44,624 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-05 19:24:44,843 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-05 19:24:44,889 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-05 19:24:44,999 INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.3.11.Final} 
2016-08-05 19:24:44,999 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-05 19:24:44,999 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-05 19:24:45,279 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.5.Final} 
2016-08-05 19:24:45,732 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-05 19:24:45,872 INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-05 19:24:46,449 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export 
2016-08-05 19:24:46,824 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete 
2016-08-05 19:31:07,336 INFO  o.s.c.s.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@16e8792: startup date [Fri Aug 05 19:31:07 ICT 2016]; root of context hierarchy 
2016-08-05 19:31:07,399 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml] 
2016-08-05 19:31:07,960 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-05 19:31:08,179 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-05 19:31:08,226 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-05 19:31:08,335 INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.3.11.Final} 
2016-08-05 19:31:08,335 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-05 19:31:08,335 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-05 19:31:08,631 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.5.Final} 
2016-08-05 19:31:09,146 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-05 19:31:09,286 INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-05 19:31:09,864 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export 
2016-08-05 19:31:10,238 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete 
2016-08-05 19:35:57,890 DEBUG o.s.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence 
2016-08-05 19:35:57,890 DEBUG o.s.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence 
2016-08-05 19:35:57,890 DEBUG o.s.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] 
2016-08-05 19:35:57,890 INFO  o.s.c.s.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6e6d5e: startup date [Fri Aug 05 19:35:57 ICT 2016]; root of context hierarchy 
2016-08-05 19:35:57,937 DEBUG o.s.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence 
2016-08-05 19:35:57,937 DEBUG o.s.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence 
2016-08-05 19:35:57,937 DEBUG o.s.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] 
2016-08-05 19:35:57,953 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml] 
2016-08-05 19:35:57,953 DEBUG o.s.b.f.xml.DefaultDocumentLoader - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] 
2016-08-05 19:35:58,000 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Loading schema mappings from [META-INF/spring.schemas] 
2016-08-05 19:35:58,000 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd} 
2016-08-05 19:35:58,000 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd 
2016-08-05 19:35:58,078 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/context/spring-context-3.1.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd 
2016-08-05 19:35:58,078 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd 
2016-08-05 19:35:58,093 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd 
2016-08-05 19:35:58,093 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd] in classpath: org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd 
2016-08-05 19:35:58,093 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.0.xsd 
2016-08-05 19:35:58,109 DEBUG o.s.b.f.x.DefaultBeanDefinitionDocumentReader - Loading bean definitions 
2016-08-05 19:35:58,124 DEBUG o.s.b.f.x.DefaultNamespaceHandlerResolver - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler} 
2016-08-05 19:35:58,156 DEBUG o.s.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence 
2016-08-05 19:35:58,156 DEBUG o.s.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence 
2016-08-05 19:35:58,156 DEBUG o.s.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] 
2016-08-05 19:35:58,171 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service] 
2016-08-05 19:35:58,171 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/service/**/*.class] 
2016-08-05 19:35:58,171 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/service/**/*.class] 
2016-08-05 19:35:58,187 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/agung/template/springjpa/service/**/*.class] to resources [file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl\ProdukServiceImpl.class], file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\ProdukService.class]] 
2016-08-05 19:35:58,218 DEBUG o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl\ProdukServiceImpl.class] 
2016-08-05 19:35:58,218 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl] 
2016-08-05 19:35:58,218 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/service/impl/**/*.class] 
2016-08-05 19:35:58,218 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/agung/template/springjpa/service/impl/**/*.class] to resources [file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl\ProdukServiceImpl.class]] 
2016-08-05 19:35:58,218 DEBUG o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl\ProdukServiceImpl.class] 
2016-08-05 19:35:58,280 DEBUG o.s.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence 
2016-08-05 19:35:58,280 DEBUG o.s.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence 
2016-08-05 19:35:58,280 DEBUG o.s.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] 
2016-08-05 19:35:58,280 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in jar file [file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar] 
2016-08-05 19:35:58,296 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in jar file [file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar] 
2016-08-05 19:35:58,296 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:org/springframework/data/**/repository/support/**/*.class] to resources [URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/Querydsl$1.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$ThreadBoundTargetSource.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaPersistableEntityInformation.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider$4.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$1.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaEntityInformation.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaMetamodelEntityInformation.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaMetamodelEntityInformation$IdMetadata.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaEntityInformationSupport.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider$3.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/QueryDslRepositorySupport.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaRepositoryFactory.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$DefaultCrudMethodMetadata.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/SimpleJpaRepository.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodIntercceptor.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/Querydsl.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadata.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/EntityManagerBeanDefinitionRegistrarPostProcessor.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaMetamodelEntityInformation$IdentifierDerivingDirectFieldAccessFallbackBeanWrapper.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider$1.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/QueryDslJpaRepository.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider$2.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaRepositoryFactoryBean.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider$Constants.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/SimpleJpaRepository$ByIdsSpecification.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/Repositories$EmptyRepositoryFactoryInformation.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/DomainClassPropertyEditorRegistrar.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/CrudRepositoryInvoker.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/Repositories.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/ReflectionRepositoryInvoker.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/DomainClassPropertyEditor.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter.class]] 
2016-08-05 19:35:58,374 DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaRepositoryFactory.class] 
2016-08-05 19:35:58,421 DEBUG o.s.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence 
2016-08-05 19:35:58,436 DEBUG o.s.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence 
2016-08-05 19:35:58,436 DEBUG o.s.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] 
2016-08-05 19:35:58,436 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository] 
2016-08-05 19:35:58,436 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/repository/**/*.class] 
2016-08-05 19:35:58,436 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/agung/template/springjpa/repository/**/*.class] to resources [file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository\ProdukDao.class]] 
2016-08-05 19:35:58,436 DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository\ProdukDao.class] 
2016-08-05 19:35:58,452 DEBUG o.s.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence 
2016-08-05 19:35:58,452 DEBUG o.s.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence 
2016-08-05 19:35:58,452 DEBUG o.s.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] 
2016-08-05 19:35:58,452 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository] 
2016-08-05 19:35:58,452 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/repository/**/*ProdukDaoImpl.class] 
2016-08-05 19:35:58,452 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/agung/template/springjpa/repository/**/*ProdukDaoImpl.class] to resources [] 
2016-08-05 19:35:58,468 DEBUG o.s.d.r.c.RepositoryConfigurationDelegate - Spring Data JPA - Registering repository: produkDao - Interface: com.agung.template.springjpa.repository.ProdukDao - Factory: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean 
2016-08-05 19:35:58,468 DEBUG o.s.b.f.x.BeanDefinitionParserDelegate - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.orm.jpa.vendor.HibernateJpaDialect#134f01b] 
2016-08-05 19:35:58,468 DEBUG o.s.b.f.x.BeanDefinitionParserDelegate - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#386f16] 
2016-08-05 19:35:58,468 DEBUG o.s.b.f.xml.XmlBeanDefinitionReader - Loaded 19 bean definitions from location pattern [classpath:applicationContext.xml] 
2016-08-05 19:35:58,468 DEBUG o.s.c.s.ClassPathXmlApplicationContext - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6e6d5e: org.springframework.beans.factory.support.DefaultListableBeanFactory@3ee3a2: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,produkService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,dataSource,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,foo,jpaMappingContext,produkDao,transactionManager,entityManagerFactory]; root of factory hierarchy 
2016-08-05 19:35:58,499 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' 
2016-08-05 19:35:58,499 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' 
2016-08-05 19:35:58,514 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references 
2016-08-05 19:35:58,514 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' 
2016-08-05 19:35:58,624 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' 
2016-08-05 19:35:58,624 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' 
2016-08-05 19:35:58,624 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' to allow for resolving potential circular references 
2016-08-05 19:35:58,639 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' 
2016-08-05 19:35:58,639 DEBUG o.s.core.env.MutablePropertySources - Adding [environmentProperties] PropertySource with lowest search precedence 
2016-08-05 19:35:58,639 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-05 19:35:58,639 DEBUG o.s.core.env.MutablePropertySources - Adding [localProperties] PropertySource with lowest search precedence 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.driver' in [environmentProperties] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.driver' in [systemProperties] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.driver' in [systemEnvironment] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'jdbc.driver' in any property source. Returning [null] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.driver' in [localProperties] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'jdbc.driver' in [localProperties] with type [String] and value 'com.mysql.jdbc.Driver' 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.password' in [environmentProperties] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.password' in [systemProperties] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.password' in [systemEnvironment] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'jdbc.password' in any property source. Returning [null] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.password' in [localProperties] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'jdbc.password' in [localProperties] with type [String] and value 'root' 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.url' in [environmentProperties] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.url' in [systemProperties] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.url' in [systemEnvironment] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'jdbc.url' in any property source. Returning [null] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.url' in [localProperties] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'jdbc.url' in [localProperties] with type [String] and value 'jdbc:mysql://localhost:3306/belajar' 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.username' in [environmentProperties] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.username' in [systemProperties] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.username' in [systemEnvironment] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'jdbc.username' in any property source. Returning [null] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.username' in [localProperties] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'jdbc.username' in [localProperties] with type [String] and value 'root' 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [environmentProperties] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [systemProperties] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [systemEnvironment] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'hibernate.dialect' in any property source. Returning [null] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [localProperties] 
2016-08-05 19:35:58,655 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'hibernate.dialect' in [localProperties] with type [String] and value 'org.hibernate.dialect.MySQL5InnoDBDialect' 
2016-08-05 19:35:58,655 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'foo' 
2016-08-05 19:35:58,655 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'foo' 
2016-08-05 19:35:58,655 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'foo' to allow for resolving potential circular references 
2016-08-05 19:35:58,655 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'foo' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' to allow for resolving potential circular references 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator' 
2016-08-05 19:35:58,670 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator' 
2016-08-05 19:35:58,686 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references 
2016-08-05 19:35:58,702 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator' 
2016-08-05 19:35:58,702 DEBUG o.s.c.s.ClassPathXmlApplicationContext - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@11c00d0] 
2016-08-05 19:35:58,702 DEBUG o.s.c.s.ClassPathXmlApplicationContext - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1a2f4ec] 
2016-08-05 19:35:58,717 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'entityManagerFactory' 
2016-08-05 19:35:58,717 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'entityManagerFactory' 
2016-08-05 19:35:58,733 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references 
2016-08-05 19:35:58,748 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataSource' 
2016-08-05 19:35:58,748 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'dataSource' 
2016-08-05 19:35:58,780 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'dataSource' to allow for resolving potential circular references 
2016-08-05 19:35:58,811 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:35:58,811 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:35:58,811 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references 
2016-08-05 19:35:58,826 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' 
2016-08-05 19:35:58,826 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' 
2016-08-05 19:35:58,826 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references 
2016-08-05 19:35:58,826 DEBUG o.s.a.f.a.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:35:58,826 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' 
2016-08-05 19:35:58,826 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:35:58,842 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'dataSource' 
2016-08-05 19:35:58,842 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#386f16' 
2016-08-05 19:35:58,873 DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider 
2016-08-05 19:35:58,889 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:35:58,889 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#386f16' 
2016-08-05 19:35:58,904 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'entityManagerFactory' 
2016-08-05 19:35:58,904 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\entity] 
2016-08-05 19:35:58,904 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\entity] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/entity/**/*.class] 
2016-08-05 19:35:58,904 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/agung/template/springjpa/entity/**/*.class] to resources [file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\entity\Produk.class]] 
2016-08-05 19:35:58,904 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-05 19:35:58,936 DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@e2f2a
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.commons.dbcp.BasicDataSource@d28fa7
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.agung.template.springjpa.entity.Produk]
	Mapping files names []
	Properties [] 
2016-08-05 19:35:58,967 DEBUG o.h.i.i.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. 
2016-08-05 19:35:58,967 DEBUG o.h.i.i.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. 
2016-08-05 19:35:58,967 DEBUG o.h.i.i.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. 
2016-08-05 19:35:58,967 DEBUG o.h.i.i.IntegratorServiceImpl - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator]. 
2016-08-05 19:35:58,998 DEBUG o.h.b.r.s.i.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect]) 
2016-08-05 19:35:58,998 DEBUG o.h.b.r.s.i.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect]) 
2016-08-05 19:35:59,060 INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.3.11.Final} 
2016-08-05 19:35:59,076 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-05 19:35:59,076 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-05 19:35:59,232 DEBUG o.h.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService] 
2016-08-05 19:35:59,263 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@9f4771 
2016-08-05 19:35:59,279 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@9f4771 
2016-08-05 19:35:59,279 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@9f4771 
2016-08-05 19:35:59,279 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18d79be 
2016-08-05 19:35:59,279 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@18f0a79 
2016-08-05 19:35:59,279 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1286fb6 
2016-08-05 19:35:59,279 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1cf2fc1 
2016-08-05 19:35:59,279 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1cf2fc1 
2016-08-05 19:35:59,279 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1cf2fc1 
2016-08-05 19:35:59,279 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@435c40 
2016-08-05 19:35:59,279 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@435c40 
2016-08-05 19:35:59,279 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@435c40 
2016-08-05 19:35:59,279 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@ba6ce3 
2016-08-05 19:35:59,279 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@ba6ce3 
2016-08-05 19:35:59,279 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@ba6ce3 
2016-08-05 19:35:59,279 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1bdb894 
2016-08-05 19:35:59,279 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1bdb894 
2016-08-05 19:35:59,279 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bdb894 
2016-08-05 19:35:59,294 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1e32960 
2016-08-05 19:35:59,294 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1e32960 
2016-08-05 19:35:59,294 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e32960 
2016-08-05 19:35:59,294 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@197ad89 
2016-08-05 19:35:59,294 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@197ad89 
2016-08-05 19:35:59,294 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@197ad89 
2016-08-05 19:35:59,294 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@54d35e 
2016-08-05 19:35:59,294 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@54d35e 
2016-08-05 19:35:59,294 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54d35e 
2016-08-05 19:35:59,294 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ea68c 
2016-08-05 19:35:59,294 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ea68c 
2016-08-05 19:35:59,294 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@e50104 
2016-08-05 19:35:59,294 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@e50104 
2016-08-05 19:35:59,294 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1a37759 
2016-08-05 19:35:59,294 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1a37759 
2016-08-05 19:35:59,294 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@38ccb8 
2016-08-05 19:35:59,310 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1213651 
2016-08-05 19:35:59,310 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@15e33cc 
2016-08-05 19:35:59,310 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@15e33cc 
2016-08-05 19:35:59,310 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@122d892 
2016-08-05 19:35:59,310 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@122d892 
2016-08-05 19:35:59,310 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1e9ebae 
2016-08-05 19:35:59,310 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e9ebae 
2016-08-05 19:35:59,310 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1e731e 
2016-08-05 19:35:59,310 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e731e 
2016-08-05 19:35:59,310 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e731e 
2016-08-05 19:35:59,310 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1c407fd 
2016-08-05 19:35:59,310 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@f5c734 
2016-08-05 19:35:59,310 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f5c734 
2016-08-05 19:35:59,310 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f5c734 
2016-08-05 19:35:59,310 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@71115f 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@36060e 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@36060e 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1e68757 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e68757 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@153a5dc 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@153a5dc 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7ba306 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ba306 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@504ecd 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@504ecd 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1b669c3 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@df9280 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@191b517 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@191b517 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@191b517 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@18c99c8 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@18c99c8 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@18c99c8 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@196aeae 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1fadaff 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1fadaff 
2016-08-05 19:35:59,326 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1fadaff 
2016-08-05 19:35:59,341 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@78d320 
2016-08-05 19:35:59,341 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@78d320 
2016-08-05 19:35:59,341 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@78d320 
2016-08-05 19:35:59,341 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@c558c6 
2016-08-05 19:35:59,341 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@8c9a05 
2016-08-05 19:35:59,341 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@46d517 
2016-08-05 19:35:59,341 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46d517 
2016-08-05 19:35:59,341 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@105ae1a 
2016-08-05 19:35:59,341 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@61fe30 
2016-08-05 19:35:59,341 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@61fe30 
2016-08-05 19:35:59,357 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@c92293 
2016-08-05 19:35:59,357 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@c92293 
2016-08-05 19:35:59,357 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@df2c61 
2016-08-05 19:35:59,357 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1f0fe62 
2016-08-05 19:35:59,357 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@e86ce1 
2016-08-05 19:35:59,357 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4094a5 
2016-08-05 19:35:59,357 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4094a5 
2016-08-05 19:35:59,357 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2e0143 
2016-08-05 19:35:59,357 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7545f 
2016-08-05 19:35:59,357 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@57b96d 
2016-08-05 19:35:59,357 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c726ee 
2016-08-05 19:35:59,357 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f31dec 
2016-08-05 19:35:59,357 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@c01041 
2016-08-05 19:35:59,357 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@16f4b65 
2016-08-05 19:35:59,357 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@94fd30 
2016-08-05 19:35:59,388 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.5.Final} 
2016-08-05 19:35:59,404 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] 
2016-08-05 19:35:59,404 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] 
2016-08-05 19:35:59,404 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] 
2016-08-05 19:35:59,404 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] 
2016-08-05 19:35:59,404 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator] 
2016-08-05 19:35:59,404 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] 
2016-08-05 19:35:59,404 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] 
2016-08-05 19:35:59,404 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] 
2016-08-05 19:35:59,404 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator] 
2016-08-05 19:35:59,404 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] 
2016-08-05 19:35:59,404 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] 
2016-08-05 19:35:59,404 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] 
2016-08-05 19:35:59,404 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] 
2016-08-05 19:35:59,404 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
2016-08-05 19:35:59,419 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] 
2016-08-05 19:35:59,419 DEBUG org.hibernate.cfg.Configuration - Preparing to build session factory with filters : {} 
2016-08-05 19:35:59,856 DEBUG o.h.e.j.internal.JdbcServicesImpl - Database ->
       name : MySQL
    version : 5.6.22-log
      major : 5
      minor : 6 
2016-08-05 19:35:59,856 DEBUG o.h.e.j.internal.JdbcServicesImpl - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
      major : 5
      minor : 1 
2016-08-05 19:35:59,856 DEBUG o.h.e.j.internal.JdbcServicesImpl - JDBC version : 4.0 
2016-08-05 19:35:59,856 DEBUG o.h.e.j.c.i.StandardRefCursorSupport - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null 
2016-08-05 19:35:59,887 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-05 19:35:59,950 DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files 
2016-08-05 19:35:59,950 DEBUG org.hibernate.cfg.Configuration - Process annotated classes 
2016-08-05 19:35:59,950 DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.agung.template.springjpa.entity.Produk 
2016-08-05 19:35:59,981 DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
2016-08-05 19:35:59,981 DEBUG o.h.cfg.annotations.EntityBinder - Import with entity name Produk 
2016-08-05 19:35:59,996 DEBUG o.h.cfg.annotations.EntityBinder - Bind entity com.agung.template.springjpa.entity.Produk on table m_produk 
2016-08-05 19:36:00,012 DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(m_produk), mappingColumn=id, insertable=true, updatable=true, unique=false} 
2016-08-05 19:36:00,012 DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false 
2016-08-05 19:36:00,028 DEBUG o.h.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.agung.template.springjpa.entity.Produk:id] 
2016-08-05 19:36:00,028 DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for id 
2016-08-05 19:36:00,028 DEBUG o.h.cfg.annotations.PropertyBinder - Building property id 
2016-08-05 19:36:00,028 DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(m_produk), mappingColumn=harga, insertable=true, updatable=true, unique=false} 
2016-08-05 19:36:00,028 DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property harga with lazy=false 
2016-08-05 19:36:00,028 DEBUG o.h.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.agung.template.springjpa.entity.Produk:harga] 
2016-08-05 19:36:00,028 DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for harga 
2016-08-05 19:36:00,028 DEBUG o.h.cfg.annotations.PropertyBinder - Building property harga 
2016-08-05 19:36:00,028 DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(m_produk), mappingColumn=kode_produk, insertable=true, updatable=true, unique=true} 
2016-08-05 19:36:00,028 DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property kodeProduk with lazy=false 
2016-08-05 19:36:00,028 DEBUG o.h.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.agung.template.springjpa.entity.Produk:kodeProduk] 
2016-08-05 19:36:00,028 DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for kodeProduk 
2016-08-05 19:36:00,028 DEBUG o.h.cfg.annotations.PropertyBinder - Building property kodeProduk 
2016-08-05 19:36:00,028 DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(m_produk), mappingColumn=nama_produk, insertable=true, updatable=true, unique=false} 
2016-08-05 19:36:00,028 DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property namaProduk with lazy=false 
2016-08-05 19:36:00,028 DEBUG o.h.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.agung.template.springjpa.entity.Produk:namaProduk] 
2016-08-05 19:36:00,028 DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for namaProduk 
2016-08-05 19:36:00,028 DEBUG o.h.cfg.annotations.PropertyBinder - Building property namaProduk 
2016-08-05 19:36:00,043 DEBUG o.h.c.annotations.SimpleValueBinder - Starting fillSimpleValue for id 
2016-08-05 19:36:00,043 DEBUG o.h.c.annotations.SimpleValueBinder - Starting fillSimpleValue for harga 
2016-08-05 19:36:00,043 DEBUG o.h.c.annotations.SimpleValueBinder - Starting fillSimpleValue for kodeProduk 
2016-08-05 19:36:00,043 DEBUG o.h.c.annotations.SimpleValueBinder - Starting fillSimpleValue for namaProduk 
2016-08-05 19:36:00,043 DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass) 
2016-08-05 19:36:00,043 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-05 19:36:00,043 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-05 19:36:00,043 DEBUG org.hibernate.cfg.Configuration - Processing collection mappings 
2016-08-05 19:36:00,043 DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings 
2016-08-05 19:36:00,043 DEBUG org.hibernate.cfg.Configuration - Processing association property references 
2016-08-05 19:36:00,043 DEBUG org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers 
2016-08-05 19:36:00,043 DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints 
2016-08-05 19:36:00,043 DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver 
2016-08-05 19:36:00,043 DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] 
2016-08-05 19:36:00,043 DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
2016-08-05 19:36:00,043 DEBUG org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled 
2016-08-05 19:36:00,043 DEBUG org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch size: 15 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Wrap result sets: disabled 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - multi-tenancy strategy : NONE 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Connection release mode: auto 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Using BatchFetchStyle : LEGACY 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Maximum outer join fetch depth: 2 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Default null ordering: none 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory 
2016-08-05 19:36:00,059 INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Query language substitutions: {} 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: disabled 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Second-level cache: enabled 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Query cache: disabled 
2016-08-05 19:36:00,059 DEBUG o.h.c.i.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Second-level cache direct-reference entries: disabled 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Automatic eviction of collection cache: disabled 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Statistics: disabled 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Named query checking : enabled 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - Allow initialization of lazy state outside session : : disabled 
2016-08-05 19:36:00,059 DEBUG org.hibernate.cfg.SettingsFactory - JTA Track by Thread: enabled 
2016-08-05 19:36:00,074 DEBUG o.h.internal.SessionFactoryImpl - Building session factory 
2016-08-05 19:36:00,090 TRACE org.hibernate.type.TypeFactory - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@260766 
2016-08-05 19:36:00,106 DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} 
2016-08-05 19:36:00,106 DEBUG o.h.internal.SessionFactoryImpl - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_66\jre\bin, java.vm.version=25.66-b18, user.country.format=ID, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.8.0_66-b18, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_66\jre\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\agung\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.8.0_66\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Program Files\java\jdk1.8.0_66\bin;C:\Program Files\mvn\bin;C:\Program Files\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\;C:\Program Files\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\Doctrine extensions for PHP\;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\server\apache-tomcat-8.0.20\bin;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\VSShell\Common7\IDE\;E:\DEVELOPMENT\tool Development\apache-jmeter-2.13\bin;D:\5.PROJECK\Android_Studio_SDK\tools;D:\5.PROJECK\Android_Studio_SDK\platform-tools;C:\Program Files\nodejs\;C:\Program Files\Android\Android Studio\gradle\gradle-2.10\bin;C:\AppServ\Apache2.2\bin;C:\AppServ\php6;C:\Program Files\Microsoft VS Code\bin;C:\Users\agung\AppData\Roaming\npm;., hibernate.ejb.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, user.home=C:\Users\agung, user.timezone=Asia/Bangkok, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=Cp1252, javax.persistence.nonJtaDataSource=org.apache.commons.dbcp.BasicDataSource@d28fa7, hibernate.format_sql=true, user.name=agung, java.class.path=D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes;C:\Users\agung\.m2\repository\org\springframework\data\spring-data-jpa\1.7.3.RELEASE\spring-data-jpa-1.7.3.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\data\spring-data-commons\1.9.3.RELEASE\spring-data-commons-1.9.3.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-orm\4.0.9.RELEASE\spring-orm-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-jdbc\4.0.9.RELEASE\spring-jdbc-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-context\4.0.9.RELEASE\spring-context-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-expression\4.0.9.RELEASE\spring-expression-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-aop\4.0.9.RELEASE\spring-aop-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\agung\.m2\repository\org\springframework\spring-tx\4.0.9.RELEASE\spring-tx-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-beans\4.0.9.RELEASE\spring-beans-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-core\4.0.9.RELEASE\spring-core-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\aspectj\aspectjrt\1.8.6\aspectjrt-1.8.6.jar;C:\Users\agung\.m2\repository\org\slf4j\slf4j-api\1.7.12\slf4j-api-1.7.12.jar;C:\Users\agung\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.12\jcl-over-slf4j-1.7.12.jar;C:\Users\agung\.m2\repository\org\hibernate\hibernate-core\4.3.11.Final\hibernate-core-4.3.11.Final.jar;C:\Users\agung\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\agung\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\agung\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\agung\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\agung\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\agung\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.5.Final\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\agung\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\agung\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\agung\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\agung\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\agung\.m2\repository\org\springframework\spring-test\4.1.7.RELEASE\spring-test-4.1.7.RELEASE.jar;C:\Users\agung\.m2\repository\mysql\mysql-connector-java\5.1.35\mysql-connector-java-5.1.35.jar;C:\Users\agung\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\agung\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\agung\.m2\repository\org\hibernate\hibernate-entitymanager\4.3.10.Final\hibernate-entitymanager-4.3.10.Final.jar;C:\Users\agung\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\agung\.m2\repository\org\postgresql\postgresql\9.4.1208.jre7\postgresql-9.4.1208.jre7.jar;C:\Users\agung\.m2\repository\ch\qos\logback\logback-classic\1.1.3\logback-classic-1.1.3.jar;C:\Users\agung\.m2\repository\ch\qos\logback\logback-core\1.1.3\logback-core-1.1.3.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.8, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.8.0_66\jre, sun.java.command=com.agung.template.springjpa.Main, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, java.specification.vendor=Oracle Corporation, user.language=en, user.language.format=id, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.8.0_66, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_66\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_66\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86} 
2016-08-05 19:36:00,121 DEBUG o.h.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled 
2016-08-05 19:36:00,121 DEBUG o.h.engine.spi.CascadeStyles - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST] 
2016-08-05 19:36:00,199 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5InnoDBDialect] 
2016-08-05 19:36:00,308 DEBUG o.h.p.e.AbstractEntityPersister - Static SQL for entity: com.agung.template.springjpa.entity.Produk 
2016-08-05 19:36:00,308 DEBUG o.h.p.e.AbstractEntityPersister -  Version select: select id from m_produk where id =? 
2016-08-05 19:36:00,308 DEBUG o.h.p.e.AbstractEntityPersister -  Snapshot select: select produk_.id, produk_.harga as harga2_0_, produk_.kode_produk as kode_pro3_0_, produk_.nama_produk as nama_pro4_0_ from m_produk produk_ where produk_.id=? 
2016-08-05 19:36:00,308 DEBUG o.h.p.e.AbstractEntityPersister -  Insert 0: insert into m_produk (harga, kode_produk, nama_produk, id) values (?, ?, ?, ?) 
2016-08-05 19:36:00,308 DEBUG o.h.p.e.AbstractEntityPersister -  Update 0: update m_produk set harga=?, kode_produk=?, nama_produk=? where id=? 
2016-08-05 19:36:00,308 DEBUG o.h.p.e.AbstractEntityPersister -  Delete 0: delete from m_produk where id=? 
2016-08-05 19:36:00,340 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f8a8c3] 
2016-08-05 19:36:00,340 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:00,340 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:00,340 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:00,340 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:00,402 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:00,402 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:00,402 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [NONE]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-05 19:36:00,402 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d1ac19] 
2016-08-05 19:36:00,402 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:00,402 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:00,402 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:00,402 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:00,402 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:00,402 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:00,402 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [READ]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-05 19:36:00,402 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa4757] 
2016-08-05 19:36:00,402 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:00,402 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:00,402 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:00,402 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:00,402 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:00,402 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:00,402 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [UPGRADE]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-05 19:36:00,402 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f60d] 
2016-08-05 19:36:00,402 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:00,402 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:00,402 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:00,402 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:00,636 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [UPGRADE_NOWAIT]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e29a4] 
2016-08-05 19:36:00,636 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:00,636 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:00,636 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:00,636 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [UPGRADE_SKIPLOCKED]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18b521e] 
2016-08-05 19:36:00,636 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:00,636 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:00,636 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:00,636 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [FORCE]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fc448] 
2016-08-05 19:36:00,636 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:00,636 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:00,636 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:00,636 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [PESSIMISTIC_READ]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? lock in share mode 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8ab592] 
2016-08-05 19:36:00,636 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:00,636 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:00,636 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:00,636 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [PESSIMISTIC_WRITE]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c61eb1] 
2016-08-05 19:36:00,636 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:00,636 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:00,636 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:00,636 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:00,652 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [PESSIMISTIC_FORCE_INCREMENT]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-05 19:36:00,652 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24293c] 
2016-08-05 19:36:00,652 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:00,652 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:00,652 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:00,652 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:00,652 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:00,652 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:00,652 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [OPTIMISTIC]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-05 19:36:00,652 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74c0c] 
2016-08-05 19:36:00,652 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:00,652 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:00,652 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:00,652 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:00,652 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:00,652 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:00,652 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [OPTIMISTIC_FORCE_INCREMENT]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-05 19:36:00,667 DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.agung.template.springjpa.entity.Produk: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-05 19:36:00,667 DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.agung.template.springjpa.entity.Produk: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-05 19:36:00,948 DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1daa23d 
2016-08-05 19:36:00,948 DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 0f3f7ab3-a786-4c91-b80a-edd6141bd883 (<unnamed>) 
2016-08-05 19:36:00,948 DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured 
2016-08-05 19:36:00,948 DEBUG o.h.internal.SessionFactoryImpl - Instantiated session factory 
2016-08-05 19:36:00,964 DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files 
2016-08-05 19:36:00,964 DEBUG org.hibernate.cfg.Configuration - Process annotated classes 
2016-08-05 19:36:00,964 DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass) 
2016-08-05 19:36:00,964 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-05 19:36:00,964 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-05 19:36:00,964 DEBUG org.hibernate.cfg.Configuration - Processing collection mappings 
2016-08-05 19:36:00,964 DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings 
2016-08-05 19:36:00,964 DEBUG org.hibernate.cfg.Configuration - Processing association property references 
2016-08-05 19:36:00,964 DEBUG org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers 
2016-08-05 19:36:00,964 DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints 
2016-08-05 19:36:00,964 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5InnoDBDialect] 
2016-08-05 19:36:00,964 DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files 
2016-08-05 19:36:00,964 DEBUG org.hibernate.cfg.Configuration - Process annotated classes 
2016-08-05 19:36:00,964 DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass) 
2016-08-05 19:36:00,964 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-05 19:36:00,964 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-05 19:36:00,964 DEBUG org.hibernate.cfg.Configuration - Processing collection mappings 
2016-08-05 19:36:00,964 DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings 
2016-08-05 19:36:00,964 DEBUG org.hibernate.cfg.Configuration - Processing association property references 
2016-08-05 19:36:00,964 DEBUG org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers 
2016-08-05 19:36:00,964 DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints 
2016-08-05 19:36:00,964 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5InnoDBDialect] 
2016-08-05 19:36:00,964 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5InnoDBDialect] 
2016-08-05 19:36:00,964 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export 
2016-08-05 19:36:00,964 DEBUG o.h.tool.hbm2ddl.SchemaExport - Import file not found: /import.sql 
2016-08-05 19:36:00,964 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-05 19:36:01,088 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-05 19:36:01,213 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-05 19:36:01,322 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete 
2016-08-05 19:36:01,322 DEBUG o.h.internal.NamedQueryRepository - Checking 0 named HQL queries 
2016-08-05 19:36:01,338 DEBUG o.h.internal.NamedQueryRepository - Checking 0 named SQL queries 
2016-08-05 19:36:01,338 DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] 
2016-08-05 19:36:01,354 DEBUG o.h.j.i.s.JpaSchemaGenerator - No actions specified; doing nothing 
2016-08-05 19:36:01,400 DEBUG o.h.j.i.EntityManagerFactoryRegistry - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@183c5a5 
2016-08-05 19:36:01,400 DEBUG o.h.j.i.EntityManagerFactoryRegistry - Registering EntityManagerFactory: default  
2016-08-05 19:36:01,416 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:01,416 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'entityManagerFactory' 
2016-08-05 19:36:01,416 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3ee3a2: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,produkService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,dataSource,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,foo,jpaMappingContext,produkDao,transactionManager,entityManagerFactory,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,org.springframework.orm.jpa.SharedEntityManagerCreator#0]; root of factory hierarchy 
2016-08-05 19:36:01,416 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' 
2016-08-05 19:36:01,416 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'produkService' 
2016-08-05 19:36:01,416 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'produkService' 
2016-08-05 19:36:01,416 DEBUG o.s.b.f.a.InjectionMetadata - Registered injected element on class [com.agung.template.springjpa.service.impl.ProdukServiceImpl]: AutowiredFieldElement for private com.agung.template.springjpa.repository.ProdukDao com.agung.template.springjpa.service.impl.ProdukServiceImpl.produDao 
2016-08-05 19:36:01,416 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'produkService' to allow for resolving potential circular references 
2016-08-05 19:36:01,416 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'produkService': AutowiredFieldElement for private com.agung.template.springjpa.repository.ProdukDao com.agung.template.springjpa.service.impl.ProdukServiceImpl.produDao 
2016-08-05 19:36:01,432 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'produkDao' 
2016-08-05 19:36:01,432 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'produkDao' 
2016-08-05 19:36:01,447 DEBUG o.s.b.f.a.InjectionMetadata - Registered injected element on class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]: PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager) 
2016-08-05 19:36:01,447 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'produkDao' to allow for resolving potential circular references 
2016-08-05 19:36:01,447 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'produkDao': PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager) 
2016-08-05 19:36:01,447 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean '(inner bean)#13c7bdb' 
2016-08-05 19:36:01,447 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean '(inner bean)#19f4597' 
2016-08-05 19:36:01,463 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name '(inner bean)#19f4597' 
2016-08-05 19:36:01,463 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:01,463 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)#19f4597' 
2016-08-05 19:36:01,463 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:01,478 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:01,478 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)#13c7bdb' 
2016-08-05 19:36:01,478 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean '(inner bean)#10d80c4' 
2016-08-05 19:36:01,494 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:01,494 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)#10d80c4' 
2016-08-05 19:36:01,494 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean '(inner bean)#7f2e0f' 
2016-08-05 19:36:01,494 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory' 
2016-08-05 19:36:01,494 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:01,510 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:01,510 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)#7f2e0f' 
2016-08-05 19:36:01,510 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpaMappingContext' 
2016-08-05 19:36:01,510 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'jpaMappingContext' 
2016-08-05 19:36:01,510 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'jpaMappingContext' to allow for resolving potential circular references 
2016-08-05 19:36:01,525 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'jpaMappingContext' 
2016-08-05 19:36:01,525 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:01,525 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning eagerly cached instance of singleton bean 'jpaMappingContext' that is not fully initialized yet - a consequence of a circular reference 
2016-08-05 19:36:01,525 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory' 
2016-08-05 19:36:01,541 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'jpaMappingContext' 
2016-08-05 19:36:01,541 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:01,541 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'produkDao' 
2016-08-05 19:36:01,556 DEBUG o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation 
2016-08-05 19:36:01,634 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-05 19:36:01,650 DEBUG o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation 
2016-08-05 19:36:01,650 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-05 19:36:01,650 DEBUG o.s.a.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ThreadBoundTargetSource@4a4442 
2016-08-05 19:36:01,681 DEBUG o.s.d.j.r.query.JpaQueryFactory - Looking up query for method search 
2016-08-05 19:36:01,775 DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select p from com.agung.template.springjpa.entity.Produk p where lower(p.kodeProduk) like lower(:search) or lower(p.namaProduk) like lower(:search) order by p.namaProduk asc 
2016-08-05 19:36:01,790 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'agung'
    |  |     |  |  |  |  \-[IDENT] Node: 'template'
    |  |     |  |  |  \-[IDENT] Node: 'springjpa'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Produk'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'p'
    +-[WHERE] Node: 'where'
    |  \-[OR] Node: 'or'
    |     +-[LIKE] Node: 'like'
    |     |  +-[METHOD_CALL] Node: '('
    |     |  |  +-[IDENT] Node: 'lower'
    |     |  |  \-[EXPR_LIST] Node: 'exprList'
    |     |  |     \-[DOT] Node: '.'
    |     |  |        +-[IDENT] Node: 'p'
    |     |  |        \-[IDENT] Node: 'kodeProduk'
    |     |  \-[METHOD_CALL] Node: '('
    |     |     +-[IDENT] Node: 'lower'
    |     |     \-[EXPR_LIST] Node: 'exprList'
    |     |        \-[COLON] Node: ':'
    |     |           \-[IDENT] Node: 'search'
    |     \-[LIKE] Node: 'like'
    |        +-[METHOD_CALL] Node: '('
    |        |  +-[IDENT] Node: 'lower'
    |        |  \-[EXPR_LIST] Node: 'exprList'
    |        |     \-[DOT] Node: '.'
    |        |        +-[IDENT] Node: 'p'
    |        |        \-[IDENT] Node: 'namaProduk'
    |        \-[METHOD_CALL] Node: '('
    |           +-[IDENT] Node: 'lower'
    |           \-[EXPR_LIST] Node: 'exprList'
    |              \-[COLON] Node: ':'
    |                 \-[IDENT] Node: 'search'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'p'
       |  \-[IDENT] Node: 'namaProduk'
       \-[ASCENDING] Node: 'asc'
 
2016-08-05 19:36:01,790 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-05 19:36:01,822 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select] 
2016-08-05 19:36:01,837 DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.agung.template.springjpa.entity.Produk (p) -> produk0_ 
2016-08-05 19:36:01,837 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-05 19:36:01,837 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-05 19:36:01,837 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : kodeProduk -> org.hibernate.type.StringType@1a37759 
2016-08-05 19:36:01,837 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p.kodeProduk -> produk0_.kode_produk 
2016-08-05 19:36:01,853 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-05 19:36:01,853 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : namaProduk -> org.hibernate.type.StringType@1a37759 
2016-08-05 19:36:01,853 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p.namaProduk -> produk0_.nama_produk 
2016-08-05 19:36:01,853 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-05 19:36:01,853 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : namaProduk -> org.hibernate.type.StringType@1a37759 
2016-08-05 19:36:01,853 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p.namaProduk -> produk0_.nama_produk 
2016-08-05 19:36:01,853 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select] 
2016-08-05 19:36:01,853 DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} produk0_.id ) ( FromClause{level=1} m_produk produk0_ ) ( where ( or ( like ( ( lower ( exprList ( produk0_.kode_produk produk0_.id kodeProduk ) ) ) ( ( lower ( exprList ? ) ) ) ( like ( ( lower ( exprList ( produk0_.nama_produk produk0_.id namaProduk ) ) ) ( ( lower ( exprList ? ) ) ) ) ) ( order ( produk0_.nama_produk produk0_.id namaProduk ) asc ) ) 
2016-08-05 19:36:01,868 DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [m_produk produk0_] 
2016-08-05 19:36:01,868 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select] 
2016-08-05 19:36:01,868 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (m_produk)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'produk0_.id as id1_0_' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
    |  \-[SQL_TOKEN] SqlFragment: 'produk0_.harga as harga2_0_, produk0_.kode_produk as kode_pro3_0_, produk0_.nama_produk as nama_pro4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[produk0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'm_produk produk0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=m_produk,tableAlias=produk0_,origin=null,columns={,className=com.agung.template.springjpa.entity.Produk}}
    +-[WHERE] SqlNode: 'where'
    |  \-[OR] SqlNode: 'or'
    |     +-[LIKE] BinaryLogicOperatorNode: 'like'
    |     |  +-[METHOD_CALL] MethodNode: '('
    |     |  |  +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
    |     |  |  \-[EXPR_LIST] SqlNode: 'exprList'
    |     |  |     \-[DOT] DotNode: 'produk0_.kode_produk' {propertyName=kodeProduk,dereferenceType=PRIMITIVE,getPropertyPath=kodeProduk,path=p.kodeProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=p}
    |     |  |        +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
    |     |  |        \-[IDENT] IdentNode: 'kodeProduk' {originalText=kodeProduk}
    |     |  \-[METHOD_CALL] MethodNode: '('
    |     |     +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
    |     |     \-[EXPR_LIST] SqlNode: 'exprList'
    |     |        \-[NAMED_PARAM] ParameterNode: '?' {name=search, expectedType=null}
    |     \-[LIKE] BinaryLogicOperatorNode: 'like'
    |        +-[METHOD_CALL] MethodNode: '('
    |        |  +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
    |        |  \-[EXPR_LIST] SqlNode: 'exprList'
    |        |     \-[DOT] DotNode: 'produk0_.nama_produk' {propertyName=namaProduk,dereferenceType=PRIMITIVE,getPropertyPath=namaProduk,path=p.namaProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=p}
    |        |        +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
    |        |        \-[IDENT] IdentNode: 'namaProduk' {originalText=namaProduk}
    |        \-[METHOD_CALL] MethodNode: '('
    |           +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
    |           \-[EXPR_LIST] SqlNode: 'exprList'
    |              \-[NAMED_PARAM] ParameterNode: '?' {name=search, expectedType=null}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'produk0_.nama_produk' {propertyName=namaProduk,dereferenceType=PRIMITIVE,getPropertyPath=namaProduk,path=p.namaProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=p}
       |  +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
       |  \-[IDENT] IdentNode: 'namaProduk' {originalText=namaProduk}
       \-[ASCENDING] SqlNode: 'asc'
 
2016-08-05 19:36:01,868 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-05 19:36:01,868 DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select p from com.agung.template.springjpa.entity.Produk p where lower(p.kodeProduk) like lower(:search) or lower(p.namaProduk) like lower(:search) order by p.namaProduk asc 
2016-08-05 19:36:01,868 DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select produk0_.id as id1_0_, produk0_.harga as harga2_0_, produk0_.kode_produk as kode_pro3_0_, produk0_.nama_produk as nama_pro4_0_ from m_produk produk0_ where lower(produk0_.kode_produk) like lower(?) or lower(produk0_.nama_produk) like lower(?) order by produk0_.nama_produk asc 
2016-08-05 19:36:01,868 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-05 19:36:01,884 DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select count(p) from com.agung.template.springjpa.entity.Produk p where lower(p.kodeProduk) like lower(:search) or lower(p.namaProduk) like lower(:search) 
2016-08-05 19:36:01,884 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'agung'
    |  |     |  |  |  |  \-[IDENT] Node: 'template'
    |  |     |  |  |  \-[IDENT] Node: 'springjpa'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Produk'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[LIKE] Node: 'like'
          |  +-[METHOD_CALL] Node: '('
          |  |  +-[IDENT] Node: 'lower'
          |  |  \-[EXPR_LIST] Node: 'exprList'
          |  |     \-[DOT] Node: '.'
          |  |        +-[IDENT] Node: 'p'
          |  |        \-[IDENT] Node: 'kodeProduk'
          |  \-[METHOD_CALL] Node: '('
          |     +-[IDENT] Node: 'lower'
          |     \-[EXPR_LIST] Node: 'exprList'
          |        \-[COLON] Node: ':'
          |           \-[IDENT] Node: 'search'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'lower'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'p'
             |        \-[IDENT] Node: 'namaProduk'
             \-[METHOD_CALL] Node: '('
                +-[IDENT] Node: 'lower'
                \-[EXPR_LIST] Node: 'exprList'
                   \-[COLON] Node: ':'
                      \-[IDENT] Node: 'search'
 
2016-08-05 19:36:01,884 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-05 19:36:01,884 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select] 
2016-08-05 19:36:01,884 DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.agung.template.springjpa.entity.Produk (p) -> produk0_ 
2016-08-05 19:36:01,884 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-05 19:36:01,884 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-05 19:36:01,884 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : kodeProduk -> org.hibernate.type.StringType@1a37759 
2016-08-05 19:36:01,884 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p.kodeProduk -> produk0_.kode_produk 
2016-08-05 19:36:01,884 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-05 19:36:01,884 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : namaProduk -> org.hibernate.type.StringType@1a37759 
2016-08-05 19:36:01,884 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p.namaProduk -> produk0_.nama_produk 
2016-08-05 19:36:01,884 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select] 
2016-08-05 19:36:01,900 DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( count produk0_.id ) ) ( FromClause{level=1} m_produk produk0_ ) ( where ( or ( like ( ( lower ( exprList ( produk0_.kode_produk produk0_.id kodeProduk ) ) ) ( ( lower ( exprList ? ) ) ) ( like ( ( lower ( exprList ( produk0_.nama_produk produk0_.id namaProduk ) ) ) ( ( lower ( exprList ? ) ) ) ) ) ) 
2016-08-05 19:36:01,900 DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [m_produk produk0_] 
2016-08-05 19:36:01,900 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select] 
2016-08-05 19:36:01,900 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (m_produk)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[produk0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'm_produk produk0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=m_produk,tableAlias=produk0_,origin=null,columns={,className=com.agung.template.springjpa.entity.Produk}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[METHOD_CALL] MethodNode: '('
          |  |  +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
          |  |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     \-[DOT] DotNode: 'produk0_.kode_produk' {propertyName=kodeProduk,dereferenceType=PRIMITIVE,getPropertyPath=kodeProduk,path=p.kodeProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=p}
          |  |        +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
          |  |        \-[IDENT] IdentNode: 'kodeProduk' {originalText=kodeProduk}
          |  \-[METHOD_CALL] MethodNode: '('
          |     +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
          |     \-[EXPR_LIST] SqlNode: 'exprList'
          |        \-[NAMED_PARAM] ParameterNode: '?' {name=search, expectedType=null}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'produk0_.nama_produk' {propertyName=namaProduk,dereferenceType=PRIMITIVE,getPropertyPath=namaProduk,path=p.namaProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=p}
             |        +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
             |        \-[IDENT] IdentNode: 'namaProduk' {originalText=namaProduk}
             \-[METHOD_CALL] MethodNode: '('
                +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
                \-[EXPR_LIST] SqlNode: 'exprList'
                   \-[NAMED_PARAM] ParameterNode: '?' {name=search, expectedType=null}
 
2016-08-05 19:36:01,900 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-05 19:36:01,900 DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select count(p) from com.agung.template.springjpa.entity.Produk p where lower(p.kodeProduk) like lower(:search) or lower(p.namaProduk) like lower(:search) 
2016-08-05 19:36:01,900 DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select count(produk0_.id) as col_0_0_ from m_produk produk0_ where lower(produk0_.kode_produk) like lower(?) or lower(produk0_.nama_produk) like lower(?) 
2016-08-05 19:36:01,900 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-05 19:36:01,900 DEBUG o.s.d.j.r.query.JpaQueryFactory - Looking up query for method findByKodeProduk 
2016-08-05 19:36:01,900 DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Produk.findByKodeProduk 
2016-08-05 19:36:01,900 DEBUG o.h.j.spi.AbstractEntityManagerImpl - Mark transaction for rollback 
2016-08-05 19:36:01,900 DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Produk.findByKodeProduk 
2016-08-05 19:36:01,915 DEBUG o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation 
2016-08-05 19:36:01,915 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-05 19:36:01,946 DEBUG o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation 
2016-08-05 19:36:01,946 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-05 19:36:01,946 DEBUG o.s.a.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.jpa.repository.support.SimpleJpaRepository@7cfcbb] 
2016-08-05 19:36:01,946 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:01,946 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'produkDao' 
2016-08-05 19:36:01,946 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:01,946 DEBUG o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'produkService' to bean named 'produkDao' 
2016-08-05 19:36:01,946 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:01,946 DEBUG o.s.t.a.AnnotationTransactionAttributeSource - Adding transactional method 'ProdukServiceImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '' 
2016-08-05 19:36:01,946 DEBUG o.s.a.f.a.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'produkService' with 0 common interceptors and 1 specific interceptors 
2016-08-05 19:36:01,946 DEBUG o.s.a.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.agung.template.springjpa.service.impl.ProdukServiceImpl@fabd0f] 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'produkService' 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator' 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0' 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource' 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'foo' 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'jpaMappingContext' 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'produkDao' 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager' 
2016-08-05 19:36:01,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'transactionManager' 
2016-08-05 19:36:01,978 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references 
2016-08-05 19:36:01,978 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory' 
2016-08-05 19:36:01,978 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaDialect#134f01b' 
2016-08-05 19:36:02,009 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:02,009 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaDialect#134f01b' 
2016-08-05 19:36:02,009 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionManager' 
2016-08-05 19:36:02,009 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:02,009 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'transactionManager' 
2016-08-05 19:36:02,009 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory' 
2016-08-05 19:36:02,009 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' 
2016-08-05 19:36:02,009 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' 
2016-08-05 19:36:02,009 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.orm.jpa.SharedEntityManagerCreator#0' 
2016-08-05 19:36:02,009 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.orm.jpa.SharedEntityManagerCreator#0' 
2016-08-05 19:36:02,009 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory' 
2016-08-05 19:36:02,009 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.orm.jpa.SharedEntityManagerCreator#0' to allow for resolving potential circular references 
2016-08-05 19:36:02,009 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:02,009 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.orm.jpa.SharedEntityManagerCreator#0' 
2016-08-05 19:36:02,009 DEBUG o.s.c.s.ClassPathXmlApplicationContext - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1d7bfb3] 
2016-08-05 19:36:02,009 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor' 
2016-08-05 19:36:02,009 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] 
2016-08-05 19:36:02,009 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] 
2016-08-05 19:36:02,009 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] 
2016-08-05 19:36:02,009 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'produkService' 
2016-08-05 19:36:39,704 DEBUG o.s.t.c.j.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class com.agung.template.springjpa.produktest.ProdukDaoTest]. 
2016-08-05 19:36:39,736 DEBUG o.s.test.context.BootstrapUtils - Instantiating TestContextBootstrapper from class [org.springframework.test.context.support.DefaultTestContextBootstrapper] 
2016-08-05 19:36:39,782 DEBUG o.s.t.c.s.AbstractDelegatingSmartContextLoader - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@765367 declaringClass = 'com.agung.template.springjpa.produktest.ProdukDaoTest', classes = '{}', locations = '{classpath*:applicationContext.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']. 
2016-08-05 19:36:39,782 DEBUG o.s.t.c.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-05 19:36:39,798 DEBUG o.s.t.c.s.DefaultTestContextBootstrapper - @TestExecutionListeners is not present for class [com.agung.template.springjpa.produktest.ProdukDaoTest]: using defaults. 
2016-08-05 19:36:39,798 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-05 19:36:39,829 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-05 19:36:39,829 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@eebfca, org.springframework.test.context.support.DirtiesContextTestExecutionListener@718207, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1371b2d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3c6f6d] 
2016-08-05 19:36:39,829 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-05 19:36:39,829 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-05 19:36:39,829 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-05 19:36:39,829 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-05 19:36:39,829 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-05 19:36:39,829 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-05 19:36:39,845 DEBUG o.s.t.c.s.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = com.agung.template.springjpa.produktest.ProdukDaoTest@3fc542, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]. 
2016-08-05 19:36:39,845 DEBUG o.s.t.c.s.AbstractDelegatingSmartContextLoader - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]. 
2016-08-05 19:36:39,845 DEBUG o.s.t.c.s.AbstractGenericContextLoader - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]. 
2016-08-05 19:36:39,954 DEBUG o.s.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence 
2016-08-05 19:36:39,954 DEBUG o.s.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence 
2016-08-05 19:36:39,954 DEBUG o.s.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] 
2016-08-05 19:36:39,970 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-05 19:36:39,970 DEBUG o.s.b.f.xml.DefaultDocumentLoader - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] 
2016-08-05 19:36:40,016 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Loading schema mappings from [META-INF/spring.schemas] 
2016-08-05 19:36:40,016 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd} 
2016-08-05 19:36:40,048 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd 
2016-08-05 19:36:40,110 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/context/spring-context-3.1.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd 
2016-08-05 19:36:40,110 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd 
2016-08-05 19:36:40,110 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd 
2016-08-05 19:36:40,126 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd] in classpath: org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd 
2016-08-05 19:36:40,126 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.0.xsd 
2016-08-05 19:36:40,141 DEBUG o.s.b.f.x.DefaultBeanDefinitionDocumentReader - Loading bean definitions 
2016-08-05 19:36:40,157 DEBUG o.s.b.f.x.DefaultNamespaceHandlerResolver - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler} 
2016-08-05 19:36:40,188 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service] 
2016-08-05 19:36:40,188 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/service/**/*.class] 
2016-08-05 19:36:40,188 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/service/**/*.class] 
2016-08-05 19:36:40,188 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/agung/template/springjpa/service/**/*.class] to resources [file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl\ProdukServiceImpl.class], file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\ProdukService.class]] 
2016-08-05 19:36:40,219 DEBUG o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl\ProdukServiceImpl.class] 
2016-08-05 19:36:40,235 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl] 
2016-08-05 19:36:40,235 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/service/impl/**/*.class] 
2016-08-05 19:36:40,235 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/agung/template/springjpa/service/impl/**/*.class] to resources [file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl\ProdukServiceImpl.class]] 
2016-08-05 19:36:40,235 DEBUG o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl\ProdukServiceImpl.class] 
2016-08-05 19:36:40,282 DEBUG o.s.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence 
2016-08-05 19:36:40,282 DEBUG o.s.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence 
2016-08-05 19:36:40,282 DEBUG o.s.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] 
2016-08-05 19:36:40,297 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in jar file [file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar] 
2016-08-05 19:36:40,297 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in jar file [file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar] 
2016-08-05 19:36:40,313 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:org/springframework/data/**/repository/support/**/*.class] to resources [URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/Querydsl$1.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$ThreadBoundTargetSource.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaPersistableEntityInformation.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider$4.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$1.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaEntityInformation.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaMetamodelEntityInformation.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaMetamodelEntityInformation$IdMetadata.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaEntityInformationSupport.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider$3.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/QueryDslRepositorySupport.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaRepositoryFactory.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$DefaultCrudMethodMetadata.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/SimpleJpaRepository.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodIntercceptor.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/Querydsl.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadata.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/EntityManagerBeanDefinitionRegistrarPostProcessor.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaMetamodelEntityInformation$IdentifierDerivingDirectFieldAccessFallbackBeanWrapper.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider$1.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/QueryDslJpaRepository.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider$2.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaRepositoryFactoryBean.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider$Constants.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/SimpleJpaRepository$ByIdsSpecification.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/Repositories$EmptyRepositoryFactoryInformation.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/DomainClassPropertyEditorRegistrar.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/CrudRepositoryInvoker.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/Repositories.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/ReflectionRepositoryInvoker.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/DomainClassPropertyEditor.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter.class]] 
2016-08-05 19:36:40,344 DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaRepositoryFactory.class] 
2016-08-05 19:36:40,391 DEBUG o.s.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence 
2016-08-05 19:36:40,391 DEBUG o.s.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence 
2016-08-05 19:36:40,391 DEBUG o.s.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] 
2016-08-05 19:36:40,406 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository] 
2016-08-05 19:36:40,406 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/repository/**/*.class] 
2016-08-05 19:36:40,406 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/agung/template/springjpa/repository/**/*.class] to resources [file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository\ProdukDao.class]] 
2016-08-05 19:36:40,406 DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository\ProdukDao.class] 
2016-08-05 19:36:40,406 DEBUG o.s.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence 
2016-08-05 19:36:40,406 DEBUG o.s.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence 
2016-08-05 19:36:40,422 DEBUG o.s.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] 
2016-08-05 19:36:40,422 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository] 
2016-08-05 19:36:40,422 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/repository/**/*ProdukDaoImpl.class] 
2016-08-05 19:36:40,422 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/agung/template/springjpa/repository/**/*ProdukDaoImpl.class] to resources [] 
2016-08-05 19:36:40,438 DEBUG o.s.d.r.c.RepositoryConfigurationDelegate - Spring Data JPA - Registering repository: produkDao - Interface: com.agung.template.springjpa.repository.ProdukDao - Factory: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean 
2016-08-05 19:36:40,438 DEBUG o.s.b.f.x.BeanDefinitionParserDelegate - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.orm.jpa.vendor.HibernateJpaDialect#d7f8b4] 
2016-08-05 19:36:40,438 DEBUG o.s.b.f.x.BeanDefinitionParserDelegate - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#1883b97] 
2016-08-05 19:36:40,438 DEBUG o.s.b.f.xml.XmlBeanDefinitionReader - Loaded 19 bean definitions from location pattern [classpath*:applicationContext.xml] 
2016-08-05 19:36:40,438 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@123a213: startup date [Fri Aug 05 19:36:40 ICT 2016]; root of context hierarchy 
2016-08-05 19:36:40,438 DEBUG o.s.c.s.GenericApplicationContext - Bean factory for org.springframework.context.support.GenericApplicationContext@123a213: org.springframework.beans.factory.support.DefaultListableBeanFactory@3958e7: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,produkService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,dataSource,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,foo,jpaMappingContext,produkDao,transactionManager,entityManagerFactory]; root of factory hierarchy 
2016-08-05 19:36:40,469 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' 
2016-08-05 19:36:40,469 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' 
2016-08-05 19:36:40,484 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references 
2016-08-05 19:36:40,484 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' 
2016-08-05 19:36:40,531 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' 
2016-08-05 19:36:40,531 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' 
2016-08-05 19:36:40,547 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' to allow for resolving potential circular references 
2016-08-05 19:36:40,578 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' 
2016-08-05 19:36:40,578 DEBUG o.s.core.env.MutablePropertySources - Adding [environmentProperties] PropertySource with lowest search precedence 
2016-08-05 19:36:40,578 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-05 19:36:40,578 DEBUG o.s.core.env.MutablePropertySources - Adding [localProperties] PropertySource with lowest search precedence 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.driver' in [environmentProperties] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.driver' in [systemProperties] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.driver' in [systemEnvironment] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'jdbc.driver' in any property source. Returning [null] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.driver' in [localProperties] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'jdbc.driver' in [localProperties] with type [String] and value 'com.mysql.jdbc.Driver' 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.password' in [environmentProperties] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.password' in [systemProperties] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.password' in [systemEnvironment] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'jdbc.password' in any property source. Returning [null] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.password' in [localProperties] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'jdbc.password' in [localProperties] with type [String] and value 'root' 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.url' in [environmentProperties] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.url' in [systemProperties] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.url' in [systemEnvironment] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'jdbc.url' in any property source. Returning [null] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.url' in [localProperties] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'jdbc.url' in [localProperties] with type [String] and value 'jdbc:mysql://localhost:3306/belajar' 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.username' in [environmentProperties] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.username' in [systemProperties] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.username' in [systemEnvironment] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'jdbc.username' in any property source. Returning [null] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.username' in [localProperties] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'jdbc.username' in [localProperties] with type [String] and value 'root' 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [environmentProperties] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [systemProperties] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [systemEnvironment] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'hibernate.dialect' in any property source. Returning [null] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [localProperties] 
2016-08-05 19:36:40,578 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'hibernate.dialect' in [localProperties] with type [String] and value 'org.hibernate.dialect.MySQL5InnoDBDialect' 
2016-08-05 19:36:40,594 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'foo' 
2016-08-05 19:36:40,594 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'foo' 
2016-08-05 19:36:40,594 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'foo' to allow for resolving potential circular references 
2016-08-05 19:36:40,594 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'foo' 
2016-08-05 19:36:40,594 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' 
2016-08-05 19:36:40,594 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' 
2016-08-05 19:36:40,594 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references 
2016-08-05 19:36:40,594 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' 
2016-08-05 19:36:40,594 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' 
2016-08-05 19:36:40,594 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' 
2016-08-05 19:36:40,594 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references 
2016-08-05 19:36:40,594 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' 
2016-08-05 19:36:40,594 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' 
2016-08-05 19:36:40,594 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' to allow for resolving potential circular references 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator' 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator' 
2016-08-05 19:36:40,609 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references 
2016-08-05 19:36:40,625 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator' 
2016-08-05 19:36:40,625 DEBUG o.s.c.s.GenericApplicationContext - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1e2e487] 
2016-08-05 19:36:40,640 DEBUG o.s.c.s.GenericApplicationContext - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1c54ad4] 
2016-08-05 19:36:40,640 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'entityManagerFactory' 
2016-08-05 19:36:40,640 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'entityManagerFactory' 
2016-08-05 19:36:40,656 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references 
2016-08-05 19:36:40,687 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataSource' 
2016-08-05 19:36:40,687 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'dataSource' 
2016-08-05 19:36:40,703 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'dataSource' to allow for resolving potential circular references 
2016-08-05 19:36:40,718 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:40,718 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:40,734 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references 
2016-08-05 19:36:40,734 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' 
2016-08-05 19:36:40,734 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' 
2016-08-05 19:36:40,734 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references 
2016-08-05 19:36:40,750 DEBUG o.s.a.f.a.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:40,750 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' 
2016-08-05 19:36:40,750 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:40,750 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'dataSource' 
2016-08-05 19:36:40,750 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#1883b97' 
2016-08-05 19:36:40,796 DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider 
2016-08-05 19:36:40,812 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:40,812 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#1883b97' 
2016-08-05 19:36:40,812 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'entityManagerFactory' 
2016-08-05 19:36:40,828 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\entity] 
2016-08-05 19:36:40,828 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\entity] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/entity/**/*.class] 
2016-08-05 19:36:40,828 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/agung/template/springjpa/entity/**/*.class] to resources [file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\entity\Produk.class]] 
2016-08-05 19:36:40,828 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-05 19:36:40,859 DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@1b84c92
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.commons.dbcp.BasicDataSource@4f4a5c
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.agung.template.springjpa.entity.Produk]
	Mapping files names []
	Properties [] 
2016-08-05 19:36:40,890 DEBUG o.h.i.i.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. 
2016-08-05 19:36:40,890 DEBUG o.h.i.i.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. 
2016-08-05 19:36:40,890 DEBUG o.h.i.i.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. 
2016-08-05 19:36:40,890 DEBUG o.h.i.i.IntegratorServiceImpl - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator]. 
2016-08-05 19:36:40,906 DEBUG o.h.b.r.s.i.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect]) 
2016-08-05 19:36:40,906 DEBUG o.h.b.r.s.i.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect]) 
2016-08-05 19:36:40,968 INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.3.11.Final} 
2016-08-05 19:36:40,968 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-05 19:36:40,968 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-05 19:36:41,124 DEBUG o.h.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService] 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@414e40 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@414e40 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@414e40 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@383390 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6c1270 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1ee4f1b 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@17cf65c 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@17cf65c 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17cf65c 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1862f56 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1862f56 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1862f56 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1fe57a9 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1fe57a9 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1fe57a9 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@12535ff 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@12535ff 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@12535ff 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@41a47d 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@41a47d 
2016-08-05 19:36:41,171 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@41a47d 
2016-08-05 19:36:41,186 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1d426b5 
2016-08-05 19:36:41,186 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1d426b5 
2016-08-05 19:36:41,186 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1d426b5 
2016-08-05 19:36:41,186 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2ff723 
2016-08-05 19:36:41,186 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2ff723 
2016-08-05 19:36:41,186 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2ff723 
2016-08-05 19:36:41,186 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1798ca7 
2016-08-05 19:36:41,186 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1798ca7 
2016-08-05 19:36:41,186 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@448449 
2016-08-05 19:36:41,186 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@448449 
2016-08-05 19:36:41,186 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1c995f4 
2016-08-05 19:36:41,186 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1c995f4 
2016-08-05 19:36:41,186 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1f6226d 
2016-08-05 19:36:41,186 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@14c1d96 
2016-08-05 19:36:41,186 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@884e4b 
2016-08-05 19:36:41,186 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@884e4b 
2016-08-05 19:36:41,186 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@eb909f 
2016-08-05 19:36:41,186 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@eb909f 
2016-08-05 19:36:41,202 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1d9b21f 
2016-08-05 19:36:41,202 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1d9b21f 
2016-08-05 19:36:41,202 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7ef2e0 
2016-08-05 19:36:41,202 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7ef2e0 
2016-08-05 19:36:41,202 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7ef2e0 
2016-08-05 19:36:41,202 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@636ea3 
2016-08-05 19:36:41,202 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1f8276e 
2016-08-05 19:36:41,202 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1f8276e 
2016-08-05 19:36:41,202 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1f8276e 
2016-08-05 19:36:41,202 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1be2511 
2016-08-05 19:36:41,202 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1d02341 
2016-08-05 19:36:41,202 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d02341 
2016-08-05 19:36:41,202 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2eb8aa 
2016-08-05 19:36:41,202 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2eb8aa 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@16690c0 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@16690c0 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@f6a5f9 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f6a5f9 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1304a40 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1304a40 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1351f41 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@15f10b2 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@30646a 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@30646a 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@30646a 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@14df0a4 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@14df0a4 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@14df0a4 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1f95696 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1653e16 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1653e16 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1653e16 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e1ce85 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e1ce85 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e1ce85 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@10a1967 
2016-08-05 19:36:41,218 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@16f63f6 
2016-08-05 19:36:41,233 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1d2400d 
2016-08-05 19:36:41,233 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1d2400d 
2016-08-05 19:36:41,233 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1202a3a 
2016-08-05 19:36:41,233 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1ec38b 
2016-08-05 19:36:41,233 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ec38b 
2016-08-05 19:36:41,233 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2e560f 
2016-08-05 19:36:41,233 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2e560f 
2016-08-05 19:36:41,249 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1730606 
2016-08-05 19:36:41,249 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@16fd5e 
2016-08-05 19:36:41,249 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@ac4250 
2016-08-05 19:36:41,249 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@8e8225 
2016-08-05 19:36:41,249 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@8e8225 
2016-08-05 19:36:41,249 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7bdeb 
2016-08-05 19:36:41,249 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@c28d64 
2016-08-05 19:36:41,249 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@92fab5 
2016-08-05 19:36:41,249 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5529ab 
2016-08-05 19:36:41,249 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1a8312f 
2016-08-05 19:36:41,249 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@16722d3 
2016-08-05 19:36:41,249 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@532cd8 
2016-08-05 19:36:41,249 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@14e5088 
2016-08-05 19:36:41,280 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.5.Final} 
2016-08-05 19:36:41,296 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] 
2016-08-05 19:36:41,296 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] 
2016-08-05 19:36:41,296 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] 
2016-08-05 19:36:41,296 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] 
2016-08-05 19:36:41,296 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator] 
2016-08-05 19:36:41,296 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] 
2016-08-05 19:36:41,296 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] 
2016-08-05 19:36:41,296 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] 
2016-08-05 19:36:41,296 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator] 
2016-08-05 19:36:41,296 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] 
2016-08-05 19:36:41,296 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] 
2016-08-05 19:36:41,296 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] 
2016-08-05 19:36:41,296 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] 
2016-08-05 19:36:41,296 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
2016-08-05 19:36:41,296 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] 
2016-08-05 19:36:41,311 DEBUG org.hibernate.cfg.Configuration - Preparing to build session factory with filters : {} 
2016-08-05 19:36:41,686 DEBUG o.h.e.j.internal.JdbcServicesImpl - Database ->
       name : MySQL
    version : 5.6.22-log
      major : 5
      minor : 6 
2016-08-05 19:36:41,701 DEBUG o.h.e.j.internal.JdbcServicesImpl - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
      major : 5
      minor : 1 
2016-08-05 19:36:41,701 DEBUG o.h.e.j.internal.JdbcServicesImpl - JDBC version : 4.0 
2016-08-05 19:36:41,701 DEBUG o.h.e.j.c.i.StandardRefCursorSupport - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null 
2016-08-05 19:36:41,732 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-05 19:36:41,795 DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files 
2016-08-05 19:36:41,795 DEBUG org.hibernate.cfg.Configuration - Process annotated classes 
2016-08-05 19:36:41,795 DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.agung.template.springjpa.entity.Produk 
2016-08-05 19:36:41,826 DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
2016-08-05 19:36:41,842 DEBUG o.h.cfg.annotations.EntityBinder - Import with entity name Produk 
2016-08-05 19:36:41,842 DEBUG o.h.cfg.annotations.EntityBinder - Bind entity com.agung.template.springjpa.entity.Produk on table m_produk 
2016-08-05 19:36:41,857 DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(m_produk), mappingColumn=id, insertable=true, updatable=true, unique=false} 
2016-08-05 19:36:41,873 DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false 
2016-08-05 19:36:41,873 DEBUG o.h.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.agung.template.springjpa.entity.Produk:id] 
2016-08-05 19:36:41,873 DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for id 
2016-08-05 19:36:41,873 DEBUG o.h.cfg.annotations.PropertyBinder - Building property id 
2016-08-05 19:36:41,873 DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(m_produk), mappingColumn=harga, insertable=true, updatable=true, unique=false} 
2016-08-05 19:36:41,873 DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property harga with lazy=false 
2016-08-05 19:36:41,873 DEBUG o.h.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.agung.template.springjpa.entity.Produk:harga] 
2016-08-05 19:36:41,873 DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for harga 
2016-08-05 19:36:41,873 DEBUG o.h.cfg.annotations.PropertyBinder - Building property harga 
2016-08-05 19:36:41,873 DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(m_produk), mappingColumn=kode_produk, insertable=true, updatable=true, unique=true} 
2016-08-05 19:36:41,888 DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property kodeProduk with lazy=false 
2016-08-05 19:36:41,888 DEBUG o.h.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.agung.template.springjpa.entity.Produk:kodeProduk] 
2016-08-05 19:36:41,888 DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for kodeProduk 
2016-08-05 19:36:41,888 DEBUG o.h.cfg.annotations.PropertyBinder - Building property kodeProduk 
2016-08-05 19:36:41,888 DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(m_produk), mappingColumn=nama_produk, insertable=true, updatable=true, unique=false} 
2016-08-05 19:36:41,888 DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property namaProduk with lazy=false 
2016-08-05 19:36:41,888 DEBUG o.h.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.agung.template.springjpa.entity.Produk:namaProduk] 
2016-08-05 19:36:41,888 DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for namaProduk 
2016-08-05 19:36:41,888 DEBUG o.h.cfg.annotations.PropertyBinder - Building property namaProduk 
2016-08-05 19:36:41,888 DEBUG o.h.c.annotations.SimpleValueBinder - Starting fillSimpleValue for id 
2016-08-05 19:36:41,888 DEBUG o.h.c.annotations.SimpleValueBinder - Starting fillSimpleValue for harga 
2016-08-05 19:36:41,888 DEBUG o.h.c.annotations.SimpleValueBinder - Starting fillSimpleValue for kodeProduk 
2016-08-05 19:36:41,888 DEBUG o.h.c.annotations.SimpleValueBinder - Starting fillSimpleValue for namaProduk 
2016-08-05 19:36:41,888 DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass) 
2016-08-05 19:36:41,888 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-05 19:36:41,888 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-05 19:36:41,888 DEBUG org.hibernate.cfg.Configuration - Processing collection mappings 
2016-08-05 19:36:41,888 DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings 
2016-08-05 19:36:41,888 DEBUG org.hibernate.cfg.Configuration - Processing association property references 
2016-08-05 19:36:41,888 DEBUG org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers 
2016-08-05 19:36:41,888 DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints 
2016-08-05 19:36:41,888 DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver 
2016-08-05 19:36:41,888 DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] 
2016-08-05 19:36:41,904 DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
2016-08-05 19:36:41,904 DEBUG org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled 
2016-08-05 19:36:41,904 DEBUG org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled 
2016-08-05 19:36:41,904 DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch size: 15 
2016-08-05 19:36:41,904 DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled 
2016-08-05 19:36:41,904 DEBUG org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled 
2016-08-05 19:36:41,904 DEBUG org.hibernate.cfg.SettingsFactory - Wrap result sets: disabled 
2016-08-05 19:36:41,904 DEBUG org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled 
2016-08-05 19:36:41,904 DEBUG org.hibernate.cfg.SettingsFactory - multi-tenancy strategy : NONE 
2016-08-05 19:36:41,904 DEBUG org.hibernate.cfg.SettingsFactory - Connection release mode: auto 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Using BatchFetchStyle : LEGACY 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Maximum outer join fetch depth: 2 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Default null ordering: none 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory 
2016-08-05 19:36:41,920 INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Query language substitutions: {} 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: disabled 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Second-level cache: enabled 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Query cache: disabled 
2016-08-05 19:36:41,920 DEBUG o.h.c.i.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Second-level cache direct-reference entries: disabled 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Automatic eviction of collection cache: disabled 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Statistics: disabled 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Named query checking : enabled 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - Allow initialization of lazy state outside session : : disabled 
2016-08-05 19:36:41,920 DEBUG org.hibernate.cfg.SettingsFactory - JTA Track by Thread: enabled 
2016-08-05 19:36:41,935 DEBUG o.h.internal.SessionFactoryImpl - Building session factory 
2016-08-05 19:36:41,951 TRACE org.hibernate.type.TypeFactory - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@12518c3 
2016-08-05 19:36:41,951 DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} 
2016-08-05 19:36:41,951 DEBUG o.h.internal.SessionFactoryImpl - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_66\jre\bin, java.vm.version=25.66-b18, user.country.format=ID, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, test=com.agung.template.springjpa.produktest.ProdukDaoTest, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.8.0_66-b18, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, basedir=D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_66\jre\lib\endorsed, os.arch=x86, surefire.real.class.path=D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\surefire\surefirebooter359481568207094401.jar, java.io.tmpdir=C:\Users\agung\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, maven.ext.class.path=C:\Users\agung\AppData\Roaming\NetBeans\8.0.2\maven-nblib\netbeans-eventspy.jar, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.8.0_66\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Program Files\java\jdk1.8.0_66\bin;C:\Program Files\mvn\bin;C:\Program Files\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\;C:\Program Files\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\Doctrine extensions for PHP\;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\server\apache-tomcat-8.0.20\bin;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\VSShell\Common7\IDE\;E:\DEVELOPMENT\tool Development\apache-jmeter-2.13\bin;D:\5.PROJECK\Android_Studio_SDK\tools;D:\5.PROJECK\Android_Studio_SDK\platform-tools;C:\Program Files\nodejs\;C:\Program Files\Android\Android Studio\gradle\gradle-2.10\bin;C:\AppServ\Apache2.2\bin;C:\AppServ\php6;C:\Program Files\Microsoft VS Code\bin;C:\Users\agung\AppData\Roaming\npm;., surefire.test.class.path=D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\test-classes;D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes;C:\Users\agung\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\agung\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\agung\.m2\repository\org\springframework\data\spring-data-jpa\1.7.3.RELEASE\spring-data-jpa-1.7.3.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\data\spring-data-commons\1.9.3.RELEASE\spring-data-commons-1.9.3.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-orm\4.0.9.RELEASE\spring-orm-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-jdbc\4.0.9.RELEASE\spring-jdbc-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-context\4.0.9.RELEASE\spring-context-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-expression\4.0.9.RELEASE\spring-expression-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-aop\4.0.9.RELEASE\spring-aop-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\agung\.m2\repository\org\springframework\spring-tx\4.0.9.RELEASE\spring-tx-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-beans\4.0.9.RELEASE\spring-beans-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-core\4.0.9.RELEASE\spring-core-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\aspectj\aspectjrt\1.8.6\aspectjrt-1.8.6.jar;C:\Users\agung\.m2\repository\org\slf4j\slf4j-api\1.7.12\slf4j-api-1.7.12.jar;C:\Users\agung\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.12\jcl-over-slf4j-1.7.12.jar;C:\Users\agung\.m2\repository\org\hibernate\hibernate-core\4.3.11.Final\hibernate-core-4.3.11.Final.jar;C:\Users\agung\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\agung\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\agung\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\agung\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\agung\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\agung\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.5.Final\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\agung\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\agung\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\agung\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\agung\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\agung\.m2\repository\org\springframework\spring-test\4.1.7.RELEASE\spring-test-4.1.7.RELEASE.jar;C:\Users\agung\.m2\repository\mysql\mysql-connector-java\5.1.35\mysql-connector-java-5.1.35.jar;C:\Users\agung\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\agung\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\agung\.m2\repository\org\hibernate\hibernate-entitymanager\4.3.10.Final\hibernate-entitymanager-4.3.10.Final.jar;C:\Users\agung\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\agung\.m2\repository\org\dbunit\dbunit\2.4.9\dbunit-2.4.9.jar;C:\Users\agung\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\agung\.m2\repository\org\postgresql\postgresql\9.4.1208.jre7\postgresql-9.4.1208.jre7.jar;C:\Users\agung\.m2\repository\ch\qos\logback\logback-classic\1.1.3\logback-classic-1.1.3.jar;C:\Users\agung\.m2\repository\ch\qos\logback\logback-core\1.1.3\logback-core-1.1.3.jar;, hibernate.ejb.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, user.home=C:\Users\agung, user.timezone=Asia/Bangkok, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, javax.persistence.nonJtaDataSource=org.apache.commons.dbcp.BasicDataSource@4f4a5c, hibernate.format_sql=true, user.name=agung, java.class.path=D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\test-classes;D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes;C:\Users\agung\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\agung\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\agung\.m2\repository\org\springframework\data\spring-data-jpa\1.7.3.RELEASE\spring-data-jpa-1.7.3.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\data\spring-data-commons\1.9.3.RELEASE\spring-data-commons-1.9.3.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-orm\4.0.9.RELEASE\spring-orm-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-jdbc\4.0.9.RELEASE\spring-jdbc-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-context\4.0.9.RELEASE\spring-context-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-expression\4.0.9.RELEASE\spring-expression-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-aop\4.0.9.RELEASE\spring-aop-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\agung\.m2\repository\org\springframework\spring-tx\4.0.9.RELEASE\spring-tx-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-beans\4.0.9.RELEASE\spring-beans-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-core\4.0.9.RELEASE\spring-core-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\aspectj\aspectjrt\1.8.6\aspectjrt-1.8.6.jar;C:\Users\agung\.m2\repository\org\slf4j\slf4j-api\1.7.12\slf4j-api-1.7.12.jar;C:\Users\agung\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.12\jcl-over-slf4j-1.7.12.jar;C:\Users\agung\.m2\repository\org\hibernate\hibernate-core\4.3.11.Final\hibernate-core-4.3.11.Final.jar;C:\Users\agung\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\agung\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\agung\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\agung\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\agung\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\agung\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.5.Final\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\agung\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\agung\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\agung\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\agung\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\agung\.m2\repository\org\springframework\spring-test\4.1.7.RELEASE\spring-test-4.1.7.RELEASE.jar;C:\Users\agung\.m2\repository\mysql\mysql-connector-java\5.1.35\mysql-connector-java-5.1.35.jar;C:\Users\agung\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\agung\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\agung\.m2\repository\org\hibernate\hibernate-entitymanager\4.3.10.Final\hibernate-entitymanager-4.3.10.Final.jar;C:\Users\agung\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\agung\.m2\repository\org\dbunit\dbunit\2.4.9\dbunit-2.4.9.jar;C:\Users\agung\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\agung\.m2\repository\org\postgresql\postgresql\9.4.1208.jre7\postgresql-9.4.1208.jre7.jar;C:\Users\agung\.m2\repository\ch\qos\logback\logback-classic\1.1.3\logback-classic-1.1.3.jar;C:\Users\agung\.m2\repository\ch\qos\logback\logback-core\1.1.3\logback-core-1.1.3.jar;, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.8, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.8.0_66\jre, sun.java.command=D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\surefire\surefirebooter359481568207094401.jar D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\surefire\surefire3973990959540057099tmp D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\surefire\surefire_03219344412821585778tmp, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, java.specification.vendor=Oracle Corporation, user.language=en, user.language.format=id, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.8.0_66, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_66\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_66\jre\classes, java.vendor=Oracle Corporation, localRepository=C:\Users\agung\.m2\repository, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86} 
2016-08-05 19:36:41,998 DEBUG o.h.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled 
2016-08-05 19:36:42,013 DEBUG o.h.engine.spi.CascadeStyles - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST] 
2016-08-05 19:36:42,091 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5InnoDBDialect] 
2016-08-05 19:36:42,200 DEBUG o.h.p.e.AbstractEntityPersister - Static SQL for entity: com.agung.template.springjpa.entity.Produk 
2016-08-05 19:36:42,200 DEBUG o.h.p.e.AbstractEntityPersister -  Version select: select id from m_produk where id =? 
2016-08-05 19:36:42,200 DEBUG o.h.p.e.AbstractEntityPersister -  Snapshot select: select produk_.id, produk_.harga as harga2_0_, produk_.kode_produk as kode_pro3_0_, produk_.nama_produk as nama_pro4_0_ from m_produk produk_ where produk_.id=? 
2016-08-05 19:36:42,200 DEBUG o.h.p.e.AbstractEntityPersister -  Insert 0: insert into m_produk (harga, kode_produk, nama_produk, id) values (?, ?, ?, ?) 
2016-08-05 19:36:42,200 DEBUG o.h.p.e.AbstractEntityPersister -  Update 0: update m_produk set harga=?, kode_produk=?, nama_produk=? where id=? 
2016-08-05 19:36:42,200 DEBUG o.h.p.e.AbstractEntityPersister -  Delete 0: delete from m_produk where id=? 
2016-08-05 19:36:42,263 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bf7094] 
2016-08-05 19:36:42,278 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:42,278 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:42,278 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:42,278 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:42,294 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:42,294 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:42,294 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [NONE]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-05 19:36:42,294 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10e94e] 
2016-08-05 19:36:42,294 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:42,294 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:42,294 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:42,294 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:42,294 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:42,294 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:42,294 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [READ]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-05 19:36:42,294 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dbf9be] 
2016-08-05 19:36:42,294 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:42,294 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:42,294 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:42,294 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:42,294 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:42,310 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [UPGRADE]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6ee17] 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:42,310 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [UPGRADE_NOWAIT]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@818ac4] 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:42,310 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [UPGRADE_SKIPLOCKED]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1154f21] 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:42,310 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [FORCE]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@116fc68] 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:42,310 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [PESSIMISTIC_READ]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? lock in share mode 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fdb014] 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:42,310 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [PESSIMISTIC_WRITE]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fc505] 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:42,310 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [PESSIMISTIC_FORCE_INCREMENT]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d140a7] 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:42,310 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [OPTIMISTIC]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a27288] 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-05 19:36:42,310 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-05 19:36:42,310 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-05 19:36:42,310 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [OPTIMISTIC_FORCE_INCREMENT]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-05 19:36:42,341 DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.agung.template.springjpa.entity.Produk: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-05 19:36:42,341 DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.agung.template.springjpa.entity.Produk: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-05 19:36:42,606 DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c827db 
2016-08-05 19:36:42,606 DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 62ce39f7-b2f5-4bf1-bc16-59b309cba96d (<unnamed>) 
2016-08-05 19:36:42,606 DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured 
2016-08-05 19:36:42,606 DEBUG o.h.internal.SessionFactoryImpl - Instantiated session factory 
2016-08-05 19:36:42,606 DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files 
2016-08-05 19:36:42,606 DEBUG org.hibernate.cfg.Configuration - Process annotated classes 
2016-08-05 19:36:42,606 DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass) 
2016-08-05 19:36:42,606 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-05 19:36:42,606 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-05 19:36:42,606 DEBUG org.hibernate.cfg.Configuration - Processing collection mappings 
2016-08-05 19:36:42,606 DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings 
2016-08-05 19:36:42,606 DEBUG org.hibernate.cfg.Configuration - Processing association property references 
2016-08-05 19:36:42,606 DEBUG org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers 
2016-08-05 19:36:42,606 DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints 
2016-08-05 19:36:42,606 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5InnoDBDialect] 
2016-08-05 19:36:42,606 DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files 
2016-08-05 19:36:42,606 DEBUG org.hibernate.cfg.Configuration - Process annotated classes 
2016-08-05 19:36:42,606 DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass) 
2016-08-05 19:36:42,606 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-05 19:36:42,606 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-05 19:36:42,622 DEBUG org.hibernate.cfg.Configuration - Processing collection mappings 
2016-08-05 19:36:42,622 DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings 
2016-08-05 19:36:42,622 DEBUG org.hibernate.cfg.Configuration - Processing association property references 
2016-08-05 19:36:42,622 DEBUG org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers 
2016-08-05 19:36:42,622 DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints 
2016-08-05 19:36:42,622 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5InnoDBDialect] 
2016-08-05 19:36:42,622 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5InnoDBDialect] 
2016-08-05 19:36:42,622 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export 
2016-08-05 19:36:42,622 DEBUG o.h.tool.hbm2ddl.SchemaExport - Import file not found: /import.sql 
2016-08-05 19:36:42,622 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-05 19:36:42,731 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-05 19:36:42,856 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-05 19:36:42,965 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete 
2016-08-05 19:36:42,965 DEBUG o.h.internal.NamedQueryRepository - Checking 0 named HQL queries 
2016-08-05 19:36:42,965 DEBUG o.h.internal.NamedQueryRepository - Checking 0 named SQL queries 
2016-08-05 19:36:42,980 DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] 
2016-08-05 19:36:42,980 DEBUG o.h.j.i.s.JpaSchemaGenerator - No actions specified; doing nothing 
2016-08-05 19:36:43,043 DEBUG o.h.j.i.EntityManagerFactoryRegistry - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@1d69c0f 
2016-08-05 19:36:43,043 DEBUG o.h.j.i.EntityManagerFactoryRegistry - Registering EntityManagerFactory: default  
2016-08-05 19:36:43,043 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:43,043 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'entityManagerFactory' 
2016-08-05 19:36:43,043 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3958e7: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,produkService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,dataSource,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,foo,jpaMappingContext,produkDao,transactionManager,entityManagerFactory,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,org.springframework.orm.jpa.SharedEntityManagerCreator#0]; root of factory hierarchy 
2016-08-05 19:36:43,043 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' 
2016-08-05 19:36:43,043 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'produkService' 
2016-08-05 19:36:43,043 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'produkService' 
2016-08-05 19:36:43,058 DEBUG o.s.b.f.a.InjectionMetadata - Registered injected element on class [com.agung.template.springjpa.service.impl.ProdukServiceImpl]: AutowiredFieldElement for private com.agung.template.springjpa.repository.ProdukDao com.agung.template.springjpa.service.impl.ProdukServiceImpl.produDao 
2016-08-05 19:36:43,058 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'produkService' to allow for resolving potential circular references 
2016-08-05 19:36:43,058 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'produkService': AutowiredFieldElement for private com.agung.template.springjpa.repository.ProdukDao com.agung.template.springjpa.service.impl.ProdukServiceImpl.produDao 
2016-08-05 19:36:43,058 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'produkDao' 
2016-08-05 19:36:43,058 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'produkDao' 
2016-08-05 19:36:43,074 DEBUG o.s.b.f.a.InjectionMetadata - Registered injected element on class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]: PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager) 
2016-08-05 19:36:43,074 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'produkDao' to allow for resolving potential circular references 
2016-08-05 19:36:43,074 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'produkDao': PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager) 
2016-08-05 19:36:43,074 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean '(inner bean)#91f68b' 
2016-08-05 19:36:43,090 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean '(inner bean)#c7d8b3' 
2016-08-05 19:36:43,090 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name '(inner bean)#c7d8b3' 
2016-08-05 19:36:43,090 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:43,090 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)#c7d8b3' 
2016-08-05 19:36:43,090 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:43,105 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:43,105 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)#91f68b' 
2016-08-05 19:36:43,105 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean '(inner bean)#2a69b4' 
2016-08-05 19:36:43,105 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:43,105 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)#2a69b4' 
2016-08-05 19:36:43,105 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean '(inner bean)#18bd86d' 
2016-08-05 19:36:43,105 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory' 
2016-08-05 19:36:43,105 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:43,121 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:43,136 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)#18bd86d' 
2016-08-05 19:36:43,136 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpaMappingContext' 
2016-08-05 19:36:43,136 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'jpaMappingContext' 
2016-08-05 19:36:43,136 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'jpaMappingContext' to allow for resolving potential circular references 
2016-08-05 19:36:43,136 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'jpaMappingContext' 
2016-08-05 19:36:43,136 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:43,136 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning eagerly cached instance of singleton bean 'jpaMappingContext' that is not fully initialized yet - a consequence of a circular reference 
2016-08-05 19:36:43,136 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory' 
2016-08-05 19:36:43,168 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'jpaMappingContext' 
2016-08-05 19:36:43,168 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:43,168 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'produkDao' 
2016-08-05 19:36:43,183 DEBUG o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation 
2016-08-05 19:36:43,261 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-05 19:36:43,277 DEBUG o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation 
2016-08-05 19:36:43,277 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-05 19:36:43,292 DEBUG o.s.a.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ThreadBoundTargetSource@1f02251 
2016-08-05 19:36:43,324 DEBUG o.s.d.j.r.query.JpaQueryFactory - Looking up query for method search 
2016-08-05 19:36:43,402 DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select p from com.agung.template.springjpa.entity.Produk p where lower(p.kodeProduk) like lower(:search) or lower(p.namaProduk) like lower(:search) order by p.namaProduk asc 
2016-08-05 19:36:43,402 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'agung'
    |  |     |  |  |  |  \-[IDENT] Node: 'template'
    |  |     |  |  |  \-[IDENT] Node: 'springjpa'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Produk'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'p'
    +-[WHERE] Node: 'where'
    |  \-[OR] Node: 'or'
    |     +-[LIKE] Node: 'like'
    |     |  +-[METHOD_CALL] Node: '('
    |     |  |  +-[IDENT] Node: 'lower'
    |     |  |  \-[EXPR_LIST] Node: 'exprList'
    |     |  |     \-[DOT] Node: '.'
    |     |  |        +-[IDENT] Node: 'p'
    |     |  |        \-[IDENT] Node: 'kodeProduk'
    |     |  \-[METHOD_CALL] Node: '('
    |     |     +-[IDENT] Node: 'lower'
    |     |     \-[EXPR_LIST] Node: 'exprList'
    |     |        \-[COLON] Node: ':'
    |     |           \-[IDENT] Node: 'search'
    |     \-[LIKE] Node: 'like'
    |        +-[METHOD_CALL] Node: '('
    |        |  +-[IDENT] Node: 'lower'
    |        |  \-[EXPR_LIST] Node: 'exprList'
    |        |     \-[DOT] Node: '.'
    |        |        +-[IDENT] Node: 'p'
    |        |        \-[IDENT] Node: 'namaProduk'
    |        \-[METHOD_CALL] Node: '('
    |           +-[IDENT] Node: 'lower'
    |           \-[EXPR_LIST] Node: 'exprList'
    |              \-[COLON] Node: ':'
    |                 \-[IDENT] Node: 'search'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'p'
       |  \-[IDENT] Node: 'namaProduk'
       \-[ASCENDING] Node: 'asc'
 
2016-08-05 19:36:43,402 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-05 19:36:43,448 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select] 
2016-08-05 19:36:43,464 DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.agung.template.springjpa.entity.Produk (p) -> produk0_ 
2016-08-05 19:36:43,464 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-05 19:36:43,464 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-05 19:36:43,480 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : kodeProduk -> org.hibernate.type.StringType@1c995f4 
2016-08-05 19:36:43,480 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p.kodeProduk -> produk0_.kode_produk 
2016-08-05 19:36:43,480 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-05 19:36:43,480 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : namaProduk -> org.hibernate.type.StringType@1c995f4 
2016-08-05 19:36:43,480 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p.namaProduk -> produk0_.nama_produk 
2016-08-05 19:36:43,480 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-05 19:36:43,480 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : namaProduk -> org.hibernate.type.StringType@1c995f4 
2016-08-05 19:36:43,480 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p.namaProduk -> produk0_.nama_produk 
2016-08-05 19:36:43,480 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select] 
2016-08-05 19:36:43,480 DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} produk0_.id ) ( FromClause{level=1} m_produk produk0_ ) ( where ( or ( like ( ( lower ( exprList ( produk0_.kode_produk produk0_.id kodeProduk ) ) ) ( ( lower ( exprList ? ) ) ) ( like ( ( lower ( exprList ( produk0_.nama_produk produk0_.id namaProduk ) ) ) ( ( lower ( exprList ? ) ) ) ) ) ( order ( produk0_.nama_produk produk0_.id namaProduk ) asc ) ) 
2016-08-05 19:36:43,480 DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [m_produk produk0_] 
2016-08-05 19:36:43,480 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select] 
2016-08-05 19:36:43,495 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (m_produk)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'produk0_.id as id1_0_' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
    |  \-[SQL_TOKEN] SqlFragment: 'produk0_.harga as harga2_0_, produk0_.kode_produk as kode_pro3_0_, produk0_.nama_produk as nama_pro4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[produk0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'm_produk produk0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=m_produk,tableAlias=produk0_,origin=null,columns={,className=com.agung.template.springjpa.entity.Produk}}
    +-[WHERE] SqlNode: 'where'
    |  \-[OR] SqlNode: 'or'
    |     +-[LIKE] BinaryLogicOperatorNode: 'like'
    |     |  +-[METHOD_CALL] MethodNode: '('
    |     |  |  +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
    |     |  |  \-[EXPR_LIST] SqlNode: 'exprList'
    |     |  |     \-[DOT] DotNode: 'produk0_.kode_produk' {propertyName=kodeProduk,dereferenceType=PRIMITIVE,getPropertyPath=kodeProduk,path=p.kodeProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=p}
    |     |  |        +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
    |     |  |        \-[IDENT] IdentNode: 'kodeProduk' {originalText=kodeProduk}
    |     |  \-[METHOD_CALL] MethodNode: '('
    |     |     +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
    |     |     \-[EXPR_LIST] SqlNode: 'exprList'
    |     |        \-[NAMED_PARAM] ParameterNode: '?' {name=search, expectedType=null}
    |     \-[LIKE] BinaryLogicOperatorNode: 'like'
    |        +-[METHOD_CALL] MethodNode: '('
    |        |  +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
    |        |  \-[EXPR_LIST] SqlNode: 'exprList'
    |        |     \-[DOT] DotNode: 'produk0_.nama_produk' {propertyName=namaProduk,dereferenceType=PRIMITIVE,getPropertyPath=namaProduk,path=p.namaProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=p}
    |        |        +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
    |        |        \-[IDENT] IdentNode: 'namaProduk' {originalText=namaProduk}
    |        \-[METHOD_CALL] MethodNode: '('
    |           +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
    |           \-[EXPR_LIST] SqlNode: 'exprList'
    |              \-[NAMED_PARAM] ParameterNode: '?' {name=search, expectedType=null}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'produk0_.nama_produk' {propertyName=namaProduk,dereferenceType=PRIMITIVE,getPropertyPath=namaProduk,path=p.namaProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=p}
       |  +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
       |  \-[IDENT] IdentNode: 'namaProduk' {originalText=namaProduk}
       \-[ASCENDING] SqlNode: 'asc'
 
2016-08-05 19:36:43,495 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-05 19:36:43,495 DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select p from com.agung.template.springjpa.entity.Produk p where lower(p.kodeProduk) like lower(:search) or lower(p.namaProduk) like lower(:search) order by p.namaProduk asc 
2016-08-05 19:36:43,495 DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select produk0_.id as id1_0_, produk0_.harga as harga2_0_, produk0_.kode_produk as kode_pro3_0_, produk0_.nama_produk as nama_pro4_0_ from m_produk produk0_ where lower(produk0_.kode_produk) like lower(?) or lower(produk0_.nama_produk) like lower(?) order by produk0_.nama_produk asc 
2016-08-05 19:36:43,495 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-05 19:36:43,511 DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select count(p) from com.agung.template.springjpa.entity.Produk p where lower(p.kodeProduk) like lower(:search) or lower(p.namaProduk) like lower(:search) 
2016-08-05 19:36:43,511 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'agung'
    |  |     |  |  |  |  \-[IDENT] Node: 'template'
    |  |     |  |  |  \-[IDENT] Node: 'springjpa'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Produk'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[LIKE] Node: 'like'
          |  +-[METHOD_CALL] Node: '('
          |  |  +-[IDENT] Node: 'lower'
          |  |  \-[EXPR_LIST] Node: 'exprList'
          |  |     \-[DOT] Node: '.'
          |  |        +-[IDENT] Node: 'p'
          |  |        \-[IDENT] Node: 'kodeProduk'
          |  \-[METHOD_CALL] Node: '('
          |     +-[IDENT] Node: 'lower'
          |     \-[EXPR_LIST] Node: 'exprList'
          |        \-[COLON] Node: ':'
          |           \-[IDENT] Node: 'search'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'lower'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'p'
             |        \-[IDENT] Node: 'namaProduk'
             \-[METHOD_CALL] Node: '('
                +-[IDENT] Node: 'lower'
                \-[EXPR_LIST] Node: 'exprList'
                   \-[COLON] Node: ':'
                      \-[IDENT] Node: 'search'
 
2016-08-05 19:36:43,511 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-05 19:36:43,511 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select] 
2016-08-05 19:36:43,511 DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.agung.template.springjpa.entity.Produk (p) -> produk0_ 
2016-08-05 19:36:43,511 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-05 19:36:43,511 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-05 19:36:43,511 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : kodeProduk -> org.hibernate.type.StringType@1c995f4 
2016-08-05 19:36:43,511 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p.kodeProduk -> produk0_.kode_produk 
2016-08-05 19:36:43,511 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-05 19:36:43,511 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : namaProduk -> org.hibernate.type.StringType@1c995f4 
2016-08-05 19:36:43,511 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p.namaProduk -> produk0_.nama_produk 
2016-08-05 19:36:43,511 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select] 
2016-08-05 19:36:43,511 DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( count produk0_.id ) ) ( FromClause{level=1} m_produk produk0_ ) ( where ( or ( like ( ( lower ( exprList ( produk0_.kode_produk produk0_.id kodeProduk ) ) ) ( ( lower ( exprList ? ) ) ) ( like ( ( lower ( exprList ( produk0_.nama_produk produk0_.id namaProduk ) ) ) ( ( lower ( exprList ? ) ) ) ) ) ) 
2016-08-05 19:36:43,526 DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [m_produk produk0_] 
2016-08-05 19:36:43,526 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select] 
2016-08-05 19:36:43,526 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (m_produk)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[produk0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'm_produk produk0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=m_produk,tableAlias=produk0_,origin=null,columns={,className=com.agung.template.springjpa.entity.Produk}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[METHOD_CALL] MethodNode: '('
          |  |  +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
          |  |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     \-[DOT] DotNode: 'produk0_.kode_produk' {propertyName=kodeProduk,dereferenceType=PRIMITIVE,getPropertyPath=kodeProduk,path=p.kodeProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=p}
          |  |        +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
          |  |        \-[IDENT] IdentNode: 'kodeProduk' {originalText=kodeProduk}
          |  \-[METHOD_CALL] MethodNode: '('
          |     +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
          |     \-[EXPR_LIST] SqlNode: 'exprList'
          |        \-[NAMED_PARAM] ParameterNode: '?' {name=search, expectedType=null}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'produk0_.nama_produk' {propertyName=namaProduk,dereferenceType=PRIMITIVE,getPropertyPath=namaProduk,path=p.namaProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=p}
             |        +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
             |        \-[IDENT] IdentNode: 'namaProduk' {originalText=namaProduk}
             \-[METHOD_CALL] MethodNode: '('
                +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
                \-[EXPR_LIST] SqlNode: 'exprList'
                   \-[NAMED_PARAM] ParameterNode: '?' {name=search, expectedType=null}
 
2016-08-05 19:36:43,526 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-05 19:36:43,526 DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select count(p) from com.agung.template.springjpa.entity.Produk p where lower(p.kodeProduk) like lower(:search) or lower(p.namaProduk) like lower(:search) 
2016-08-05 19:36:43,526 DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select count(produk0_.id) as col_0_0_ from m_produk produk0_ where lower(produk0_.kode_produk) like lower(?) or lower(produk0_.nama_produk) like lower(?) 
2016-08-05 19:36:43,526 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-05 19:36:43,526 DEBUG o.s.d.j.r.query.JpaQueryFactory - Looking up query for method findByKodeProduk 
2016-08-05 19:36:43,526 DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Produk.findByKodeProduk 
2016-08-05 19:36:43,526 DEBUG o.h.j.spi.AbstractEntityManagerImpl - Mark transaction for rollback 
2016-08-05 19:36:43,526 DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Produk.findByKodeProduk 
2016-08-05 19:36:43,542 DEBUG o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation 
2016-08-05 19:36:43,542 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-05 19:36:43,573 DEBUG o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation 
2016-08-05 19:36:43,573 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-05 19:36:43,573 DEBUG o.s.a.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.jpa.repository.support.SimpleJpaRepository@6ee758] 
2016-08-05 19:36:43,589 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:43,589 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'produkDao' 
2016-08-05 19:36:43,589 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:43,589 DEBUG o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'produkService' to bean named 'produkDao' 
2016-08-05 19:36:43,589 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:43,589 DEBUG o.s.t.a.AnnotationTransactionAttributeSource - Adding transactional method 'ProdukServiceImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '' 
2016-08-05 19:36:43,589 DEBUG o.s.a.f.a.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'produkService' with 0 common interceptors and 1 specific interceptors 
2016-08-05 19:36:43,589 DEBUG o.s.a.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.agung.template.springjpa.service.impl.ProdukServiceImpl@116b68b] 
2016-08-05 19:36:43,589 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'produkService' 
2016-08-05 19:36:43,589 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' 
2016-08-05 19:36:43,589 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' 
2016-08-05 19:36:43,589 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' 
2016-08-05 19:36:43,589 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' 
2016-08-05 19:36:43,589 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' 
2016-08-05 19:36:43,589 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator' 
2016-08-05 19:36:43,589 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' 
2016-08-05 19:36:43,589 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' 
2016-08-05 19:36:43,589 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' 
2016-08-05 19:36:43,589 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references 
2016-08-05 19:36:43,604 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' 
2016-08-05 19:36:43,604 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0' 
2016-08-05 19:36:43,604 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' 
2016-08-05 19:36:43,604 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:43,604 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource' 
2016-08-05 19:36:43,604 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' 
2016-08-05 19:36:43,604 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'foo' 
2016-08-05 19:36:43,604 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'jpaMappingContext' 
2016-08-05 19:36:43,604 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'produkDao' 
2016-08-05 19:36:43,604 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager' 
2016-08-05 19:36:43,604 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'transactionManager' 
2016-08-05 19:36:43,604 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references 
2016-08-05 19:36:43,620 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory' 
2016-08-05 19:36:43,620 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaDialect#d7f8b4' 
2016-08-05 19:36:43,620 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:43,620 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaDialect#d7f8b4' 
2016-08-05 19:36:43,620 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionManager' 
2016-08-05 19:36:43,620 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:43,620 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'transactionManager' 
2016-08-05 19:36:43,620 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory' 
2016-08-05 19:36:43,620 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' 
2016-08-05 19:36:43,620 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' 
2016-08-05 19:36:43,620 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.orm.jpa.SharedEntityManagerCreator#0' 
2016-08-05 19:36:43,620 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.orm.jpa.SharedEntityManagerCreator#0' 
2016-08-05 19:36:43,620 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory' 
2016-08-05 19:36:43,620 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.orm.jpa.SharedEntityManagerCreator#0' to allow for resolving potential circular references 
2016-08-05 19:36:43,620 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:43,620 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.orm.jpa.SharedEntityManagerCreator#0' 
2016-08-05 19:36:43,620 DEBUG o.s.c.s.GenericApplicationContext - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@2f86e6] 
2016-08-05 19:36:43,620 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor' 
2016-08-05 19:36:43,620 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] 
2016-08-05 19:36:43,620 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] 
2016-08-05 19:36:43,620 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] 
2016-08-05 19:36:43,620 DEBUG o.s.t.c.DefaultCacheAwareContextLoaderDelegate - Storing ApplicationContext in cache under key [[MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]] 
2016-08-05 19:36:43,620 DEBUG o.s.test.context.cache - Spring test ApplicationContext cache statistics: [ContextCache@ee53dc size = 1, hitCount = 0, missCount = 1, parentContextCount = 0] 
2016-08-05 19:36:43,636 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'com.agung.template.springjpa.produktest.ProdukDaoTest': AutowiredFieldElement for private com.agung.template.springjpa.service.ProdukService com.agung.template.springjpa.produktest.ProdukDaoTest.pService 
2016-08-05 19:36:43,636 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'produkService' 
2016-08-05 19:36:43,636 DEBUG o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'com.agung.template.springjpa.produktest.ProdukDaoTest' to bean named 'produkService' 
2016-08-05 19:36:43,636 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'com.agung.template.springjpa.produktest.ProdukDaoTest': AutowiredFieldElement for private javax.sql.DataSource com.agung.template.springjpa.produktest.ProdukDaoTest.ds 
2016-08-05 19:36:43,636 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource' 
2016-08-05 19:36:43,636 DEBUG o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'com.agung.template.springjpa.produktest.ProdukDaoTest' to bean named 'dataSource' 
2016-08-05 19:36:43,636 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-05 19:36:43,667 DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null] 
2016-08-05 19:36:43,667 DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null] 
2016-08-05 19:36:43,682 DEBUG o.d.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start 
2016-08-05 19:36:43,682 DEBUG o.d.dataset.xml.FlatXmlProducer - produce() - start 
2016-08-05 19:36:43,682 DEBUG o.d.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@284d0e, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@17286ad) - start 
2016-08-05 19:36:43,682 DEBUG o.d.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@284d0e, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@17286ad) - start 
2016-08-05 19:36:43,698 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@110a26d) - start 
2016-08-05 19:36:43,698 DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start 
2016-08-05 19:36:43,698 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@110a26d) - start 
2016-08-05 19:36:43,714 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:43,714 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:43,714 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,714 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,714 DEBUG o.d.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@110a26d) - start 
2016-08-05 19:36:43,745 DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)]) - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-05 19:36:43,745 DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,745 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-001) - start 
2016-08-05 19:36:43,745 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-001) - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@110a26d) - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,745 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-002) - start 
2016-08-05 19:36:43,760 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-002) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@110a26d) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-003) - start 
2016-08-05 19:36:43,760 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-003) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@110a26d) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-004) - start 
2016-08-05 19:36:43,760 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-004) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@110a26d) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-005) - start 
2016-08-05 19:36:43,760 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-005) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-05 19:36:43,760 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-05 19:36:43,760 DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start 
2016-08-05 19:36:43,760 DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[m_produk], _tableMap={M_PRODUK=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]}, _caseSensitiveTableNames=false] 
2016-08-05 19:36:43,792 DEBUG o.d.database.DatabaseConnection - Database connection info: 
	database product name=MySQL
	database version=5.6.22-log
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
	jdbc driver major version=5
	jdbc driver minor version=1
 
2016-08-05 19:36:43,792 DEBUG o.d.database.DatabaseConnection - validateSchema(validateStrict=false) - start 
2016-08-05 19:36:43,792 DEBUG o.d.database.DatabaseConnection - Schema is null. Nothing to validate. 
2016-08-05 19:36:43,807 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-05 19:36:43,807 DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start 
2016-08-05 19:36:43,807 DEBUG o.d.dataset.OrderedTableNameMap - orderedValues() - start 
2016-08-05 19:36:43,807 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,807 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,807 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-05 19:36:43,807 DEBUG org.dbunit.dataset.CompositeDataSet - addTable(newTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], tableList=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[], _tableMap={}, _caseSensitiveTableNames=false], combine=true) - start 
2016-08-05 19:36:43,807 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,807 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,807 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-05 19:36:43,807 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,807 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,807 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-05 19:36:43,807 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-05 19:36:43,807 DEBUG o.d.dataset.OrderedTableNameMap - orderedValues() - start 
2016-08-05 19:36:43,807 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,807 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,807 DEBUG o.d.operation.CompositeOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=null], , dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-05 19:36:43,807 DEBUG o.d.operation.DeleteAllOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-05 19:36:43,807 DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start 
2016-08-05 19:36:43,807 DEBUG o.d.d.s.PreparedStatementFactory - createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:43,807 DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:43,807 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-05 19:36:43,807 DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start 
2016-08-05 19:36:43,807 DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start 
2016-08-05 19:36:43,807 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-05 19:36:43,807 DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=m_produk) - start 
2016-08-05 19:36:43,807 DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start 
2016-08-05 19:36:43,807 DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database... 
2016-08-05 19:36:43,901 DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=MySQL
	database version=5.6.22-log
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
	jdbc driver major version=5
	jdbc driver minor version=1
 
2016-08-05 19:36:43,901 DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=org.apache.commons.dbcp.DelegatingResultSet@189292e 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}]) - start 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=berita, escapePattern=null) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=berita, object=null) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=berita) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=berita) - end - result=BERITA 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=BERITA) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=BERITA) - end - result=BERITA 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}]) - start 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=komentar, escapePattern=null) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=komentar, object=null) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar) - end - result=KOMENTAR 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR) - end - result=KOMENTAR 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}]) - start 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=komentar_berita, escapePattern=null) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=komentar_berita, object=null) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar_berita) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar_berita) - end - result=KOMENTAR_BERITA 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR_BERITA) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR_BERITA) - end - result=KOMENTAR_BERITA 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}]) - start 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=null) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}]) - start 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=mahasiswa, escapePattern=null) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=mahasiswa, object=null) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=mahasiswa) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=mahasiswa) - end - result=MAHASISWA 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=MAHASISWA) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=MAHASISWA) - end - result=MAHASISWA 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}]) - start 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_menu, escapePattern=null) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_menu, object=null) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_menu) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_menu) - end - result=T_MENU 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_MENU) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_MENU) - end - result=T_MENU 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}]) - start 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_permission, escapePattern=null) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_permission, object=null) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_permission) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_permission) - end - result=T_PERMISSION 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_PERMISSION) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_PERMISSION) - end - result=T_PERMISSION 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}]) - start 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_role, escapePattern=null) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_role, object=null) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_role) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_role) - end - result=T_ROLE 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_ROLE) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_ROLE) - end - result=T_ROLE 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}]) - start 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_user, escapePattern=null) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_user, object=null) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_user) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_user) - end - result=T_USER 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_USER) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_USER) - end - result=T_USER 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=m_produk (dbIdentifierQuoteString=`) 
2016-08-05 19:36:43,901 DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'm_produk' exists in schema 'null' ... 
2016-08-05 19:36:43,901 DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.apache.commons.dbcp.DelegatingResultSet@e85c6f) - start 
2016-08-05 19:36:43,901 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:43,932 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-05 19:36:43,932 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>id 
2016-08-05 19:36:43,932 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=id) - start 
2016-08-05 19:36:43,932 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-05 19:36:43,932 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-05 19:36:43,932 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:43,932 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-05 19:36:43,932 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-05 19:36:43,932 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>harga 
2016-08-05 19:36:43,932 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=3 , sqlTypeName=DECIMAL, tableName=m_produk, columnName=harga) - start 
2016-08-05 19:36:43,932 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=3, sqlTypeName=DECIMAL) - start 
2016-08-05 19:36:43,932 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=3) - start 
2016-08-05 19:36:43,932 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:43,932 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:43,932 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:43,932 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:43,932 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:43,932 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:43,932 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:43,932 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:43,932 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:43,932 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-05 19:36:43,932 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-05 19:36:43,932 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>kode_produk 
2016-08-05 19:36:43,932 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=kode_produk) - start 
2016-08-05 19:36:43,932 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-05 19:36:43,932 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-05 19:36:43,932 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:43,932 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-05 19:36:43,932 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-05 19:36:43,932 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>nama_produk 
2016-08-05 19:36:43,932 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=nama_produk) - start 
2016-08-05 19:36:43,932 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-05 19:36:43,932 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-05 19:36:43,932 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:43,932 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-05 19:36:43,932 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-05 19:36:43,932 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start 
2016-08-05 19:36:43,932 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeyNames() - start 
2016-08-05 19:36:43,948 DEBUG o.d.database.DatabaseTableMetaData - getName() - start 
2016-08-05 19:36:43,948 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:43,948 DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[id], columns=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)]) - start 
2016-08-05 19:36:43,948 DEBUG org.dbunit.dataset.Columns - getColumn(columnName=id, columns=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)]) - start 
2016-08-05 19:36:43,901 DEBUG o.d.dataset.OrderedTableNameMap - update(tableName=m_produk, object=table=m_produk, cols=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)], pk=[(id, VARCHAR, noNulls)]) - start 
2016-08-05 19:36:43,948 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,948 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,948 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,948 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,948 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=m_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:43,948 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:43,948 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-05 19:36:43,948 DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from m_produk) - start 
2016-08-05 19:36:43,948 DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from m_produk 
2016-08-05 19:36:43,948 DEBUG o.d.d.statement.SimpleStatement - executeBatch() - start 
2016-08-05 19:36:43,948 DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from m_produk 
2016-08-05 19:36:43,963 DEBUG o.d.d.statement.SimpleStatement - clearBatch() - start 
2016-08-05 19:36:43,963 DEBUG o.d.d.s.AbstractBatchStatement - close() - start 
2016-08-05 19:36:43,963 DEBUG o.d.o.AbstractBatchOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start 
2016-08-05 19:36:43,963 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-05 19:36:43,963 DEBUG o.d.o.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:43,963 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:43,963 DEBUG o.d.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-05 19:36:43,963 DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=m_produk) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start 
2016-08-05 19:36:43,963 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,963 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,963 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:43,963 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:43,963 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:43,963 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:43,963 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:43,963 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:43,963 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:43,963 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:43,963 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:43,963 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:43,963 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:43,963 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start 
2016-08-05 19:36:43,963 DEBUG o.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=0) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:43,963 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=kode_produk) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:43,963 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=nama_produk) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:43,963 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=harga) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:43,963 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:43,963 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:43,963 DEBUG o.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=m_produk, columns=[(id, VARCHAR, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls), (harga, DECIMAL, noNulls)], keys=[(id, VARCHAR, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:43,963 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=m_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:43,979 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:43,979 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-05 19:36:43,979 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=id, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:43,979 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:43,979 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=id, escapePattern=null) - start 
2016-08-05 19:36:43,979 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=kode_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:43,979 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:43,979 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=kode_produk, escapePattern=null) - start 
2016-08-05 19:36:43,979 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=nama_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:43,979 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:43,979 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=nama_produk, escapePattern=null) - start 
2016-08-05 19:36:43,979 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=harga, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:43,979 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:43,979 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=harga, escapePattern=null) - start 
2016-08-05 19:36:43,979 DEBUG o.d.d.s.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into m_produk (id, kode_produk, nama_produk, harga) values (?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:43,979 DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:43,994 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-05 19:36:43,994 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:43,994 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:43,994 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:43,994 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:43,994 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-001, dataType=VARCHAR) - start 
2016-08-05 19:36:43,994 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-001, dataType=VARCHAR) - start 
2016-08-05 19:36:43,994 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-001, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-05 19:36:43,994 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-001) - start 
2016-08-05 19:36:43,994 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-001) - start 
2016-08-05 19:36:43,994 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=kode_produk) - start 
2016-08-05 19:36:43,994 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:43,994 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:43,994 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:43,994 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:43,994 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-001, dataType=VARCHAR) - start 
2016-08-05 19:36:43,994 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-001, dataType=VARCHAR) - start 
2016-08-05 19:36:43,994 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-001, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-05 19:36:43,994 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-001) - start 
2016-08-05 19:36:43,994 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-001) - start 
2016-08-05 19:36:43,994 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=nama_produk) - start 
2016-08-05 19:36:43,994 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:43,994 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:43,994 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:43,994 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:43,994 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk A, dataType=VARCHAR) - start 
2016-08-05 19:36:43,994 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk A, dataType=VARCHAR) - start 
2016-08-05 19:36:43,994 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk A, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-05 19:36:43,994 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk A) - start 
2016-08-05 19:36:43,994 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk A) - start 
2016-08-05 19:36:43,994 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=harga) - start 
2016-08-05 19:36:43,994 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:43,994 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:43,994 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:43,994 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:43,994 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=250000, dataType=DECIMAL) - start 
2016-08-05 19:36:43,994 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=250000, dataType=DECIMAL) - start 
2016-08-05 19:36:43,994 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=250000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', 'Produk A', ** NOT SPECIFIED **)) - start 
2016-08-05 19:36:43,994 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=250000) - start 
2016-08-05 19:36:44,010 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:44,010 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:44,026 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=1) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=kode_produk) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=nama_produk) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=harga) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,026 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-002, dataType=VARCHAR) - start 
2016-08-05 19:36:44,026 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-002, dataType=VARCHAR) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-002, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', 'Produk A', 250000)) - start 
2016-08-05 19:36:44,026 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-002) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-002) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=kode_produk) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,026 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-002, dataType=VARCHAR) - start 
2016-08-05 19:36:44,026 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-002, dataType=VARCHAR) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-002, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-001', 'Produk A', 250000)) - start 
2016-08-05 19:36:44,026 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-002) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-002) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=nama_produk) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,026 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk B, dataType=VARCHAR) - start 
2016-08-05 19:36:44,026 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk B, dataType=VARCHAR) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk B, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk A', 250000)) - start 
2016-08-05 19:36:44,026 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk B) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk B) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=harga) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,026 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=375000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,026 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=375000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=375000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk B', 250000)) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=375000) - start 
2016-08-05 19:36:44,026 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:44,026 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:44,026 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=2) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=kode_produk) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=nama_produk) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=harga) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,026 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-003, dataType=VARCHAR) - start 
2016-08-05 19:36:44,026 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-003, dataType=VARCHAR) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-003, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk B', 375000)) - start 
2016-08-05 19:36:44,026 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-003) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-003) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=kode_produk) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,026 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-003, dataType=VARCHAR) - start 
2016-08-05 19:36:44,026 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-003, dataType=VARCHAR) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-003, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-002', 'Produk B', 375000)) - start 
2016-08-05 19:36:44,026 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-003) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-003) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=nama_produk) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,026 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,026 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk C, dataType=VARCHAR) - start 
2016-08-05 19:36:44,026 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk C, dataType=VARCHAR) - start 
2016-08-05 19:36:44,026 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk C, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk B', 375000)) - start 
2016-08-05 19:36:44,026 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk C) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk C) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=harga) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=420000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=420000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=420000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk C', 375000)) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=420000) - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:44,041 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=3) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=kode_produk) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=nama_produk) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=harga) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-004, dataType=VARCHAR) - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-004, dataType=VARCHAR) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-004, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk C', 420000)) - start 
2016-08-05 19:36:44,041 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-004) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-004) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=kode_produk) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-004, dataType=VARCHAR) - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-004, dataType=VARCHAR) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-004, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-003', 'Produk C', 420000)) - start 
2016-08-05 19:36:44,041 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-004) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-004) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=nama_produk) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk D, dataType=VARCHAR) - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk D, dataType=VARCHAR) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk D, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk C', 420000)) - start 
2016-08-05 19:36:44,041 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk D) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk D) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=harga) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=580000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=580000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=580000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk D', 420000)) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=580000) - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:44,041 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=4) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=kode_produk) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=nama_produk) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=harga) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-005, dataType=VARCHAR) - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-005, dataType=VARCHAR) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-005, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk D', 580000)) - start 
2016-08-05 19:36:44,041 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-005) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-005) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=kode_produk) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-005, dataType=VARCHAR) - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-005, dataType=VARCHAR) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-005, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-004', 'Produk D', 580000)) - start 
2016-08-05 19:36:44,041 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-005) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-005) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=nama_produk) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk E, dataType=VARCHAR) - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk E, dataType=VARCHAR) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk E, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-005', 'Produk D', 580000)) - start 
2016-08-05 19:36:44,041 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk E) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk E) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=harga) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,041 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=640000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,041 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=640000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,041 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=640000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-005', 'Produk E', 580000)) - start 
2016-08-05 19:36:44,057 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=640000) - start 
2016-08-05 19:36:44,057 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:44,057 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:44,057 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=5) - start 
2016-08-05 19:36:44,057 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=id) - start 
2016-08-05 19:36:44,057 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start 
2016-08-05 19:36:44,057 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=5) - start 
2016-08-05 19:36:44,057 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - executeBatch() - start 
2016-08-05 19:36:44,057 DEBUG o.d.d.s.SimplePreparedStatement - executeBatch() - start 
2016-08-05 19:36:44,057 DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start 
2016-08-05 19:36:44,057 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - clearBatch() - start 
2016-08-05 19:36:44,057 DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start 
2016-08-05 19:36:44,057 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - close() - start 
2016-08-05 19:36:44,057 DEBUG o.d.d.s.AbstractPreparedBatchStatement - close() - start 
2016-08-05 19:36:44,057 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' 
2016-08-05 19:36:44,072 DEBUG o.s.t.a.AnnotationTransactionAttributeSource - Adding transactional method 'ProdukServiceImpl.findProdukById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; '' 
2016-08-05 19:36:44,072 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-05 19:36:44,072 DEBUG o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.agung.template.springjpa.service.impl.ProdukServiceImpl.findProdukById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; '' 
2016-08-05 19:36:44,072 DEBUG o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@17c8c7e] for JPA transaction 
2016-08-05 19:36:44,072 DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin 
2016-08-05 19:36:44,072 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection 
2016-08-05 19:36:44,088 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection 
2016-08-05 19:36:44,088 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: true 
2016-08-05 19:36:44,088 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - disabling autocommit 
2016-08-05 19:36:44,104 DEBUG o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5073ab] 
2016-08-05 19:36:44,104 DEBUG o.s.d.r.c.s.TransactionalRepositoryProxyPostProcessor$CustomAnnotationTransactionAttributeSource - Adding transactional method 'findOne' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; '' 
2016-08-05 19:36:44,104 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-05 19:36:44,104 DEBUG o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@17c8c7e] for JPA transaction 
2016-08-05 19:36:44,104 DEBUG o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction 
2016-08-05 19:36:44,104 DEBUG o.s.d.j.r.s.CrudMethodMetadataPostProcessor$ThreadBoundTargetSource - Initializing lazy target object 
2016-08-05 19:36:44,119 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-05 19:36:44,119 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [p-002] 
2016-08-05 19:36:44,166 DEBUG o.h.l.p.e.p.i.ResultSetProcessorImpl - Starting ResultSet row #0 
2016-08-05 19:36:44,166 DEBUG o.h.l.p.e.p.i.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified 
2016-08-05 19:36:44,182 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([harga2_0_0_] : [NUMERIC]) - [375000.00] 
2016-08-05 19:36:44,182 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([kode_pro3_0_0_] : [VARCHAR]) - [produk-002] 
2016-08-05 19:36:44,182 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([nama_pro4_0_0_] : [VARCHAR]) - [Produk B] 
2016-08-05 19:36:44,182 DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.agung.template.springjpa.entity.Produk#p-002] 
2016-08-05 19:36:44,182 DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.agung.template.springjpa.entity.Produk#p-002] 
2016-08-05 19:36:44,197 DEBUG o.h.l.e.p.AbstractLoadPlanBasedEntityLoader - Done entity load : com.agung.template.springjpa.entity.Produk#p-002 
2016-08-05 19:36:44,197 DEBUG o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit 
2016-08-05 19:36:44,197 DEBUG o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@17c8c7e] 
2016-08-05 19:36:44,197 DEBUG o.h.e.t.spi.AbstractTransactionImpl - committing 
2016-08-05 19:36:44,197 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - committed JDBC Connection 
2016-08-05 19:36:44,197 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - re-enabling autocommit 
2016-08-05 19:36:44,197 DEBUG o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@17c8c7e] after transaction 
2016-08-05 19:36:44,197 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-05 19:36:44,197 DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection 
2016-08-05 19:36:44,197 DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection 
2016-08-05 19:36:44,213 DEBUG o.s.t.c.s.DirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = com.agung.template.springjpa.produktest.ProdukDaoTest@3fc542, testMethod = testFindProdukById@ProdukDaoTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false]. 
2016-08-05 19:36:44,213 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-05 19:36:44,213 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-05 19:36:44,213 DEBUG o.s.t.c.s.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = com.agung.template.springjpa.produktest.ProdukDaoTest@447c76, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]. 
2016-08-05 19:36:44,213 DEBUG o.s.t.c.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]] 
2016-08-05 19:36:44,213 DEBUG o.s.test.context.cache - Spring test ApplicationContext cache statistics: [ContextCache@ee53dc size = 1, hitCount = 1, missCount = 1, parentContextCount = 0] 
2016-08-05 19:36:44,213 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'com.agung.template.springjpa.produktest.ProdukDaoTest': AutowiredFieldElement for private com.agung.template.springjpa.service.ProdukService com.agung.template.springjpa.produktest.ProdukDaoTest.pService 
2016-08-05 19:36:44,213 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'produkService' 
2016-08-05 19:36:44,213 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'com.agung.template.springjpa.produktest.ProdukDaoTest': AutowiredFieldElement for private javax.sql.DataSource com.agung.template.springjpa.produktest.ProdukDaoTest.ds 
2016-08-05 19:36:44,213 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource' 
2016-08-05 19:36:44,213 DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null] 
2016-08-05 19:36:44,213 DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null] 
2016-08-05 19:36:44,213 DEBUG o.d.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start 
2016-08-05 19:36:44,213 DEBUG o.d.dataset.xml.FlatXmlProducer - produce() - start 
2016-08-05 19:36:44,213 DEBUG o.d.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@fc097e, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@40c151) - start 
2016-08-05 19:36:44,213 DEBUG o.d.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@fc097e, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@40c151) - start 
2016-08-05 19:36:44,213 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@15b5fa7) - start 
2016-08-05 19:36:44,213 DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start 
2016-08-05 19:36:44,213 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@15b5fa7) - start 
2016-08-05 19:36:44,213 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,213 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:44,213 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,213 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,213 DEBUG o.d.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@15b5fa7) - start 
2016-08-05 19:36:44,213 DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)]) - start 
2016-08-05 19:36:44,213 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-05 19:36:44,213 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,213 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,213 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-05 19:36:44,213 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-001) - start 
2016-08-05 19:36:44,228 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-001) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@15b5fa7) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-002) - start 
2016-08-05 19:36:44,228 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-002) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@15b5fa7) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-003) - start 
2016-08-05 19:36:44,228 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-003) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@15b5fa7) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-004) - start 
2016-08-05 19:36:44,228 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-004) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@15b5fa7) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-005) - start 
2016-08-05 19:36:44,228 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-005) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start 
2016-08-05 19:36:44,228 DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[m_produk], _tableMap={M_PRODUK=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]}, _caseSensitiveTableNames=false] 
2016-08-05 19:36:44,228 DEBUG o.d.database.DatabaseConnection - Database connection info: 
	database product name=MySQL
	database version=5.6.22-log
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
	jdbc driver major version=5
	jdbc driver minor version=1
 
2016-08-05 19:36:44,228 DEBUG o.d.database.DatabaseConnection - validateSchema(validateStrict=false) - start 
2016-08-05 19:36:44,228 DEBUG o.d.database.DatabaseConnection - Schema is null. Nothing to validate. 
2016-08-05 19:36:44,228 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-05 19:36:44,228 DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - orderedValues() - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,228 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-05 19:36:44,228 DEBUG org.dbunit.dataset.CompositeDataSet - addTable(newTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], tableList=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[], _tableMap={}, _caseSensitiveTableNames=false], combine=true) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - orderedValues() - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,244 DEBUG o.d.operation.CompositeOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=null], , dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-05 19:36:44,244 DEBUG o.d.operation.DeleteAllOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-05 19:36:44,244 DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start 
2016-08-05 19:36:44,244 DEBUG o.d.d.s.PreparedStatementFactory - createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,244 DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,244 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-05 19:36:44,244 DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-05 19:36:44,244 DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=m_produk) - start 
2016-08-05 19:36:44,244 DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start 
2016-08-05 19:36:44,244 DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database... 
2016-08-05 19:36:44,244 DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=MySQL
	database version=5.6.22-log
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
	jdbc driver major version=5
	jdbc driver minor version=1
 
2016-08-05 19:36:44,244 DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=org.apache.commons.dbcp.DelegatingResultSet@11f1eaf 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}]) - start 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=berita, escapePattern=null) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=berita, object=null) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=berita) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=berita) - end - result=BERITA 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=BERITA) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=BERITA) - end - result=BERITA 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}]) - start 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=komentar, escapePattern=null) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=komentar, object=null) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar) - end - result=KOMENTAR 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR) - end - result=KOMENTAR 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}]) - start 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=komentar_berita, escapePattern=null) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=komentar_berita, object=null) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar_berita) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar_berita) - end - result=KOMENTAR_BERITA 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR_BERITA) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR_BERITA) - end - result=KOMENTAR_BERITA 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}]) - start 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=null) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}]) - start 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=mahasiswa, escapePattern=null) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=mahasiswa, object=null) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=mahasiswa) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=mahasiswa) - end - result=MAHASISWA 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=MAHASISWA) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=MAHASISWA) - end - result=MAHASISWA 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}]) - start 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_menu, escapePattern=null) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_menu, object=null) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_menu) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_menu) - end - result=T_MENU 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_MENU) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_MENU) - end - result=T_MENU 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}]) - start 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_permission, escapePattern=null) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_permission, object=null) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_permission) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_permission) - end - result=T_PERMISSION 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_PERMISSION) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_PERMISSION) - end - result=T_PERMISSION 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}]) - start 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_role, escapePattern=null) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_role, object=null) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_role) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_role) - end - result=T_ROLE 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_ROLE) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_ROLE) - end - result=T_ROLE 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}]) - start 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_user, escapePattern=null) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_user, object=null) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_user) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_user) - end - result=T_USER 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_USER) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_USER) - end - result=T_USER 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,244 DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=m_produk (dbIdentifierQuoteString=`) 
2016-08-05 19:36:44,244 DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'm_produk' exists in schema 'null' ... 
2016-08-05 19:36:44,260 DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.apache.commons.dbcp.DelegatingResultSet@ec7116) - start 
2016-08-05 19:36:44,260 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,275 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-05 19:36:44,275 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>id 
2016-08-05 19:36:44,275 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=id) - start 
2016-08-05 19:36:44,275 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-05 19:36:44,275 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-05 19:36:44,275 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,275 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-05 19:36:44,275 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-05 19:36:44,275 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>harga 
2016-08-05 19:36:44,275 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=3 , sqlTypeName=DECIMAL, tableName=m_produk, columnName=harga) - start 
2016-08-05 19:36:44,275 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=3, sqlTypeName=DECIMAL) - start 
2016-08-05 19:36:44,275 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=3) - start 
2016-08-05 19:36:44,275 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,275 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,275 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,275 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,275 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,275 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,275 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,275 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,275 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,275 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-05 19:36:44,275 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-05 19:36:44,275 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>kode_produk 
2016-08-05 19:36:44,275 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=kode_produk) - start 
2016-08-05 19:36:44,275 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-05 19:36:44,275 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-05 19:36:44,275 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,275 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-05 19:36:44,275 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-05 19:36:44,275 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>nama_produk 
2016-08-05 19:36:44,275 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=nama_produk) - start 
2016-08-05 19:36:44,275 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-05 19:36:44,275 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-05 19:36:44,275 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,275 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-05 19:36:44,275 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-05 19:36:44,275 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start 
2016-08-05 19:36:44,275 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeyNames() - start 
2016-08-05 19:36:44,275 DEBUG o.d.database.DatabaseTableMetaData - getName() - start 
2016-08-05 19:36:44,275 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,275 DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[id], columns=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)]) - start 
2016-08-05 19:36:44,275 DEBUG org.dbunit.dataset.Columns - getColumn(columnName=id, columns=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)]) - start 
2016-08-05 19:36:44,260 DEBUG o.d.dataset.OrderedTableNameMap - update(tableName=m_produk, object=table=m_produk, cols=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)], pk=[(id, VARCHAR, noNulls)]) - start 
2016-08-05 19:36:44,275 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,275 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,275 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,275 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,275 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=m_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,275 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:44,275 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-05 19:36:44,275 DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from m_produk) - start 
2016-08-05 19:36:44,275 DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from m_produk 
2016-08-05 19:36:44,275 DEBUG o.d.d.statement.SimpleStatement - executeBatch() - start 
2016-08-05 19:36:44,275 DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from m_produk 
2016-08-05 19:36:44,291 DEBUG o.d.d.statement.SimpleStatement - clearBatch() - start 
2016-08-05 19:36:44,291 DEBUG o.d.d.s.AbstractBatchStatement - close() - start 
2016-08-05 19:36:44,291 DEBUG o.d.o.AbstractBatchOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start 
2016-08-05 19:36:44,291 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-05 19:36:44,291 DEBUG o.d.o.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,291 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,291 DEBUG o.d.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-05 19:36:44,291 DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=m_produk) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start 
2016-08-05 19:36:44,291 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,291 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,291 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,291 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,291 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,291 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,291 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,291 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,291 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,291 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,291 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,291 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,291 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,291 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start 
2016-08-05 19:36:44,291 DEBUG o.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=0) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,291 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=kode_produk) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,291 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=nama_produk) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,291 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=harga) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,291 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,291 DEBUG o.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=m_produk, columns=[(id, VARCHAR, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls), (harga, DECIMAL, noNulls)], keys=[(id, VARCHAR, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,291 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=m_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-05 19:36:44,291 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=id, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:44,291 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=id, escapePattern=null) - start 
2016-08-05 19:36:44,291 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=kode_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=kode_produk, escapePattern=null) - start 
2016-08-05 19:36:44,306 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=nama_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=nama_produk, escapePattern=null) - start 
2016-08-05 19:36:44,306 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=harga, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=harga, escapePattern=null) - start 
2016-08-05 19:36:44,306 DEBUG o.d.d.s.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into m_produk (id, kode_produk, nama_produk, harga) values (?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,306 DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,306 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,306 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-001, dataType=VARCHAR) - start 
2016-08-05 19:36:44,306 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-001, dataType=VARCHAR) - start 
2016-08-05 19:36:44,306 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-001, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-05 19:36:44,306 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-001) - start 
2016-08-05 19:36:44,306 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-001) - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=kode_produk) - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,306 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,306 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-001, dataType=VARCHAR) - start 
2016-08-05 19:36:44,306 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-001, dataType=VARCHAR) - start 
2016-08-05 19:36:44,306 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-001, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-05 19:36:44,306 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-001) - start 
2016-08-05 19:36:44,306 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-001) - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=nama_produk) - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,306 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,306 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk A, dataType=VARCHAR) - start 
2016-08-05 19:36:44,306 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk A, dataType=VARCHAR) - start 
2016-08-05 19:36:44,306 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk A, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-05 19:36:44,306 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk A) - start 
2016-08-05 19:36:44,306 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk A) - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=harga) - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,306 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,306 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,306 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=250000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,306 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=250000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,306 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=250000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', 'Produk A', ** NOT SPECIFIED **)) - start 
2016-08-05 19:36:44,306 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=250000) - start 
2016-08-05 19:36:44,306 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:44,306 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:44,338 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=1) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=kode_produk) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=nama_produk) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=harga) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,338 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-002, dataType=VARCHAR) - start 
2016-08-05 19:36:44,338 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-002, dataType=VARCHAR) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-002, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', 'Produk A', 250000)) - start 
2016-08-05 19:36:44,338 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-002) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-002) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=kode_produk) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,338 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-002, dataType=VARCHAR) - start 
2016-08-05 19:36:44,338 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-002, dataType=VARCHAR) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-002, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-001', 'Produk A', 250000)) - start 
2016-08-05 19:36:44,338 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-002) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-002) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=nama_produk) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,338 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk B, dataType=VARCHAR) - start 
2016-08-05 19:36:44,338 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk B, dataType=VARCHAR) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk B, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk A', 250000)) - start 
2016-08-05 19:36:44,338 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk B) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk B) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=harga) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,338 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=375000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,338 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=375000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=375000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk B', 250000)) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=375000) - start 
2016-08-05 19:36:44,338 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:44,338 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:44,338 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=2) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=kode_produk) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=nama_produk) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=harga) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,338 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,338 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-003, dataType=VARCHAR) - start 
2016-08-05 19:36:44,338 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-003, dataType=VARCHAR) - start 
2016-08-05 19:36:44,338 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-003, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk B', 375000)) - start 
2016-08-05 19:36:44,338 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-003) - start 
2016-08-05 19:36:44,353 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-003) - start 
2016-08-05 19:36:44,353 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=kode_produk) - start 
2016-08-05 19:36:44,353 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,353 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,353 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,353 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,353 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-003, dataType=VARCHAR) - start 
2016-08-05 19:36:44,353 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-003, dataType=VARCHAR) - start 
2016-08-05 19:36:44,353 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-003, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-002', 'Produk B', 375000)) - start 
2016-08-05 19:36:44,353 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-003) - start 
2016-08-05 19:36:44,353 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-003) - start 
2016-08-05 19:36:44,353 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=nama_produk) - start 
2016-08-05 19:36:44,353 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,353 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,353 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,353 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,353 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk C, dataType=VARCHAR) - start 
2016-08-05 19:36:44,353 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk C, dataType=VARCHAR) - start 
2016-08-05 19:36:44,353 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk C, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk B', 375000)) - start 
2016-08-05 19:36:44,353 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk C) - start 
2016-08-05 19:36:44,353 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk C) - start 
2016-08-05 19:36:44,353 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=harga) - start 
2016-08-05 19:36:44,353 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,353 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,353 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,353 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,353 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=420000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,353 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=420000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,353 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=420000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk C', 375000)) - start 
2016-08-05 19:36:44,353 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=420000) - start 
2016-08-05 19:36:44,353 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:44,353 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:44,353 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=3) - start 
2016-08-05 19:36:44,353 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,369 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=kode_produk) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,369 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=nama_produk) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,369 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=harga) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,369 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,369 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,369 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-004, dataType=VARCHAR) - start 
2016-08-05 19:36:44,369 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-004, dataType=VARCHAR) - start 
2016-08-05 19:36:44,369 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-004, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk C', 420000)) - start 
2016-08-05 19:36:44,369 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-004) - start 
2016-08-05 19:36:44,369 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-004) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=kode_produk) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,369 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,369 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-004, dataType=VARCHAR) - start 
2016-08-05 19:36:44,369 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-004, dataType=VARCHAR) - start 
2016-08-05 19:36:44,369 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-004, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-003', 'Produk C', 420000)) - start 
2016-08-05 19:36:44,369 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-004) - start 
2016-08-05 19:36:44,369 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-004) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=nama_produk) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,369 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,369 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk D, dataType=VARCHAR) - start 
2016-08-05 19:36:44,369 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk D, dataType=VARCHAR) - start 
2016-08-05 19:36:44,369 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk D, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk C', 420000)) - start 
2016-08-05 19:36:44,369 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk D) - start 
2016-08-05 19:36:44,369 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk D) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=harga) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,369 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,369 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,369 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=580000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,369 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=580000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,369 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=580000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk D', 420000)) - start 
2016-08-05 19:36:44,369 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=580000) - start 
2016-08-05 19:36:44,369 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:44,369 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:44,384 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=4) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,384 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=kode_produk) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,384 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=nama_produk) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,384 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=harga) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,384 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,384 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,384 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-005, dataType=VARCHAR) - start 
2016-08-05 19:36:44,384 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-005, dataType=VARCHAR) - start 
2016-08-05 19:36:44,384 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-005, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk D', 580000)) - start 
2016-08-05 19:36:44,384 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-005) - start 
2016-08-05 19:36:44,384 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-005) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=kode_produk) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,384 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,384 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-005, dataType=VARCHAR) - start 
2016-08-05 19:36:44,384 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-005, dataType=VARCHAR) - start 
2016-08-05 19:36:44,384 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-005, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-004', 'Produk D', 580000)) - start 
2016-08-05 19:36:44,384 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-005) - start 
2016-08-05 19:36:44,384 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-005) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=nama_produk) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,384 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,384 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk E, dataType=VARCHAR) - start 
2016-08-05 19:36:44,384 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk E, dataType=VARCHAR) - start 
2016-08-05 19:36:44,384 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk E, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-005', 'Produk D', 580000)) - start 
2016-08-05 19:36:44,384 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk E) - start 
2016-08-05 19:36:44,384 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk E) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=harga) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,384 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,384 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=640000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,384 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=640000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,384 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=640000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-005', 'Produk E', 580000)) - start 
2016-08-05 19:36:44,384 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=640000) - start 
2016-08-05 19:36:44,384 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:44,384 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:44,384 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=5) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=id) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start 
2016-08-05 19:36:44,384 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=5) - start 
2016-08-05 19:36:44,384 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - executeBatch() - start 
2016-08-05 19:36:44,384 DEBUG o.d.d.s.SimplePreparedStatement - executeBatch() - start 
2016-08-05 19:36:44,384 DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start 
2016-08-05 19:36:44,384 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - clearBatch() - start 
2016-08-05 19:36:44,384 DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start 
2016-08-05 19:36:44,384 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - close() - start 
2016-08-05 19:36:44,384 DEBUG o.d.d.s.AbstractPreparedBatchStatement - close() - start 
2016-08-05 19:36:44,384 DEBUG o.s.t.a.AnnotationTransactionAttributeSource - Adding transactional method 'ProdukServiceImpl.countAllProduk' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; '' 
2016-08-05 19:36:44,384 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-05 19:36:44,384 DEBUG o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.agung.template.springjpa.service.impl.ProdukServiceImpl.countAllProduk]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; '' 
2016-08-05 19:36:44,384 DEBUG o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@14ade6e] for JPA transaction 
2016-08-05 19:36:44,384 DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin 
2016-08-05 19:36:44,384 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection 
2016-08-05 19:36:44,478 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection 
2016-08-05 19:36:44,478 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: true 
2016-08-05 19:36:44,478 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - disabling autocommit 
2016-08-05 19:36:44,478 DEBUG o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6cb891] 
2016-08-05 19:36:44,478 DEBUG o.s.d.r.c.s.TransactionalRepositoryProxyPostProcessor$CustomAnnotationTransactionAttributeSource - Adding transactional method 'count' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; '' 
2016-08-05 19:36:44,478 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-05 19:36:44,478 DEBUG o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@14ade6e] for JPA transaction 
2016-08-05 19:36:44,478 DEBUG o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction 
2016-08-05 19:36:44,478 DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select count(*) from com.agung.template.springjpa.entity.Produk x 
2016-08-05 19:36:44,478 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'agung'
       |     |  |  |  |  \-[IDENT] Node: 'template'
       |     |  |  |  \-[IDENT] Node: 'springjpa'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Produk'
       |     \-[ALIAS] Node: 'x'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[ROW_STAR] Node: '*'
 
2016-08-05 19:36:44,478 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-05 19:36:44,478 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select] 
2016-08-05 19:36:44,478 DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.agung.template.springjpa.entity.Produk (x) -> produk0_ 
2016-08-05 19:36:44,478 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select] 
2016-08-05 19:36:44,478 DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} m_produk produk0_ ) ) 
2016-08-05 19:36:44,478 DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [m_produk produk0_] 
2016-08-05 19:36:44,478 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select] 
2016-08-05 19:36:44,478 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (m_produk)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[x], fromElementByTableAlias=[produk0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'm_produk produk0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=x,role=null,tableName=m_produk,tableAlias=produk0_,origin=null,columns={,className=com.agung.template.springjpa.entity.Produk}}
 
2016-08-05 19:36:44,478 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-05 19:36:44,478 DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select count(*) from com.agung.template.springjpa.entity.Produk x 
2016-08-05 19:36:44,478 DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select count(*) as col_0_0_ from m_produk produk0_ 
2016-08-05 19:36:44,478 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-05 19:36:44,478 DEBUG org.hibernate.SQL - 
    select
        count(*) as col_0_0_ 
    from
        m_produk produk0_ 
2016-08-05 19:36:44,509 DEBUG org.hibernate.loader.Loader - Result set row: 0 
2016-08-05 19:36:44,509 DEBUG org.hibernate.loader.Loader - Result row:  
2016-08-05 19:36:44,525 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([col_0_0_] : [BIGINT]) - [5] 
2016-08-05 19:36:44,525 DEBUG o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit 
2016-08-05 19:36:44,525 DEBUG o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@14ade6e] 
2016-08-05 19:36:44,525 DEBUG o.h.e.t.spi.AbstractTransactionImpl - committing 
2016-08-05 19:36:44,525 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - committed JDBC Connection 
2016-08-05 19:36:44,525 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - re-enabling autocommit 
2016-08-05 19:36:44,525 DEBUG o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@14ade6e] after transaction 
2016-08-05 19:36:44,525 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-05 19:36:44,525 DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection 
2016-08-05 19:36:44,525 DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection 
2016-08-05 19:36:44,525 DEBUG o.s.t.c.s.DirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = com.agung.template.springjpa.produktest.ProdukDaoTest@447c76, testMethod = testCountAllProduk@ProdukDaoTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false]. 
2016-08-05 19:36:44,525 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-05 19:36:44,525 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-05 19:36:44,525 DEBUG o.s.t.c.s.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = com.agung.template.springjpa.produktest.ProdukDaoTest@16498e, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]. 
2016-08-05 19:36:44,525 DEBUG o.s.t.c.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]] 
2016-08-05 19:36:44,525 DEBUG o.s.test.context.cache - Spring test ApplicationContext cache statistics: [ContextCache@ee53dc size = 1, hitCount = 2, missCount = 1, parentContextCount = 0] 
2016-08-05 19:36:44,525 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'com.agung.template.springjpa.produktest.ProdukDaoTest': AutowiredFieldElement for private com.agung.template.springjpa.service.ProdukService com.agung.template.springjpa.produktest.ProdukDaoTest.pService 
2016-08-05 19:36:44,525 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'produkService' 
2016-08-05 19:36:44,525 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'com.agung.template.springjpa.produktest.ProdukDaoTest': AutowiredFieldElement for private javax.sql.DataSource com.agung.template.springjpa.produktest.ProdukDaoTest.ds 
2016-08-05 19:36:44,525 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource' 
2016-08-05 19:36:44,525 DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null] 
2016-08-05 19:36:44,525 DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null] 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.xml.FlatXmlProducer - produce() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@12e0f78, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@f6c41) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@12e0f78, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@f6c41) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@59d7b1) - start 
2016-08-05 19:36:44,525 DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@59d7b1) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@59d7b1) - start 
2016-08-05 19:36:44,525 DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)]) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-001) - start 
2016-08-05 19:36:44,525 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-001) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@59d7b1) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-002) - start 
2016-08-05 19:36:44,525 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-002) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@59d7b1) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-003) - start 
2016-08-05 19:36:44,525 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-003) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@59d7b1) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-004) - start 
2016-08-05 19:36:44,525 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-004) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@59d7b1) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-005) - start 
2016-08-05 19:36:44,525 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-005) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start 
2016-08-05 19:36:44,525 DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[m_produk], _tableMap={M_PRODUK=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]}, _caseSensitiveTableNames=false] 
2016-08-05 19:36:44,525 DEBUG o.d.database.DatabaseConnection - Database connection info: 
	database product name=MySQL
	database version=5.6.22-log
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
	jdbc driver major version=5
	jdbc driver minor version=1
 
2016-08-05 19:36:44,525 DEBUG o.d.database.DatabaseConnection - validateSchema(validateStrict=false) - start 
2016-08-05 19:36:44,525 DEBUG o.d.database.DatabaseConnection - Schema is null. Nothing to validate. 
2016-08-05 19:36:44,525 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-05 19:36:44,525 DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - orderedValues() - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-05 19:36:44,525 DEBUG org.dbunit.dataset.CompositeDataSet - addTable(newTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], tableList=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[], _tableMap={}, _caseSensitiveTableNames=false], combine=true) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-05 19:36:44,525 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - orderedValues() - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,540 DEBUG o.d.operation.CompositeOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=null], , dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-05 19:36:44,540 DEBUG o.d.operation.DeleteAllOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-05 19:36:44,540 DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start 
2016-08-05 19:36:44,540 DEBUG o.d.d.s.PreparedStatementFactory - createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,540 DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,540 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-05 19:36:44,540 DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-05 19:36:44,540 DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=m_produk) - start 
2016-08-05 19:36:44,540 DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start 
2016-08-05 19:36:44,540 DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database... 
2016-08-05 19:36:44,540 DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=MySQL
	database version=5.6.22-log
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
	jdbc driver major version=5
	jdbc driver minor version=1
 
2016-08-05 19:36:44,540 DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=org.apache.commons.dbcp.DelegatingResultSet@cb98a3 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}]) - start 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=berita, escapePattern=null) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=berita, object=null) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=berita) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=berita) - end - result=BERITA 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=BERITA) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=BERITA) - end - result=BERITA 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}]) - start 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=komentar, escapePattern=null) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=komentar, object=null) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar) - end - result=KOMENTAR 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR) - end - result=KOMENTAR 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}]) - start 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=komentar_berita, escapePattern=null) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=komentar_berita, object=null) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar_berita) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar_berita) - end - result=KOMENTAR_BERITA 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR_BERITA) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR_BERITA) - end - result=KOMENTAR_BERITA 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}]) - start 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=null) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}]) - start 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=mahasiswa, escapePattern=null) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=mahasiswa, object=null) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=mahasiswa) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=mahasiswa) - end - result=MAHASISWA 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=MAHASISWA) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=MAHASISWA) - end - result=MAHASISWA 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}]) - start 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_menu, escapePattern=null) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_menu, object=null) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_menu) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_menu) - end - result=T_MENU 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_MENU) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_MENU) - end - result=T_MENU 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}]) - start 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_permission, escapePattern=null) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_permission, object=null) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_permission) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_permission) - end - result=T_PERMISSION 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_PERMISSION) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_PERMISSION) - end - result=T_PERMISSION 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}]) - start 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_role, escapePattern=null) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_role, object=null) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_role) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_role) - end - result=T_ROLE 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_ROLE) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_ROLE) - end - result=T_ROLE 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}]) - start 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_user, escapePattern=null) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_user, object=null) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_user) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_user) - end - result=T_USER 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_USER) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_USER) - end - result=T_USER 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=m_produk (dbIdentifierQuoteString=`) 
2016-08-05 19:36:44,540 DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'm_produk' exists in schema 'null' ... 
2016-08-05 19:36:44,540 DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.apache.commons.dbcp.DelegatingResultSet@12f4a93) - start 
2016-08-05 19:36:44,540 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,556 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-05 19:36:44,556 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>id 
2016-08-05 19:36:44,556 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=id) - start 
2016-08-05 19:36:44,556 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-05 19:36:44,556 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-05 19:36:44,556 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,556 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-05 19:36:44,556 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-05 19:36:44,556 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>harga 
2016-08-05 19:36:44,556 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=3 , sqlTypeName=DECIMAL, tableName=m_produk, columnName=harga) - start 
2016-08-05 19:36:44,556 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=3, sqlTypeName=DECIMAL) - start 
2016-08-05 19:36:44,556 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=3) - start 
2016-08-05 19:36:44,556 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,556 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,556 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,556 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,556 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,556 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,556 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,556 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,556 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,556 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-05 19:36:44,556 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-05 19:36:44,556 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>kode_produk 
2016-08-05 19:36:44,556 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=kode_produk) - start 
2016-08-05 19:36:44,556 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-05 19:36:44,556 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-05 19:36:44,556 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,556 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-05 19:36:44,556 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-05 19:36:44,556 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>nama_produk 
2016-08-05 19:36:44,556 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=nama_produk) - start 
2016-08-05 19:36:44,556 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-05 19:36:44,556 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-05 19:36:44,556 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,556 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-05 19:36:44,556 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-05 19:36:44,556 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start 
2016-08-05 19:36:44,556 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeyNames() - start 
2016-08-05 19:36:44,556 DEBUG o.d.database.DatabaseTableMetaData - getName() - start 
2016-08-05 19:36:44,572 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,572 DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[id], columns=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)]) - start 
2016-08-05 19:36:44,572 DEBUG org.dbunit.dataset.Columns - getColumn(columnName=id, columns=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)]) - start 
2016-08-05 19:36:44,540 DEBUG o.d.dataset.OrderedTableNameMap - update(tableName=m_produk, object=table=m_produk, cols=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)], pk=[(id, VARCHAR, noNulls)]) - start 
2016-08-05 19:36:44,572 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,572 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,572 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,572 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,572 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=m_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,572 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:44,572 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-05 19:36:44,572 DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from m_produk) - start 
2016-08-05 19:36:44,572 DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from m_produk 
2016-08-05 19:36:44,572 DEBUG o.d.d.statement.SimpleStatement - executeBatch() - start 
2016-08-05 19:36:44,572 DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from m_produk 
2016-08-05 19:36:44,618 DEBUG o.d.d.statement.SimpleStatement - clearBatch() - start 
2016-08-05 19:36:44,618 DEBUG o.d.d.s.AbstractBatchStatement - close() - start 
2016-08-05 19:36:44,618 DEBUG o.d.o.AbstractBatchOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start 
2016-08-05 19:36:44,618 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-05 19:36:44,618 DEBUG o.d.o.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,618 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,618 DEBUG o.d.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-05 19:36:44,618 DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=m_produk) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start 
2016-08-05 19:36:44,618 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,618 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,618 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,618 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,618 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,618 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,618 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,618 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,618 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,618 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,618 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,618 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,618 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,618 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start 
2016-08-05 19:36:44,618 DEBUG o.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=0) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,618 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=kode_produk) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,618 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=nama_produk) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,618 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=harga) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,618 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,618 DEBUG o.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=m_produk, columns=[(id, VARCHAR, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls), (harga, DECIMAL, noNulls)], keys=[(id, VARCHAR, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,618 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=m_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-05 19:36:44,618 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=id, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=id, escapePattern=null) - start 
2016-08-05 19:36:44,618 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=kode_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=kode_produk, escapePattern=null) - start 
2016-08-05 19:36:44,618 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=nama_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=nama_produk, escapePattern=null) - start 
2016-08-05 19:36:44,618 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=harga, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:44,618 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=harga, escapePattern=null) - start 
2016-08-05 19:36:44,618 DEBUG o.d.d.s.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into m_produk (id, kode_produk, nama_produk, harga) values (?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,618 DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,634 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-05 19:36:44,634 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,634 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,634 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,634 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,634 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-001, dataType=VARCHAR) - start 
2016-08-05 19:36:44,634 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-001, dataType=VARCHAR) - start 
2016-08-05 19:36:44,634 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-001, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-05 19:36:44,634 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-001) - start 
2016-08-05 19:36:44,634 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-001) - start 
2016-08-05 19:36:44,634 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=kode_produk) - start 
2016-08-05 19:36:44,634 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,634 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,634 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,634 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,634 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-001, dataType=VARCHAR) - start 
2016-08-05 19:36:44,634 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-001, dataType=VARCHAR) - start 
2016-08-05 19:36:44,634 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-001, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-05 19:36:44,634 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-001) - start 
2016-08-05 19:36:44,634 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-001) - start 
2016-08-05 19:36:44,634 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=nama_produk) - start 
2016-08-05 19:36:44,634 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,634 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,634 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,634 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,634 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk A, dataType=VARCHAR) - start 
2016-08-05 19:36:44,634 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk A, dataType=VARCHAR) - start 
2016-08-05 19:36:44,634 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk A, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-05 19:36:44,634 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk A) - start 
2016-08-05 19:36:44,634 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk A) - start 
2016-08-05 19:36:44,634 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=harga) - start 
2016-08-05 19:36:44,634 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,634 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,634 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,634 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,634 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=250000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,634 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=250000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,634 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=250000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', 'Produk A', ** NOT SPECIFIED **)) - start 
2016-08-05 19:36:44,634 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=250000) - start 
2016-08-05 19:36:44,634 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:44,634 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:44,650 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=1) - start 
2016-08-05 19:36:44,650 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start 
2016-08-05 19:36:44,650 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,650 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,650 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,650 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,650 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=kode_produk) - start 
2016-08-05 19:36:44,650 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,650 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,650 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,650 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,650 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=nama_produk) - start 
2016-08-05 19:36:44,650 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,650 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,650 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,650 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,650 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=harga) - start 
2016-08-05 19:36:44,650 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,650 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,650 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,665 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-002, dataType=VARCHAR) - start 
2016-08-05 19:36:44,665 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-002, dataType=VARCHAR) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-002, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', 'Produk A', 250000)) - start 
2016-08-05 19:36:44,665 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-002) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-002) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=kode_produk) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,665 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-002, dataType=VARCHAR) - start 
2016-08-05 19:36:44,665 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-002, dataType=VARCHAR) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-002, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-001', 'Produk A', 250000)) - start 
2016-08-05 19:36:44,665 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-002) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-002) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=nama_produk) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,665 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk B, dataType=VARCHAR) - start 
2016-08-05 19:36:44,665 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk B, dataType=VARCHAR) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk B, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk A', 250000)) - start 
2016-08-05 19:36:44,665 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk B) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk B) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=harga) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,665 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=375000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,665 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=375000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=375000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk B', 250000)) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=375000) - start 
2016-08-05 19:36:44,665 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:44,665 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:44,665 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=2) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=kode_produk) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=nama_produk) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=harga) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,665 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-003, dataType=VARCHAR) - start 
2016-08-05 19:36:44,665 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-003, dataType=VARCHAR) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-003, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk B', 375000)) - start 
2016-08-05 19:36:44,665 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-003) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-003) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=kode_produk) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,665 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-003, dataType=VARCHAR) - start 
2016-08-05 19:36:44,665 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-003, dataType=VARCHAR) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-003, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-002', 'Produk B', 375000)) - start 
2016-08-05 19:36:44,665 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-003) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-003) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=nama_produk) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,665 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk C, dataType=VARCHAR) - start 
2016-08-05 19:36:44,665 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk C, dataType=VARCHAR) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk C, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk B', 375000)) - start 
2016-08-05 19:36:44,665 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk C) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk C) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=harga) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,665 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=420000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,665 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=420000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=420000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk C', 375000)) - start 
2016-08-05 19:36:44,665 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=420000) - start 
2016-08-05 19:36:44,665 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:44,665 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:44,665 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=3) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,665 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=kode_produk) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=nama_produk) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=harga) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,681 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-004, dataType=VARCHAR) - start 
2016-08-05 19:36:44,681 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-004, dataType=VARCHAR) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-004, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk C', 420000)) - start 
2016-08-05 19:36:44,681 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-004) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-004) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=kode_produk) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,681 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-004, dataType=VARCHAR) - start 
2016-08-05 19:36:44,681 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-004, dataType=VARCHAR) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-004, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-003', 'Produk C', 420000)) - start 
2016-08-05 19:36:44,681 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-004) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-004) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=nama_produk) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,681 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk D, dataType=VARCHAR) - start 
2016-08-05 19:36:44,681 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk D, dataType=VARCHAR) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk D, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk C', 420000)) - start 
2016-08-05 19:36:44,681 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk D) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk D) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=harga) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,681 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=580000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,681 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=580000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=580000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk D', 420000)) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=580000) - start 
2016-08-05 19:36:44,681 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:44,681 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:44,681 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=4) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=kode_produk) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=nama_produk) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=harga) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,681 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-005, dataType=VARCHAR) - start 
2016-08-05 19:36:44,681 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-005, dataType=VARCHAR) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-005, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk D', 580000)) - start 
2016-08-05 19:36:44,681 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-005) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-005) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=kode_produk) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,681 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-005, dataType=VARCHAR) - start 
2016-08-05 19:36:44,681 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-005, dataType=VARCHAR) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-005, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-004', 'Produk D', 580000)) - start 
2016-08-05 19:36:44,681 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-005) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-005) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=nama_produk) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,681 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk E, dataType=VARCHAR) - start 
2016-08-05 19:36:44,681 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk E, dataType=VARCHAR) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk E, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-005', 'Produk D', 580000)) - start 
2016-08-05 19:36:44,681 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk E) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk E) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=harga) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:44,681 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,681 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=640000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,681 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=640000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=640000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-005', 'Produk E', 580000)) - start 
2016-08-05 19:36:44,681 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=640000) - start 
2016-08-05 19:36:44,681 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:44,681 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:44,696 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=5) - start 
2016-08-05 19:36:44,696 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=id) - start 
2016-08-05 19:36:44,696 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start 
2016-08-05 19:36:44,696 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=5) - start 
2016-08-05 19:36:44,696 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - executeBatch() - start 
2016-08-05 19:36:44,696 DEBUG o.d.d.s.SimplePreparedStatement - executeBatch() - start 
2016-08-05 19:36:44,696 DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start 
2016-08-05 19:36:44,696 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - clearBatch() - start 
2016-08-05 19:36:44,696 DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start 
2016-08-05 19:36:44,696 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - close() - start 
2016-08-05 19:36:44,696 DEBUG o.d.d.s.AbstractPreparedBatchStatement - close() - start 
2016-08-05 19:36:44,696 DEBUG o.s.t.a.AnnotationTransactionAttributeSource - Adding transactional method 'ProdukServiceImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '' 
2016-08-05 19:36:44,696 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-05 19:36:44,696 DEBUG o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.agung.template.springjpa.service.impl.ProdukServiceImpl.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '' 
2016-08-05 19:36:44,696 DEBUG o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1e49cb2] for JPA transaction 
2016-08-05 19:36:44,696 DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin 
2016-08-05 19:36:44,696 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection 
2016-08-05 19:36:44,728 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection 
2016-08-05 19:36:44,728 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: true 
2016-08-05 19:36:44,728 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - disabling autocommit 
2016-08-05 19:36:44,728 DEBUG o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@14cd74a] 
2016-08-05 19:36:44,728 DEBUG o.s.d.r.c.s.TransactionalRepositoryProxyPostProcessor$CustomAnnotationTransactionAttributeSource - Adding transactional method 'save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '' 
2016-08-05 19:36:44,728 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-05 19:36:44,728 DEBUG o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1e49cb2] for JPA transaction 
2016-08-05 19:36:44,728 DEBUG o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction 
2016-08-05 19:36:44,743 DEBUG o.h.e.i.DefaultMergeEventListener - EntityCopyObserver strategy: disallow 
2016-08-05 19:36:44,743 DEBUG org.hibernate.loader.Loader - Loading entity: [com.agung.template.springjpa.entity.Produk#pk-001] 
2016-08-05 19:36:44,743 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-05 19:36:44,743 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [pk-001] 
2016-08-05 19:36:44,743 DEBUG org.hibernate.loader.Loader - Done entity load 
2016-08-05 19:36:44,743 DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 30290796-464e-4bb0-9918-364988af294f, using strategy: org.hibernate.id.UUIDGenerator 
2016-08-05 19:36:44,759 DEBUG o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit 
2016-08-05 19:36:44,759 DEBUG o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1e49cb2] 
2016-08-05 19:36:44,759 DEBUG o.h.e.t.spi.AbstractTransactionImpl - committing 
2016-08-05 19:36:44,759 DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades 
2016-08-05 19:36:44,759 DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections 
2016-08-05 19:36:44,759 DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects 
2016-08-05 19:36:44,759 DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections 
2016-08-05 19:36:44,759 DEBUG o.h.internal.util.EntityPrinter - Listing entities: 
2016-08-05 19:36:44,759 DEBUG o.h.internal.util.EntityPrinter - com.agung.template.springjpa.entity.Produk{namaProduk=Produk-000, harga=175000, kodeProduk=p-000, id=30290796-464e-4bb0-9918-364988af294f} 
2016-08-05 19:36:44,774 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2016-08-05 19:36:44,774 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [NUMERIC] - [175000] 
2016-08-05 19:36:44,774 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [p-000] 
2016-08-05 19:36:44,774 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [Produk-000] 
2016-08-05 19:36:44,774 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [VARCHAR] - [30290796-464e-4bb0-9918-364988af294f] 
2016-08-05 19:36:44,774 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - committed JDBC Connection 
2016-08-05 19:36:44,774 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - re-enabling autocommit 
2016-08-05 19:36:44,774 DEBUG o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1e49cb2] after transaction 
2016-08-05 19:36:44,774 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-05 19:36:44,774 DEBUG o.h.e.j.i.JdbcCoordinatorImpl - HHH000420: Closing un-released batch 
2016-08-05 19:36:44,774 DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection 
2016-08-05 19:36:44,774 DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection 
2016-08-05 19:36:44,774 DEBUG o.s.t.c.s.DirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = com.agung.template.springjpa.produktest.ProdukDaoTest@16498e, testMethod = testInsertProdukData@ProdukDaoTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false]. 
2016-08-05 19:36:44,774 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-05 19:36:44,774 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-05 19:36:44,774 DEBUG o.s.t.c.s.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = com.agung.template.springjpa.produktest.ProdukDaoTest@a93621, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]. 
2016-08-05 19:36:44,774 DEBUG o.s.t.c.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]] 
2016-08-05 19:36:44,774 DEBUG o.s.test.context.cache - Spring test ApplicationContext cache statistics: [ContextCache@ee53dc size = 1, hitCount = 3, missCount = 1, parentContextCount = 0] 
2016-08-05 19:36:44,774 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'com.agung.template.springjpa.produktest.ProdukDaoTest': AutowiredFieldElement for private com.agung.template.springjpa.service.ProdukService com.agung.template.springjpa.produktest.ProdukDaoTest.pService 
2016-08-05 19:36:44,774 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'produkService' 
2016-08-05 19:36:44,774 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'com.agung.template.springjpa.produktest.ProdukDaoTest': AutowiredFieldElement for private javax.sql.DataSource com.agung.template.springjpa.produktest.ProdukDaoTest.ds 
2016-08-05 19:36:44,774 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource' 
2016-08-05 19:36:44,774 DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null] 
2016-08-05 19:36:44,774 DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null] 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.xml.FlatXmlProducer - produce() - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@48a7f3, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@1985a86) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@48a7f3, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@1985a86) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1a2ed35) - start 
2016-08-05 19:36:44,774 DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1a2ed35) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1a2ed35) - start 
2016-08-05 19:36:44,774 DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)]) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-05 19:36:44,774 DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,774 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-001) - start 
2016-08-05 19:36:44,774 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-001) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1a2ed35) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,774 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-002) - start 
2016-08-05 19:36:44,774 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-002) - start 
2016-08-05 19:36:44,774 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1a2ed35) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-003) - start 
2016-08-05 19:36:44,790 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-003) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1a2ed35) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-004) - start 
2016-08-05 19:36:44,790 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-004) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1a2ed35) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-005) - start 
2016-08-05 19:36:44,790 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-005) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start 
2016-08-05 19:36:44,790 DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[m_produk], _tableMap={M_PRODUK=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]}, _caseSensitiveTableNames=false] 
2016-08-05 19:36:44,790 DEBUG o.d.database.DatabaseConnection - Database connection info: 
	database product name=MySQL
	database version=5.6.22-log
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
	jdbc driver major version=5
	jdbc driver minor version=1
 
2016-08-05 19:36:44,790 DEBUG o.d.database.DatabaseConnection - validateSchema(validateStrict=false) - start 
2016-08-05 19:36:44,790 DEBUG o.d.database.DatabaseConnection - Schema is null. Nothing to validate. 
2016-08-05 19:36:44,790 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-05 19:36:44,790 DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - orderedValues() - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-05 19:36:44,790 DEBUG org.dbunit.dataset.CompositeDataSet - addTable(newTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], tableList=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[], _tableMap={}, _caseSensitiveTableNames=false], combine=true) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - orderedValues() - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,790 DEBUG o.d.operation.CompositeOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=null], , dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-05 19:36:44,790 DEBUG o.d.operation.DeleteAllOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-05 19:36:44,790 DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start 
2016-08-05 19:36:44,790 DEBUG o.d.d.s.PreparedStatementFactory - createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,790 DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,790 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-05 19:36:44,790 DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-05 19:36:44,790 DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=m_produk) - start 
2016-08-05 19:36:44,790 DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start 
2016-08-05 19:36:44,790 DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database... 
2016-08-05 19:36:44,790 DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=MySQL
	database version=5.6.22-log
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
	jdbc driver major version=5
	jdbc driver minor version=1
 
2016-08-05 19:36:44,790 DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=org.apache.commons.dbcp.DelegatingResultSet@bca971 
2016-08-05 19:36:44,790 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}]) - start 
2016-08-05 19:36:44,790 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,790 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=berita, escapePattern=null) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=berita, object=null) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=berita) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=berita) - end - result=BERITA 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=BERITA) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=BERITA) - end - result=BERITA 
2016-08-05 19:36:44,790 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}]) - start 
2016-08-05 19:36:44,790 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,790 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=komentar, escapePattern=null) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=komentar, object=null) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar) - end - result=KOMENTAR 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR) - end - result=KOMENTAR 
2016-08-05 19:36:44,790 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}]) - start 
2016-08-05 19:36:44,790 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,790 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=komentar_berita, escapePattern=null) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=komentar_berita, object=null) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar_berita) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar_berita) - end - result=KOMENTAR_BERITA 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR_BERITA) - start 
2016-08-05 19:36:44,790 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR_BERITA) - end - result=KOMENTAR_BERITA 
2016-08-05 19:36:44,806 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}]) - start 
2016-08-05 19:36:44,806 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,806 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=null) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-05 19:36:44,806 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}]) - start 
2016-08-05 19:36:44,806 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,806 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=mahasiswa, escapePattern=null) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=mahasiswa, object=null) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=mahasiswa) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=mahasiswa) - end - result=MAHASISWA 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=MAHASISWA) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=MAHASISWA) - end - result=MAHASISWA 
2016-08-05 19:36:44,806 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}]) - start 
2016-08-05 19:36:44,806 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,806 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_menu, escapePattern=null) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_menu, object=null) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_menu) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_menu) - end - result=T_MENU 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_MENU) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_MENU) - end - result=T_MENU 
2016-08-05 19:36:44,806 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}]) - start 
2016-08-05 19:36:44,806 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,806 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_permission, escapePattern=null) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_permission, object=null) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_permission) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_permission) - end - result=T_PERMISSION 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_PERMISSION) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_PERMISSION) - end - result=T_PERMISSION 
2016-08-05 19:36:44,806 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}]) - start 
2016-08-05 19:36:44,806 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,806 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_role, escapePattern=null) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_role, object=null) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_role) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_role) - end - result=T_ROLE 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_ROLE) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_ROLE) - end - result=T_ROLE 
2016-08-05 19:36:44,806 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}]) - start 
2016-08-05 19:36:44,806 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:44,806 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_user, escapePattern=null) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_user, object=null) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_user) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_user) - end - result=T_USER 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_USER) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_USER) - end - result=T_USER 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,806 DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=m_produk (dbIdentifierQuoteString=`) 
2016-08-05 19:36:44,806 DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'm_produk' exists in schema 'null' ... 
2016-08-05 19:36:44,806 DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.apache.commons.dbcp.DelegatingResultSet@9fed45) - start 
2016-08-05 19:36:44,806 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,821 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-05 19:36:44,821 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>id 
2016-08-05 19:36:44,821 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=id) - start 
2016-08-05 19:36:44,821 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-05 19:36:44,821 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-05 19:36:44,821 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,821 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-05 19:36:44,821 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-05 19:36:44,821 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>harga 
2016-08-05 19:36:44,821 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=3 , sqlTypeName=DECIMAL, tableName=m_produk, columnName=harga) - start 
2016-08-05 19:36:44,821 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=3, sqlTypeName=DECIMAL) - start 
2016-08-05 19:36:44,821 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=3) - start 
2016-08-05 19:36:44,821 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,821 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,821 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,821 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,821 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,821 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,821 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,821 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,821 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,821 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-05 19:36:44,821 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-05 19:36:44,821 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>kode_produk 
2016-08-05 19:36:44,821 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=kode_produk) - start 
2016-08-05 19:36:44,821 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-05 19:36:44,821 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-05 19:36:44,821 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,821 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-05 19:36:44,821 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-05 19:36:44,821 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>nama_produk 
2016-08-05 19:36:44,821 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=nama_produk) - start 
2016-08-05 19:36:44,821 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-05 19:36:44,821 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-05 19:36:44,821 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:44,821 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-05 19:36:44,821 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-05 19:36:44,821 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start 
2016-08-05 19:36:44,821 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeyNames() - start 
2016-08-05 19:36:44,837 DEBUG o.d.database.DatabaseTableMetaData - getName() - start 
2016-08-05 19:36:44,837 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,837 DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[id], columns=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)]) - start 
2016-08-05 19:36:44,837 DEBUG org.dbunit.dataset.Columns - getColumn(columnName=id, columns=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)]) - start 
2016-08-05 19:36:44,806 DEBUG o.d.dataset.OrderedTableNameMap - update(tableName=m_produk, object=table=m_produk, cols=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)], pk=[(id, VARCHAR, noNulls)]) - start 
2016-08-05 19:36:44,837 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,837 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,837 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,837 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,837 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=m_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,837 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:44,837 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-05 19:36:44,837 DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from m_produk) - start 
2016-08-05 19:36:44,837 DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from m_produk 
2016-08-05 19:36:44,837 DEBUG o.d.d.statement.SimpleStatement - executeBatch() - start 
2016-08-05 19:36:44,837 DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from m_produk 
2016-08-05 19:36:44,868 DEBUG o.d.d.statement.SimpleStatement - clearBatch() - start 
2016-08-05 19:36:44,868 DEBUG o.d.d.s.AbstractBatchStatement - close() - start 
2016-08-05 19:36:44,868 DEBUG o.d.o.AbstractBatchOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-05 19:36:44,868 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-05 19:36:44,868 DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start 
2016-08-05 19:36:44,868 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-05 19:36:44,868 DEBUG o.d.o.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-05 19:36:44,868 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-05 19:36:44,868 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,868 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,868 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,868 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,868 DEBUG o.d.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-05 19:36:44,884 DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=m_produk) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,884 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,884 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,884 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,884 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,884 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:44,884 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start 
2016-08-05 19:36:44,884 DEBUG o.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=0) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=kode_produk) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=nama_produk) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=harga) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,884 DEBUG o.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=m_produk, columns=[(id, VARCHAR, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls), (harga, DECIMAL, noNulls)], keys=[(id, VARCHAR, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,884 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=m_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-05 19:36:44,884 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=id, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=id, escapePattern=null) - start 
2016-08-05 19:36:44,884 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=kode_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=kode_produk, escapePattern=null) - start 
2016-08-05 19:36:44,884 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=nama_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=nama_produk, escapePattern=null) - start 
2016-08-05 19:36:44,884 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=harga, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=harga, escapePattern=null) - start 
2016-08-05 19:36:44,884 DEBUG o.d.d.s.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into m_produk (id, kode_produk, nama_produk, harga) values (?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,884 DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,884 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-001, dataType=VARCHAR) - start 
2016-08-05 19:36:44,884 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-001, dataType=VARCHAR) - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-001, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-05 19:36:44,884 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-001) - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-001) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=kode_produk) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,884 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-001, dataType=VARCHAR) - start 
2016-08-05 19:36:44,884 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-001, dataType=VARCHAR) - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-001, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-05 19:36:44,884 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-001) - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-001) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=nama_produk) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,884 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk A, dataType=VARCHAR) - start 
2016-08-05 19:36:44,884 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk A, dataType=VARCHAR) - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk A, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-05 19:36:44,884 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk A) - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk A) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=harga) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:44,884 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,884 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=250000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,884 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=250000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=250000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', 'Produk A', ** NOT SPECIFIED **)) - start 
2016-08-05 19:36:44,884 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=250000) - start 
2016-08-05 19:36:44,884 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:44,884 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:44,930 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=1) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,930 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=kode_produk) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,930 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=nama_produk) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,930 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=harga) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,930 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,930 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,930 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-002, dataType=VARCHAR) - start 
2016-08-05 19:36:44,930 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-002, dataType=VARCHAR) - start 
2016-08-05 19:36:44,930 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-002, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', 'Produk A', 250000)) - start 
2016-08-05 19:36:44,930 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-002) - start 
2016-08-05 19:36:44,930 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-002) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=kode_produk) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,930 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,930 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-002, dataType=VARCHAR) - start 
2016-08-05 19:36:44,930 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-002, dataType=VARCHAR) - start 
2016-08-05 19:36:44,930 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-002, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-001', 'Produk A', 250000)) - start 
2016-08-05 19:36:44,930 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-002) - start 
2016-08-05 19:36:44,930 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-002) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=nama_produk) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,930 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,930 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk B, dataType=VARCHAR) - start 
2016-08-05 19:36:44,930 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk B, dataType=VARCHAR) - start 
2016-08-05 19:36:44,930 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk B, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk A', 250000)) - start 
2016-08-05 19:36:44,930 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk B) - start 
2016-08-05 19:36:44,930 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk B) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=harga) - start 
2016-08-05 19:36:44,930 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:44,962 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:44,962 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,962 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,962 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=375000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,962 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=375000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,962 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=375000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk B', 250000)) - start 
2016-08-05 19:36:44,962 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=375000) - start 
2016-08-05 19:36:44,962 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:44,962 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:44,993 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=2) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,993 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=kode_produk) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,993 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=nama_produk) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,993 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=harga) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,993 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,993 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:44,993 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-003, dataType=VARCHAR) - start 
2016-08-05 19:36:44,993 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-003, dataType=VARCHAR) - start 
2016-08-05 19:36:44,993 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-003, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk B', 375000)) - start 
2016-08-05 19:36:44,993 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-003) - start 
2016-08-05 19:36:44,993 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-003) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=kode_produk) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,993 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:44,993 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-003, dataType=VARCHAR) - start 
2016-08-05 19:36:44,993 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-003, dataType=VARCHAR) - start 
2016-08-05 19:36:44,993 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-003, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-002', 'Produk B', 375000)) - start 
2016-08-05 19:36:44,993 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-003) - start 
2016-08-05 19:36:44,993 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-003) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=nama_produk) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,993 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:44,993 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk C, dataType=VARCHAR) - start 
2016-08-05 19:36:44,993 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk C, dataType=VARCHAR) - start 
2016-08-05 19:36:44,993 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk C, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk B', 375000)) - start 
2016-08-05 19:36:44,993 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk C) - start 
2016-08-05 19:36:44,993 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk C) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=harga) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:44,993 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,993 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:44,993 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=420000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,993 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=420000, dataType=DECIMAL) - start 
2016-08-05 19:36:44,993 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=420000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk C', 375000)) - start 
2016-08-05 19:36:44,993 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=420000) - start 
2016-08-05 19:36:44,993 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:44,993 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:45,008 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=3) - start 
2016-08-05 19:36:45,008 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start 
2016-08-05 19:36:45,008 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:45,008 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:45,008 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,008 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,008 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=kode_produk) - start 
2016-08-05 19:36:45,008 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:45,008 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:45,008 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,008 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,008 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=nama_produk) - start 
2016-08-05 19:36:45,008 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:45,008 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:45,008 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,008 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,008 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=harga) - start 
2016-08-05 19:36:45,008 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:45,008 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:45,008 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,008 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,008 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start 
2016-08-05 19:36:45,008 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:45,008 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:45,008 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,008 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,008 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-004, dataType=VARCHAR) - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-004, dataType=VARCHAR) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-004, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk C', 420000)) - start 
2016-08-05 19:36:45,024 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-004) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-004) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=kode_produk) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-004, dataType=VARCHAR) - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-004, dataType=VARCHAR) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-004, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-003', 'Produk C', 420000)) - start 
2016-08-05 19:36:45,024 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-004) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-004) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=nama_produk) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk D, dataType=VARCHAR) - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk D, dataType=VARCHAR) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk D, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk C', 420000)) - start 
2016-08-05 19:36:45,024 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk D) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk D) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=harga) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=580000, dataType=DECIMAL) - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=580000, dataType=DECIMAL) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=580000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk D', 420000)) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=580000) - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:45,024 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=4) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=kode_produk) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=nama_produk) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=harga) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-005, dataType=VARCHAR) - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-005, dataType=VARCHAR) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-005, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk D', 580000)) - start 
2016-08-05 19:36:45,024 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-005) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-005) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=kode_produk) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-005, dataType=VARCHAR) - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-005, dataType=VARCHAR) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-005, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-004', 'Produk D', 580000)) - start 
2016-08-05 19:36:45,024 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-005) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-005) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=nama_produk) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk E, dataType=VARCHAR) - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk E, dataType=VARCHAR) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk E, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-005', 'Produk D', 580000)) - start 
2016-08-05 19:36:45,024 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk E) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk E) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=harga) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=640000, dataType=DECIMAL) - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=640000, dataType=DECIMAL) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=640000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-005', 'Produk E', 580000)) - start 
2016-08-05 19:36:45,024 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=640000) - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:45,024 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=5) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=id) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start 
2016-08-05 19:36:45,024 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=5) - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - executeBatch() - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.SimplePreparedStatement - executeBatch() - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - clearBatch() - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - close() - start 
2016-08-05 19:36:45,024 DEBUG o.d.d.s.AbstractPreparedBatchStatement - close() - start 
2016-08-05 19:36:45,024 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-05 19:36:45,024 DEBUG o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.agung.template.springjpa.service.impl.ProdukServiceImpl.findProdukById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; '' 
2016-08-05 19:36:45,024 DEBUG o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@731692] for JPA transaction 
2016-08-05 19:36:45,024 DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin 
2016-08-05 19:36:45,024 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection 
2016-08-05 19:36:45,040 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection 
2016-08-05 19:36:45,040 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: true 
2016-08-05 19:36:45,040 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - disabling autocommit 
2016-08-05 19:36:45,040 DEBUG o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@d9e63e] 
2016-08-05 19:36:45,040 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-05 19:36:45,040 DEBUG o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@731692] for JPA transaction 
2016-08-05 19:36:45,040 DEBUG o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction 
2016-08-05 19:36:45,040 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-05 19:36:45,040 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [p-003] 
2016-08-05 19:36:45,040 DEBUG o.h.l.p.e.p.i.ResultSetProcessorImpl - Starting ResultSet row #0 
2016-08-05 19:36:45,040 DEBUG o.h.l.p.e.p.i.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified 
2016-08-05 19:36:45,040 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([harga2_0_0_] : [NUMERIC]) - [420000.00] 
2016-08-05 19:36:45,040 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([kode_pro3_0_0_] : [VARCHAR]) - [produk-003] 
2016-08-05 19:36:45,040 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([nama_pro4_0_0_] : [VARCHAR]) - [Produk C] 
2016-08-05 19:36:45,040 DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.agung.template.springjpa.entity.Produk#p-003] 
2016-08-05 19:36:45,040 DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.agung.template.springjpa.entity.Produk#p-003] 
2016-08-05 19:36:45,040 DEBUG o.h.l.e.p.AbstractLoadPlanBasedEntityLoader - Done entity load : com.agung.template.springjpa.entity.Produk#p-003 
2016-08-05 19:36:45,040 DEBUG o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit 
2016-08-05 19:36:45,040 DEBUG o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@731692] 
2016-08-05 19:36:45,040 DEBUG o.h.e.t.spi.AbstractTransactionImpl - committing 
2016-08-05 19:36:45,040 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - committed JDBC Connection 
2016-08-05 19:36:45,040 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - re-enabling autocommit 
2016-08-05 19:36:45,040 DEBUG o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@731692] after transaction 
2016-08-05 19:36:45,040 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-05 19:36:45,040 DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection 
2016-08-05 19:36:45,040 DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection 
2016-08-05 19:36:45,040 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-05 19:36:45,040 DEBUG o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.agung.template.springjpa.service.impl.ProdukServiceImpl.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '' 
2016-08-05 19:36:45,040 DEBUG o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@17913b] for JPA transaction 
2016-08-05 19:36:45,040 DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin 
2016-08-05 19:36:45,040 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection 
2016-08-05 19:36:45,040 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection 
2016-08-05 19:36:45,040 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: true 
2016-08-05 19:36:45,040 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - disabling autocommit 
2016-08-05 19:36:45,040 DEBUG o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@9c3204] 
2016-08-05 19:36:45,040 DEBUG o.s.d.r.c.s.TransactionalRepositoryProxyPostProcessor$CustomAnnotationTransactionAttributeSource - Adding transactional method 'delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '' 
2016-08-05 19:36:45,040 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-05 19:36:45,040 DEBUG o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@17913b] for JPA transaction 
2016-08-05 19:36:45,040 DEBUG o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction 
2016-08-05 19:36:45,055 DEBUG org.hibernate.loader.Loader - Loading entity: [com.agung.template.springjpa.entity.Produk#p-003] 
2016-08-05 19:36:45,055 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-05 19:36:45,055 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [p-003] 
2016-08-05 19:36:45,055 DEBUG org.hibernate.loader.Loader - Result set row: 0 
2016-08-05 19:36:45,055 DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.agung.template.springjpa.entity.Produk#p-003] 
2016-08-05 19:36:45,055 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([harga2_0_0_] : [NUMERIC]) - [420000.00] 
2016-08-05 19:36:45,055 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([kode_pro3_0_0_] : [VARCHAR]) - [produk-003] 
2016-08-05 19:36:45,055 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([nama_pro4_0_0_] : [VARCHAR]) - [Produk C] 
2016-08-05 19:36:45,055 DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.agung.template.springjpa.entity.Produk#p-003] 
2016-08-05 19:36:45,055 DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.agung.template.springjpa.entity.Produk#p-003] 
2016-08-05 19:36:45,055 DEBUG org.hibernate.loader.Loader - Done entity load 
2016-08-05 19:36:45,055 DEBUG o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit 
2016-08-05 19:36:45,055 DEBUG o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@17913b] 
2016-08-05 19:36:45,055 DEBUG o.h.e.t.spi.AbstractTransactionImpl - committing 
2016-08-05 19:36:45,055 DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades 
2016-08-05 19:36:45,055 DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections 
2016-08-05 19:36:45,055 DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects 
2016-08-05 19:36:45,055 DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections 
2016-08-05 19:36:45,055 DEBUG o.h.internal.util.EntityPrinter - Listing entities: 
2016-08-05 19:36:45,055 DEBUG o.h.internal.util.EntityPrinter - com.agung.template.springjpa.entity.Produk{namaProduk=Produk C, harga=420000.00, kodeProduk=produk-003, id=p-003} 
2016-08-05 19:36:45,055 DEBUG org.hibernate.SQL - 
    delete 
    from
        m_produk 
    where
        id=? 
2016-08-05 19:36:45,055 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [p-003] 
2016-08-05 19:36:45,086 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - committed JDBC Connection 
2016-08-05 19:36:45,086 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - re-enabling autocommit 
2016-08-05 19:36:45,102 DEBUG o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@17913b] after transaction 
2016-08-05 19:36:45,102 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-05 19:36:45,102 DEBUG o.h.e.j.i.JdbcCoordinatorImpl - HHH000420: Closing un-released batch 
2016-08-05 19:36:45,102 DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection 
2016-08-05 19:36:45,102 DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection 
2016-08-05 19:36:45,102 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-05 19:36:45,102 DEBUG o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.agung.template.springjpa.service.impl.ProdukServiceImpl.findProdukById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; '' 
2016-08-05 19:36:45,102 DEBUG o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1f08caf] for JPA transaction 
2016-08-05 19:36:45,102 DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin 
2016-08-05 19:36:45,102 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection 
2016-08-05 19:36:45,102 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection 
2016-08-05 19:36:45,102 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: true 
2016-08-05 19:36:45,102 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - disabling autocommit 
2016-08-05 19:36:45,102 DEBUG o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@defd42] 
2016-08-05 19:36:45,102 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-05 19:36:45,102 DEBUG o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1f08caf] for JPA transaction 
2016-08-05 19:36:45,102 DEBUG o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction 
2016-08-05 19:36:45,102 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-05 19:36:45,102 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [p-003] 
2016-08-05 19:36:45,102 DEBUG o.h.l.e.p.AbstractLoadPlanBasedEntityLoader - Done entity load : com.agung.template.springjpa.entity.Produk#p-003 
2016-08-05 19:36:45,102 DEBUG o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit 
2016-08-05 19:36:45,102 DEBUG o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1f08caf] 
2016-08-05 19:36:45,102 DEBUG o.h.e.t.spi.AbstractTransactionImpl - committing 
2016-08-05 19:36:45,102 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - committed JDBC Connection 
2016-08-05 19:36:45,102 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - re-enabling autocommit 
2016-08-05 19:36:45,102 DEBUG o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1f08caf] after transaction 
2016-08-05 19:36:45,102 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-05 19:36:45,102 DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection 
2016-08-05 19:36:45,102 DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection 
2016-08-05 19:36:45,102 DEBUG o.s.t.c.s.DirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = com.agung.template.springjpa.produktest.ProdukDaoTest@a93621, testMethod = testDelete@ProdukDaoTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false]. 
2016-08-05 19:36:45,102 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-05 19:36:45,102 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-05 19:36:45,102 DEBUG o.s.t.c.s.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = com.agung.template.springjpa.produktest.ProdukDaoTest@6eab5d, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]. 
2016-08-05 19:36:45,102 DEBUG o.s.t.c.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]] 
2016-08-05 19:36:45,102 DEBUG o.s.test.context.cache - Spring test ApplicationContext cache statistics: [ContextCache@ee53dc size = 1, hitCount = 4, missCount = 1, parentContextCount = 0] 
2016-08-05 19:36:45,102 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'com.agung.template.springjpa.produktest.ProdukDaoTest': AutowiredFieldElement for private com.agung.template.springjpa.service.ProdukService com.agung.template.springjpa.produktest.ProdukDaoTest.pService 
2016-08-05 19:36:45,102 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'produkService' 
2016-08-05 19:36:45,102 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'com.agung.template.springjpa.produktest.ProdukDaoTest': AutowiredFieldElement for private javax.sql.DataSource com.agung.template.springjpa.produktest.ProdukDaoTest.ds 
2016-08-05 19:36:45,102 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource' 
2016-08-05 19:36:45,102 DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null] 
2016-08-05 19:36:45,102 DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null] 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.xml.FlatXmlProducer - produce() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@725ee1, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@e60ece) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@725ee1, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@e60ece) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@19270ed) - start 
2016-08-05 19:36:45,102 DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@19270ed) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@19270ed) - start 
2016-08-05 19:36:45,102 DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)]) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-001) - start 
2016-08-05 19:36:45,102 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-001) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@19270ed) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-002) - start 
2016-08-05 19:36:45,102 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-002) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@19270ed) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-003) - start 
2016-08-05 19:36:45,102 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-003) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@19270ed) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-004) - start 
2016-08-05 19:36:45,102 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-004) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@19270ed) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-005) - start 
2016-08-05 19:36:45,102 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-005) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-05 19:36:45,102 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-05 19:36:45,102 DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start 
2016-08-05 19:36:45,102 DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[m_produk], _tableMap={M_PRODUK=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]}, _caseSensitiveTableNames=false] 
2016-08-05 19:36:45,118 DEBUG o.d.database.DatabaseConnection - Database connection info: 
	database product name=MySQL
	database version=5.6.22-log
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
	jdbc driver major version=5
	jdbc driver minor version=1
 
2016-08-05 19:36:45,118 DEBUG o.d.database.DatabaseConnection - validateSchema(validateStrict=false) - start 
2016-08-05 19:36:45,118 DEBUG o.d.database.DatabaseConnection - Schema is null. Nothing to validate. 
2016-08-05 19:36:45,118 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-05 19:36:45,118 DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - orderedValues() - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-05 19:36:45,118 DEBUG org.dbunit.dataset.CompositeDataSet - addTable(newTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], tableList=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[], _tableMap={}, _caseSensitiveTableNames=false], combine=true) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - orderedValues() - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,118 DEBUG o.d.operation.CompositeOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=null], , dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-05 19:36:45,118 DEBUG o.d.operation.DeleteAllOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-05 19:36:45,118 DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start 
2016-08-05 19:36:45,118 DEBUG o.d.d.s.PreparedStatementFactory - createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:45,118 DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:45,118 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-05 19:36:45,118 DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-05 19:36:45,118 DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=m_produk) - start 
2016-08-05 19:36:45,118 DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start 
2016-08-05 19:36:45,118 DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database... 
2016-08-05 19:36:45,118 DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=MySQL
	database version=5.6.22-log
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
	jdbc driver major version=5
	jdbc driver minor version=1
 
2016-08-05 19:36:45,118 DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=org.apache.commons.dbcp.DelegatingResultSet@17cada5 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}]) - start 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=berita, escapePattern=null) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=berita, object=null) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=berita) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=berita) - end - result=BERITA 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=BERITA) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=BERITA) - end - result=BERITA 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}]) - start 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=komentar, escapePattern=null) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=komentar, object=null) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar) - end - result=KOMENTAR 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR) - end - result=KOMENTAR 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}]) - start 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=komentar_berita, escapePattern=null) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=komentar_berita, object=null) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar_berita) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar_berita) - end - result=KOMENTAR_BERITA 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR_BERITA) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR_BERITA) - end - result=KOMENTAR_BERITA 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}]) - start 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=null) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}]) - start 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=mahasiswa, escapePattern=null) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=mahasiswa, object=null) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=mahasiswa) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=mahasiswa) - end - result=MAHASISWA 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=MAHASISWA) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=MAHASISWA) - end - result=MAHASISWA 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}]) - start 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_menu, escapePattern=null) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_menu, object=null) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_menu) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_menu) - end - result=T_MENU 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_MENU) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_MENU) - end - result=T_MENU 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}]) - start 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_permission, escapePattern=null) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_permission, object=null) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_permission) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_permission) - end - result=T_PERMISSION 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_PERMISSION) - start 
2016-08-05 19:36:45,118 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_PERMISSION) - end - result=T_PERMISSION 
2016-08-05 19:36:45,118 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}]) - start 
2016-08-05 19:36:45,133 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:45,133 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_role, escapePattern=null) - start 
2016-08-05 19:36:45,133 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_role, object=null) - start 
2016-08-05 19:36:45,133 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_role) - start 
2016-08-05 19:36:45,133 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_role) - end - result=T_ROLE 
2016-08-05 19:36:45,133 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_ROLE) - start 
2016-08-05 19:36:45,133 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_ROLE) - end - result=T_ROLE 
2016-08-05 19:36:45,133 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}]) - start 
2016-08-05 19:36:45,133 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-05 19:36:45,133 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_user, escapePattern=null) - start 
2016-08-05 19:36:45,133 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_user, object=null) - start 
2016-08-05 19:36:45,133 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_user) - start 
2016-08-05 19:36:45,133 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_user) - end - result=T_USER 
2016-08-05 19:36:45,133 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_USER) - start 
2016-08-05 19:36:45,133 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_USER) - end - result=T_USER 
2016-08-05 19:36:45,133 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,133 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,133 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,133 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,133 DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=m_produk (dbIdentifierQuoteString=`) 
2016-08-05 19:36:45,133 DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'm_produk' exists in schema 'null' ... 
2016-08-05 19:36:45,133 DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.apache.commons.dbcp.DelegatingResultSet@10fc838) - start 
2016-08-05 19:36:45,133 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:45,149 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-05 19:36:45,149 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>id 
2016-08-05 19:36:45,149 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=id) - start 
2016-08-05 19:36:45,149 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-05 19:36:45,149 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-05 19:36:45,149 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:45,149 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-05 19:36:45,149 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-05 19:36:45,149 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>harga 
2016-08-05 19:36:45,149 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=3 , sqlTypeName=DECIMAL, tableName=m_produk, columnName=harga) - start 
2016-08-05 19:36:45,149 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=3, sqlTypeName=DECIMAL) - start 
2016-08-05 19:36:45,149 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=3) - start 
2016-08-05 19:36:45,149 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:45,149 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:45,149 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:45,149 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:45,149 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:45,149 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:45,149 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:45,149 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:45,149 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:45,149 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-05 19:36:45,149 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-05 19:36:45,149 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>kode_produk 
2016-08-05 19:36:45,149 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=kode_produk) - start 
2016-08-05 19:36:45,149 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-05 19:36:45,149 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-05 19:36:45,149 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:45,149 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-05 19:36:45,149 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-05 19:36:45,149 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>nama_produk 
2016-08-05 19:36:45,149 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=nama_produk) - start 
2016-08-05 19:36:45,149 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-05 19:36:45,149 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-05 19:36:45,149 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-05 19:36:45,149 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-05 19:36:45,149 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-05 19:36:45,149 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start 
2016-08-05 19:36:45,149 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeyNames() - start 
2016-08-05 19:36:45,149 DEBUG o.d.database.DatabaseTableMetaData - getName() - start 
2016-08-05 19:36:45,149 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:45,149 DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[id], columns=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)]) - start 
2016-08-05 19:36:45,149 DEBUG org.dbunit.dataset.Columns - getColumn(columnName=id, columns=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)]) - start 
2016-08-05 19:36:45,133 DEBUG o.d.dataset.OrderedTableNameMap - update(tableName=m_produk, object=table=m_produk, cols=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)], pk=[(id, VARCHAR, noNulls)]) - start 
2016-08-05 19:36:45,149 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,149 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,149 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,149 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,149 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=m_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:45,164 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:45,164 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-05 19:36:45,164 DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from m_produk) - start 
2016-08-05 19:36:45,164 DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from m_produk 
2016-08-05 19:36:45,164 DEBUG o.d.d.statement.SimpleStatement - executeBatch() - start 
2016-08-05 19:36:45,164 DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from m_produk 
2016-08-05 19:36:45,180 DEBUG o.d.d.statement.SimpleStatement - clearBatch() - start 
2016-08-05 19:36:45,180 DEBUG o.d.d.s.AbstractBatchStatement - close() - start 
2016-08-05 19:36:45,180 DEBUG o.d.o.AbstractBatchOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start 
2016-08-05 19:36:45,180 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-05 19:36:45,180 DEBUG o.d.o.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,180 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,180 DEBUG o.d.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-05 19:36:45,180 DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=m_produk) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start 
2016-08-05 19:36:45,180 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,180 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,180 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-05 19:36:45,180 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-05 19:36:45,180 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,180 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:45,180 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:45,180 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,180 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:45,180 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,180 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:45,180 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,180 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-05 19:36:45,180 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start 
2016-08-05 19:36:45,180 DEBUG o.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=0) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,180 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=kode_produk) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,180 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=nama_produk) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,180 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=harga) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,180 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,180 DEBUG o.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=m_produk, columns=[(id, VARCHAR, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls), (harga, DECIMAL, noNulls)], keys=[(id, VARCHAR, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:45,180 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=m_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:45,180 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-05 19:36:45,180 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=id, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=id, escapePattern=null) - start 
2016-08-05 19:36:45,196 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=kode_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=kode_produk, escapePattern=null) - start 
2016-08-05 19:36:45,196 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=nama_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=nama_produk, escapePattern=null) - start 
2016-08-05 19:36:45,196 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=harga, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=harga, escapePattern=null) - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into m_produk (id, kode_produk, nama_produk, harga) values (?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-001, dataType=VARCHAR) - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-001, dataType=VARCHAR) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-001, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-05 19:36:45,196 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-001) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-001) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=kode_produk) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-001, dataType=VARCHAR) - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-001, dataType=VARCHAR) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-001, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-05 19:36:45,196 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-001) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-001) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=nama_produk) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk A, dataType=VARCHAR) - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk A, dataType=VARCHAR) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk A, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-05 19:36:45,196 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk A) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk A) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=harga) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=250000, dataType=DECIMAL) - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=250000, dataType=DECIMAL) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=250000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', 'Produk A', ** NOT SPECIFIED **)) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=250000) - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:45,196 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=1) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=kode_produk) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=nama_produk) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=harga) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-002, dataType=VARCHAR) - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-002, dataType=VARCHAR) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-002, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', 'Produk A', 250000)) - start 
2016-08-05 19:36:45,196 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-002) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-002) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=kode_produk) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-002, dataType=VARCHAR) - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-002, dataType=VARCHAR) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-002, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-001', 'Produk A', 250000)) - start 
2016-08-05 19:36:45,196 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-002) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-002) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=nama_produk) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk B, dataType=VARCHAR) - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk B, dataType=VARCHAR) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk B, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk A', 250000)) - start 
2016-08-05 19:36:45,196 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk B) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk B) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=harga) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-05 19:36:45,196 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=375000, dataType=DECIMAL) - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=375000, dataType=DECIMAL) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=375000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk B', 250000)) - start 
2016-08-05 19:36:45,196 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=375000) - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:45,196 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:45,211 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=2) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,211 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=kode_produk) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,211 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=nama_produk) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,211 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=harga) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,211 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,211 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,211 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-003, dataType=VARCHAR) - start 
2016-08-05 19:36:45,211 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-003, dataType=VARCHAR) - start 
2016-08-05 19:36:45,211 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-003, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk B', 375000)) - start 
2016-08-05 19:36:45,211 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-003) - start 
2016-08-05 19:36:45,211 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-003) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=kode_produk) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,211 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,211 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-003, dataType=VARCHAR) - start 
2016-08-05 19:36:45,211 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-003, dataType=VARCHAR) - start 
2016-08-05 19:36:45,211 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-003, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-002', 'Produk B', 375000)) - start 
2016-08-05 19:36:45,211 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-003) - start 
2016-08-05 19:36:45,211 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-003) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=nama_produk) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,211 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,211 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk C, dataType=VARCHAR) - start 
2016-08-05 19:36:45,211 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk C, dataType=VARCHAR) - start 
2016-08-05 19:36:45,211 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk C, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk B', 375000)) - start 
2016-08-05 19:36:45,211 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk C) - start 
2016-08-05 19:36:45,211 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk C) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=harga) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-05 19:36:45,211 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,211 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,211 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=420000, dataType=DECIMAL) - start 
2016-08-05 19:36:45,211 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=420000, dataType=DECIMAL) - start 
2016-08-05 19:36:45,211 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=420000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk C', 375000)) - start 
2016-08-05 19:36:45,211 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=420000) - start 
2016-08-05 19:36:45,211 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:45,211 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:45,227 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=3) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=kode_produk) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=nama_produk) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=harga) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-004, dataType=VARCHAR) - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-004, dataType=VARCHAR) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-004, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk C', 420000)) - start 
2016-08-05 19:36:45,227 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-004) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-004) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=kode_produk) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-004, dataType=VARCHAR) - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-004, dataType=VARCHAR) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-004, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-003', 'Produk C', 420000)) - start 
2016-08-05 19:36:45,227 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-004) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-004) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=nama_produk) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk D, dataType=VARCHAR) - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk D, dataType=VARCHAR) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk D, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk C', 420000)) - start 
2016-08-05 19:36:45,227 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk D) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk D) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=harga) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=580000, dataType=DECIMAL) - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=580000, dataType=DECIMAL) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=580000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk D', 420000)) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=580000) - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:45,227 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=4) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=kode_produk) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=nama_produk) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=harga) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-005, dataType=VARCHAR) - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-005, dataType=VARCHAR) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-005, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk D', 580000)) - start 
2016-08-05 19:36:45,227 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-005) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-005) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=kode_produk) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-005, dataType=VARCHAR) - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-005, dataType=VARCHAR) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-005, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-004', 'Produk D', 580000)) - start 
2016-08-05 19:36:45,227 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-005) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-005) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=nama_produk) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk E, dataType=VARCHAR) - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk E, dataType=VARCHAR) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk E, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-005', 'Produk D', 580000)) - start 
2016-08-05 19:36:45,227 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk E) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk E) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=harga) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=640000, dataType=DECIMAL) - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=640000, dataType=DECIMAL) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=640000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-005', 'Produk E', 580000)) - start 
2016-08-05 19:36:45,227 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=640000) - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-05 19:36:45,227 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=5) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=id) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start 
2016-08-05 19:36:45,227 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=5) - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - executeBatch() - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.SimplePreparedStatement - executeBatch() - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - clearBatch() - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - close() - start 
2016-08-05 19:36:45,227 DEBUG o.d.d.s.AbstractPreparedBatchStatement - close() - start 
2016-08-05 19:36:45,227 DEBUG o.s.t.a.AnnotationTransactionAttributeSource - Adding transactional method 'ProdukServiceImpl.findByKode' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; '' 
2016-08-05 19:36:45,227 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-05 19:36:45,227 DEBUG o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.agung.template.springjpa.service.impl.ProdukServiceImpl.findByKode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; '' 
2016-08-05 19:36:45,242 DEBUG o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@bc8d0f] for JPA transaction 
2016-08-05 19:36:45,242 DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin 
2016-08-05 19:36:45,242 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection 
2016-08-05 19:36:45,258 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection 
2016-08-05 19:36:45,258 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: true 
2016-08-05 19:36:45,258 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - disabling autocommit 
2016-08-05 19:36:45,258 DEBUG o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1e71476] 
2016-08-05 19:36:45,274 DEBUG o.h.jpa.criteria.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Produk as generatedAlias0 where generatedAlias0.kodeProduk=:param0 
2016-08-05 19:36:45,274 DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.agung.template.springjpa.entity.Produk as generatedAlias0 where generatedAlias0.kodeProduk=:param0 
2016-08-05 19:36:45,274 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'agung'
    |  |     |  |  |  |  \-[IDENT] Node: 'template'
    |  |     |  |  |  \-[IDENT] Node: 'springjpa'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Produk'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'kodeProduk'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'
 
2016-08-05 19:36:45,274 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-05 19:36:45,274 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select] 
2016-08-05 19:36:45,274 DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.agung.template.springjpa.entity.Produk (generatedAlias0) -> produk0_ 
2016-08-05 19:36:45,274 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : generatedAlias0 -> produk0_.id 
2016-08-05 19:36:45,274 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : generatedAlias0 -> produk0_.id 
2016-08-05 19:36:45,274 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : kodeProduk -> org.hibernate.type.StringType@1c995f4 
2016-08-05 19:36:45,274 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : generatedAlias0.kodeProduk -> produk0_.kode_produk 
2016-08-05 19:36:45,274 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select] 
2016-08-05 19:36:45,274 DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} produk0_.id ) ( FromClause{level=1} m_produk produk0_ ) ( where ( = ( produk0_.kode_produk produk0_.id kodeProduk ) ? ) ) ) 
2016-08-05 19:36:45,274 DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [m_produk produk0_] 
2016-08-05 19:36:45,274 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select] 
2016-08-05 19:36:45,274 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (m_produk)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'produk0_.id as id1_0_' {alias=generatedAlias0, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
    |  \-[SQL_TOKEN] SqlFragment: 'produk0_.harga as harga2_0_, produk0_.kode_produk as kode_pro3_0_, produk0_.nama_produk as nama_pro4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[produk0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'm_produk produk0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=m_produk,tableAlias=produk0_,origin=null,columns={,className=com.agung.template.springjpa.entity.Produk}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'produk0_.kode_produk' {propertyName=kodeProduk,dereferenceType=PRIMITIVE,getPropertyPath=kodeProduk,path=generatedAlias0.kodeProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=generatedAlias0, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
          |  \-[IDENT] IdentNode: 'kodeProduk' {originalText=kodeProduk}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@1c995f4}
 
2016-08-05 19:36:45,274 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-05 19:36:45,274 DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from com.agung.template.springjpa.entity.Produk as generatedAlias0 where generatedAlias0.kodeProduk=:param0 
2016-08-05 19:36:45,274 DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select produk0_.id as id1_0_, produk0_.harga as harga2_0_, produk0_.kode_produk as kode_pro3_0_, produk0_.nama_produk as nama_pro4_0_ from m_produk produk0_ where produk0_.kode_produk=? 
2016-08-05 19:36:45,274 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-05 19:36:45,289 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-05 19:36:45,289 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [produk-003] 
2016-08-05 19:36:45,289 DEBUG org.hibernate.loader.Loader - Result set row: 0 
2016-08-05 19:36:45,289 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([id1_0_] : [VARCHAR]) - [p-003] 
2016-08-05 19:36:45,289 DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.agung.template.springjpa.entity.Produk#p-003] 
2016-08-05 19:36:45,289 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([harga2_0_] : [NUMERIC]) - [420000.00] 
2016-08-05 19:36:45,289 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([kode_pro3_0_] : [VARCHAR]) - [produk-003] 
2016-08-05 19:36:45,289 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([nama_pro4_0_] : [VARCHAR]) - [Produk C] 
2016-08-05 19:36:45,289 DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.agung.template.springjpa.entity.Produk#p-003] 
2016-08-05 19:36:45,289 DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.agung.template.springjpa.entity.Produk#p-003] 
2016-08-05 19:36:45,289 DEBUG o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit 
2016-08-05 19:36:45,289 DEBUG o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@bc8d0f] 
2016-08-05 19:36:45,289 DEBUG o.h.e.t.spi.AbstractTransactionImpl - committing 
2016-08-05 19:36:45,289 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - committed JDBC Connection 
2016-08-05 19:36:45,305 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - re-enabling autocommit 
2016-08-05 19:36:45,305 DEBUG o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@bc8d0f] after transaction 
2016-08-05 19:36:45,305 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-05 19:36:45,305 DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection 
2016-08-05 19:36:45,305 DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection 
2016-08-05 19:36:45,305 DEBUG o.s.t.c.s.DirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = com.agung.template.springjpa.produktest.ProdukDaoTest@6eab5d, testMethod = testFindProdukByKode@ProdukDaoTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false]. 
2016-08-05 19:36:45,305 DEBUG o.s.t.c.s.DirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false]. 
2016-08-05 19:36:45,305 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@123a213: startup date [Fri Aug 05 19:36:40 ICT 2016]; root of context hierarchy 
2016-08-05 19:36:45,305 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor' 
2016-08-05 19:36:45,305 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3958e7: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,produkService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,dataSource,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,foo,jpaMappingContext,produkDao,transactionManager,entityManagerFactory,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,org.springframework.orm.jpa.SharedEntityManagerCreator#0]; root of factory hierarchy 
2016-08-05 19:36:45,305 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Retrieved dependent beans for bean 'org.springframework.orm.jpa.vendor.HibernateJpaDialect#d7f8b4': [transactionManager] 
2016-08-05 19:36:45,305 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Retrieved dependent beans for bean 'produkService': [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-05 19:36:45,305 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Retrieved dependent beans for bean '(inner bean)#91f68b': [produkDao] 
2016-08-05 19:36:45,305 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Retrieved dependent beans for bean '(inner bean)#c7d8b3': [(inner bean)#91f68b] 
2016-08-05 19:36:45,305 DEBUG o.s.b.f.s.DisposableBeanAdapter - Invoking destroy() on bean with name 'jpaMappingContext' 
2016-08-05 19:36:45,305 DEBUG o.s.b.f.s.DisposableBeanAdapter - Invoking destroy() on bean with name 'entityManagerFactory' 
2016-08-05 19:36:45,305 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-05 19:36:45,305 DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing 
2016-08-05 19:36:45,305 DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries 
2016-08-05 19:36:45,305 DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries 
2016-08-05 19:36:45,305 DEBUG o.h.j.i.EntityManagerFactoryRegistry - Remove: name=default 
2016-08-05 19:36:45,305 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Retrieved dependent beans for bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#1883b97': [entityManagerFactory] 
2016-08-05 19:36:45,305 DEBUG o.s.b.f.s.DisposableBeanAdapter - Invoking destroy method 'close' on bean with name 'dataSource' 
2016-08-09 20:38:16,603 DEBUG o.s.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence 
2016-08-09 20:38:16,624 DEBUG o.s.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence 
2016-08-09 20:38:16,624 DEBUG o.s.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] 
2016-08-09 20:38:16,629 INFO  o.s.c.s.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6e6d5e: startup date [Tue Aug 09 20:38:16 ICT 2016]; root of context hierarchy 
2016-08-09 20:38:16,805 DEBUG o.s.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence 
2016-08-09 20:38:16,805 DEBUG o.s.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence 
2016-08-09 20:38:16,806 DEBUG o.s.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] 
2016-08-09 20:38:16,819 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml] 
2016-08-09 20:38:16,861 DEBUG o.s.b.f.xml.DefaultDocumentLoader - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] 
2016-08-09 20:38:16,900 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Loading schema mappings from [META-INF/spring.schemas] 
2016-08-09 20:38:16,971 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd} 
2016-08-09 20:38:16,973 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd 
2016-08-09 20:38:17,063 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/context/spring-context-3.1.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd 
2016-08-09 20:38:17,083 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd 
2016-08-09 20:38:17,090 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd 
2016-08-09 20:38:17,103 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd] in classpath: org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd 
2016-08-09 20:38:17,120 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.0.xsd 
2016-08-09 20:38:17,143 DEBUG o.s.b.f.x.DefaultBeanDefinitionDocumentReader - Loading bean definitions 
2016-08-09 20:38:17,173 DEBUG o.s.b.f.x.DefaultNamespaceHandlerResolver - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler} 
2016-08-09 20:38:17,221 DEBUG o.s.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence 
2016-08-09 20:38:17,222 DEBUG o.s.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence 
2016-08-09 20:38:17,222 DEBUG o.s.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] 
2016-08-09 20:38:17,244 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service] 
2016-08-09 20:38:17,244 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/service/**/*.class] 
2016-08-09 20:38:17,247 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/service/**/*.class] 
2016-08-09 20:38:17,250 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/agung/template/springjpa/service/**/*.class] to resources [file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl\ProdukServiceImpl.class], file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\ProdukService.class]] 
2016-08-09 20:38:17,361 DEBUG o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl\ProdukServiceImpl.class] 
2016-08-09 20:38:17,379 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl] 
2016-08-09 20:38:17,379 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/service/impl/**/*.class] 
2016-08-09 20:38:17,380 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/agung/template/springjpa/service/impl/**/*.class] to resources [file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl\ProdukServiceImpl.class]] 
2016-08-09 20:38:17,380 DEBUG o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl\ProdukServiceImpl.class] 
2016-08-09 20:38:17,508 DEBUG o.s.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence 
2016-08-09 20:38:17,509 DEBUG o.s.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence 
2016-08-09 20:38:17,510 DEBUG o.s.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] 
2016-08-09 20:38:17,514 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in jar file [file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar] 
2016-08-09 20:38:17,527 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in jar file [file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar] 
2016-08-09 20:38:17,542 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:org/springframework/data/**/repository/support/**/*.class] to resources [URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/Querydsl$1.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$ThreadBoundTargetSource.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaPersistableEntityInformation.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider$4.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$1.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaEntityInformation.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaMetamodelEntityInformation.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaMetamodelEntityInformation$IdMetadata.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaEntityInformationSupport.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider$3.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/QueryDslRepositorySupport.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaRepositoryFactory.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$DefaultCrudMethodMetadata.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/SimpleJpaRepository.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodIntercceptor.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/Querydsl.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadata.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/EntityManagerBeanDefinitionRegistrarPostProcessor.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaMetamodelEntityInformation$IdentifierDerivingDirectFieldAccessFallbackBeanWrapper.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider$1.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/QueryDslJpaRepository.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider$2.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaRepositoryFactoryBean.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider$Constants.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/SimpleJpaRepository$ByIdsSpecification.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/Repositories$EmptyRepositoryFactoryInformation.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/DomainClassPropertyEditorRegistrar.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/CrudRepositoryInvoker.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/Repositories.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/ReflectionRepositoryInvoker.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/DomainClassPropertyEditor.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter.class]] 
2016-08-09 20:38:17,635 DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaRepositoryFactory.class] 
2016-08-09 20:38:17,760 DEBUG o.s.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence 
2016-08-09 20:38:17,760 DEBUG o.s.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence 
2016-08-09 20:38:17,760 DEBUG o.s.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] 
2016-08-09 20:38:17,763 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository] 
2016-08-09 20:38:17,763 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/repository/**/*.class] 
2016-08-09 20:38:17,783 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/agung/template/springjpa/repository/**/*.class] to resources [file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository\ProdukDao.class]] 
2016-08-09 20:38:17,824 DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository\ProdukDao.class] 
2016-08-09 20:38:17,832 DEBUG o.s.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence 
2016-08-09 20:38:17,833 DEBUG o.s.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence 
2016-08-09 20:38:17,834 DEBUG o.s.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] 
2016-08-09 20:38:17,836 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository] 
2016-08-09 20:38:17,836 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/repository/**/*ProdukDaoImpl.class] 
2016-08-09 20:38:17,837 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/agung/template/springjpa/repository/**/*ProdukDaoImpl.class] to resources [] 
2016-08-09 20:38:17,869 DEBUG o.s.d.r.c.RepositoryConfigurationDelegate - Spring Data JPA - Registering repository: produkDao - Interface: com.agung.template.springjpa.repository.ProdukDao - Factory: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean 
2016-08-09 20:38:17,880 DEBUG o.s.b.f.x.BeanDefinitionParserDelegate - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.orm.jpa.vendor.HibernateJpaDialect#134f01b] 
2016-08-09 20:38:17,887 DEBUG o.s.b.f.x.BeanDefinitionParserDelegate - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#386f16] 
2016-08-09 20:38:17,889 DEBUG o.s.b.f.xml.XmlBeanDefinitionReader - Loaded 19 bean definitions from location pattern [classpath:applicationContext.xml] 
2016-08-09 20:38:17,889 DEBUG o.s.c.s.ClassPathXmlApplicationContext - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6e6d5e: org.springframework.beans.factory.support.DefaultListableBeanFactory@3ee3a2: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,produkService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,dataSource,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,foo,jpaMappingContext,produkDao,transactionManager,entityManagerFactory]; root of factory hierarchy 
2016-08-09 20:38:17,947 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' 
2016-08-09 20:38:17,947 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' 
2016-08-09 20:38:17,966 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references 
2016-08-09 20:38:17,969 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' 
2016-08-09 20:38:18,082 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' 
2016-08-09 20:38:18,083 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' 
2016-08-09 20:38:18,085 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' to allow for resolving potential circular references 
2016-08-09 20:38:18,170 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' 
2016-08-09 20:38:18,170 DEBUG o.s.core.env.MutablePropertySources - Adding [environmentProperties] PropertySource with lowest search precedence 
2016-08-09 20:38:18,171 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 20:38:18,172 DEBUG o.s.core.env.MutablePropertySources - Adding [localProperties] PropertySource with lowest search precedence 
2016-08-09 20:38:18,176 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.driver' in [environmentProperties] 
2016-08-09 20:38:18,176 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.driver' in [systemProperties] 
2016-08-09 20:38:18,176 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.driver' in [systemEnvironment] 
2016-08-09 20:38:18,177 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'jdbc.driver' in any property source. Returning [null] 
2016-08-09 20:38:18,177 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.driver' in [localProperties] 
2016-08-09 20:38:18,177 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'jdbc.driver' in [localProperties] with type [String] and value 'com.mysql.jdbc.Driver' 
2016-08-09 20:38:18,179 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.password' in [environmentProperties] 
2016-08-09 20:38:18,180 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.password' in [systemProperties] 
2016-08-09 20:38:18,180 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.password' in [systemEnvironment] 
2016-08-09 20:38:18,180 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'jdbc.password' in any property source. Returning [null] 
2016-08-09 20:38:18,180 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.password' in [localProperties] 
2016-08-09 20:38:18,180 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'jdbc.password' in [localProperties] with type [String] and value 'root' 
2016-08-09 20:38:18,181 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.url' in [environmentProperties] 
2016-08-09 20:38:18,181 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.url' in [systemProperties] 
2016-08-09 20:38:18,181 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.url' in [systemEnvironment] 
2016-08-09 20:38:18,181 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'jdbc.url' in any property source. Returning [null] 
2016-08-09 20:38:18,181 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.url' in [localProperties] 
2016-08-09 20:38:18,182 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'jdbc.url' in [localProperties] with type [String] and value 'jdbc:mysql://localhost:3306/belajar' 
2016-08-09 20:38:18,182 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.username' in [environmentProperties] 
2016-08-09 20:38:18,182 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.username' in [systemProperties] 
2016-08-09 20:38:18,182 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.username' in [systemEnvironment] 
2016-08-09 20:38:18,183 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'jdbc.username' in any property source. Returning [null] 
2016-08-09 20:38:18,183 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.username' in [localProperties] 
2016-08-09 20:38:18,183 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'jdbc.username' in [localProperties] with type [String] and value 'root' 
2016-08-09 20:38:18,184 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [environmentProperties] 
2016-08-09 20:38:18,184 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [systemProperties] 
2016-08-09 20:38:18,184 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [systemEnvironment] 
2016-08-09 20:38:18,184 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'hibernate.dialect' in any property source. Returning [null] 
2016-08-09 20:38:18,184 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [localProperties] 
2016-08-09 20:38:18,185 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'hibernate.dialect' in [localProperties] with type [String] and value 'org.hibernate.dialect.MySQL5InnoDBDialect' 
2016-08-09 20:38:18,185 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'foo' 
2016-08-09 20:38:18,185 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'foo' 
2016-08-09 20:38:18,186 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'foo' to allow for resolving potential circular references 
2016-08-09 20:38:18,186 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'foo' 
2016-08-09 20:38:18,197 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' 
2016-08-09 20:38:18,198 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' 
2016-08-09 20:38:18,199 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references 
2016-08-09 20:38:18,199 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' 
2016-08-09 20:38:18,199 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' 
2016-08-09 20:38:18,199 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' 
2016-08-09 20:38:18,199 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references 
2016-08-09 20:38:18,200 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' 
2016-08-09 20:38:18,200 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' 
2016-08-09 20:38:18,200 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' 
2016-08-09 20:38:18,210 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references 
2016-08-09 20:38:18,212 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' 
2016-08-09 20:38:18,212 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' 
2016-08-09 20:38:18,213 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' 
2016-08-09 20:38:18,213 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references 
2016-08-09 20:38:18,214 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' 
2016-08-09 20:38:18,215 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' 
2016-08-09 20:38:18,215 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' 
2016-08-09 20:38:18,216 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' to allow for resolving potential circular references 
2016-08-09 20:38:18,216 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' 
2016-08-09 20:38:18,216 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' 
2016-08-09 20:38:18,216 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' 
2016-08-09 20:38:18,217 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references 
2016-08-09 20:38:18,217 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' 
2016-08-09 20:38:18,218 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' 
2016-08-09 20:38:18,218 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' 
2016-08-09 20:38:18,219 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references 
2016-08-09 20:38:18,219 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' 
2016-08-09 20:38:18,219 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator' 
2016-08-09 20:38:18,219 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator' 
2016-08-09 20:38:18,252 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references 
2016-08-09 20:38:18,270 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator' 
2016-08-09 20:38:18,273 DEBUG o.s.c.s.ClassPathXmlApplicationContext - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@11c00d0] 
2016-08-09 20:38:18,276 DEBUG o.s.c.s.ClassPathXmlApplicationContext - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1a2f4ec] 
2016-08-09 20:38:18,280 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'entityManagerFactory' 
2016-08-09 20:38:18,280 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'entityManagerFactory' 
2016-08-09 20:38:18,340 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references 
2016-08-09 20:38:18,381 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataSource' 
2016-08-09 20:38:18,381 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'dataSource' 
2016-08-09 20:38:18,439 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'dataSource' to allow for resolving potential circular references 
2016-08-09 20:38:18,460 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:18,460 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:18,462 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references 
2016-08-09 20:38:18,468 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' 
2016-08-09 20:38:18,468 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' 
2016-08-09 20:38:18,476 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references 
2016-08-09 20:38:18,481 DEBUG o.s.a.f.a.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:18,494 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' 
2016-08-09 20:38:18,495 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:18,499 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'dataSource' 
2016-08-09 20:38:18,500 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#386f16' 
2016-08-09 20:38:18,567 DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider 
2016-08-09 20:38:18,586 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:18,588 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#386f16' 
2016-08-09 20:38:18,597 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'entityManagerFactory' 
2016-08-09 20:38:18,623 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\entity] 
2016-08-09 20:38:18,623 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\entity] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/entity/**/*.class] 
2016-08-09 20:38:18,624 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/agung/template/springjpa/entity/**/*.class] to resources [file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\entity\Produk.class]] 
2016-08-09 20:38:18,653 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:38:18,748 DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@e2f2a
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.commons.dbcp.BasicDataSource@d28fa7
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.agung.template.springjpa.entity.Produk]
	Mapping files names []
	Properties [] 
2016-08-09 20:38:18,833 DEBUG o.h.i.i.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. 
2016-08-09 20:38:18,835 DEBUG o.h.i.i.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. 
2016-08-09 20:38:18,838 DEBUG o.h.i.i.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. 
2016-08-09 20:38:18,838 DEBUG o.h.i.i.IntegratorServiceImpl - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator]. 
2016-08-09 20:38:18,861 DEBUG o.h.b.r.s.i.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect]) 
2016-08-09 20:38:18,862 DEBUG o.h.b.r.s.i.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect]) 
2016-08-09 20:38:18,925 INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.3.11.Final} 
2016-08-09 20:38:18,928 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 20:38:18,930 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 20:38:19,169 DEBUG o.h.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService] 
2016-08-09 20:38:19,205 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@9f4771 
2016-08-09 20:38:19,205 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@9f4771 
2016-08-09 20:38:19,205 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@9f4771 
2016-08-09 20:38:19,207 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18d79be 
2016-08-09 20:38:19,210 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@18f0a79 
2016-08-09 20:38:19,211 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1286fb6 
2016-08-09 20:38:19,213 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1cf2fc1 
2016-08-09 20:38:19,213 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1cf2fc1 
2016-08-09 20:38:19,214 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1cf2fc1 
2016-08-09 20:38:19,215 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@435c40 
2016-08-09 20:38:19,215 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@435c40 
2016-08-09 20:38:19,215 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@435c40 
2016-08-09 20:38:19,217 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@ba6ce3 
2016-08-09 20:38:19,217 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@ba6ce3 
2016-08-09 20:38:19,217 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@ba6ce3 
2016-08-09 20:38:19,219 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1bdb894 
2016-08-09 20:38:19,219 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1bdb894 
2016-08-09 20:38:19,219 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bdb894 
2016-08-09 20:38:19,221 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1e32960 
2016-08-09 20:38:19,221 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1e32960 
2016-08-09 20:38:19,222 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e32960 
2016-08-09 20:38:19,223 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@197ad89 
2016-08-09 20:38:19,224 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@197ad89 
2016-08-09 20:38:19,224 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@197ad89 
2016-08-09 20:38:19,225 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@54d35e 
2016-08-09 20:38:19,226 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@54d35e 
2016-08-09 20:38:19,226 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54d35e 
2016-08-09 20:38:19,228 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ea68c 
2016-08-09 20:38:19,228 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ea68c 
2016-08-09 20:38:19,230 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@e50104 
2016-08-09 20:38:19,230 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@e50104 
2016-08-09 20:38:19,231 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1a37759 
2016-08-09 20:38:19,232 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1a37759 
2016-08-09 20:38:19,233 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@38ccb8 
2016-08-09 20:38:19,234 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1213651 
2016-08-09 20:38:19,236 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@15e33cc 
2016-08-09 20:38:19,238 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@15e33cc 
2016-08-09 20:38:19,241 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@122d892 
2016-08-09 20:38:19,242 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@122d892 
2016-08-09 20:38:19,244 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1e9ebae 
2016-08-09 20:38:19,244 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e9ebae 
2016-08-09 20:38:19,246 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1e731e 
2016-08-09 20:38:19,246 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e731e 
2016-08-09 20:38:19,246 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e731e 
2016-08-09 20:38:19,248 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1c407fd 
2016-08-09 20:38:19,250 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@f5c734 
2016-08-09 20:38:19,250 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f5c734 
2016-08-09 20:38:19,250 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f5c734 
2016-08-09 20:38:19,251 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@71115f 
2016-08-09 20:38:19,252 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@36060e 
2016-08-09 20:38:19,252 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@36060e 
2016-08-09 20:38:19,254 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1e68757 
2016-08-09 20:38:19,254 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e68757 
2016-08-09 20:38:19,255 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@153a5dc 
2016-08-09 20:38:19,255 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@153a5dc 
2016-08-09 20:38:19,256 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7ba306 
2016-08-09 20:38:19,256 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ba306 
2016-08-09 20:38:19,258 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@504ecd 
2016-08-09 20:38:19,258 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@504ecd 
2016-08-09 20:38:19,259 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1b669c3 
2016-08-09 20:38:19,260 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@df9280 
2016-08-09 20:38:19,262 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@191b517 
2016-08-09 20:38:19,262 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@191b517 
2016-08-09 20:38:19,262 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@191b517 
2016-08-09 20:38:19,263 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@18c99c8 
2016-08-09 20:38:19,264 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@18c99c8 
2016-08-09 20:38:19,264 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@18c99c8 
2016-08-09 20:38:19,265 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@196aeae 
2016-08-09 20:38:19,266 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1fadaff 
2016-08-09 20:38:19,266 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1fadaff 
2016-08-09 20:38:19,266 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1fadaff 
2016-08-09 20:38:19,267 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@78d320 
2016-08-09 20:38:19,268 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@78d320 
2016-08-09 20:38:19,268 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@78d320 
2016-08-09 20:38:19,269 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@c558c6 
2016-08-09 20:38:19,270 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@8c9a05 
2016-08-09 20:38:19,275 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@46d517 
2016-08-09 20:38:19,275 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46d517 
2016-08-09 20:38:19,276 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@105ae1a 
2016-08-09 20:38:19,280 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@61fe30 
2016-08-09 20:38:19,281 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@61fe30 
2016-08-09 20:38:19,285 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@c92293 
2016-08-09 20:38:19,285 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@c92293 
2016-08-09 20:38:19,286 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@df2c61 
2016-08-09 20:38:19,286 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1f0fe62 
2016-08-09 20:38:19,288 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@e86ce1 
2016-08-09 20:38:19,294 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4094a5 
2016-08-09 20:38:19,294 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4094a5 
2016-08-09 20:38:19,295 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2e0143 
2016-08-09 20:38:19,295 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7545f 
2016-08-09 20:38:19,299 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@57b96d 
2016-08-09 20:38:19,300 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c726ee 
2016-08-09 20:38:19,300 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f31dec 
2016-08-09 20:38:19,300 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@c01041 
2016-08-09 20:38:19,300 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@16f4b65 
2016-08-09 20:38:19,301 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@94fd30 
2016-08-09 20:38:19,322 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.5.Final} 
2016-08-09 20:38:19,338 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] 
2016-08-09 20:38:19,339 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] 
2016-08-09 20:38:19,340 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] 
2016-08-09 20:38:19,340 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] 
2016-08-09 20:38:19,342 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator] 
2016-08-09 20:38:19,343 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] 
2016-08-09 20:38:19,345 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] 
2016-08-09 20:38:19,346 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] 
2016-08-09 20:38:19,347 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator] 
2016-08-09 20:38:19,348 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] 
2016-08-09 20:38:19,348 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] 
2016-08-09 20:38:19,349 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] 
2016-08-09 20:38:19,350 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] 
2016-08-09 20:38:19,350 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
2016-08-09 20:38:19,352 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] 
2016-08-09 20:38:19,361 DEBUG org.hibernate.cfg.Configuration - Preparing to build session factory with filters : {} 
2016-08-09 20:38:19,925 DEBUG o.h.e.j.internal.JdbcServicesImpl - Database ->
       name : MySQL
    version : 5.6.22-log
      major : 5
      minor : 6 
2016-08-09 20:38:19,926 DEBUG o.h.e.j.internal.JdbcServicesImpl - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
      major : 5
      minor : 1 
2016-08-09 20:38:19,926 DEBUG o.h.e.j.internal.JdbcServicesImpl - JDBC version : 4.0 
2016-08-09 20:38:19,928 DEBUG o.h.e.j.c.i.StandardRefCursorSupport - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null 
2016-08-09 20:38:19,969 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 20:38:20,020 DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files 
2016-08-09 20:38:20,020 DEBUG org.hibernate.cfg.Configuration - Process annotated classes 
2016-08-09 20:38:20,025 DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.agung.template.springjpa.entity.Produk 
2016-08-09 20:38:20,052 DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
2016-08-09 20:38:20,066 DEBUG o.h.cfg.annotations.EntityBinder - Import with entity name Produk 
2016-08-09 20:38:20,070 DEBUG o.h.cfg.annotations.EntityBinder - Bind entity com.agung.template.springjpa.entity.Produk on table m_produk 
2016-08-09 20:38:20,096 DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(m_produk), mappingColumn=id, insertable=true, updatable=true, unique=false} 
2016-08-09 20:38:20,099 DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false 
2016-08-09 20:38:20,103 DEBUG o.h.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.agung.template.springjpa.entity.Produk:id] 
2016-08-09 20:38:20,104 DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for id 
2016-08-09 20:38:20,106 DEBUG o.h.cfg.annotations.PropertyBinder - Building property id 
2016-08-09 20:38:20,112 DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(m_produk), mappingColumn=harga, insertable=true, updatable=true, unique=false} 
2016-08-09 20:38:20,112 DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property harga with lazy=false 
2016-08-09 20:38:20,112 DEBUG o.h.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.agung.template.springjpa.entity.Produk:harga] 
2016-08-09 20:38:20,112 DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for harga 
2016-08-09 20:38:20,113 DEBUG o.h.cfg.annotations.PropertyBinder - Building property harga 
2016-08-09 20:38:20,114 DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(m_produk), mappingColumn=kode_produk, insertable=true, updatable=true, unique=true} 
2016-08-09 20:38:20,114 DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property kodeProduk with lazy=false 
2016-08-09 20:38:20,114 DEBUG o.h.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.agung.template.springjpa.entity.Produk:kodeProduk] 
2016-08-09 20:38:20,115 DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for kodeProduk 
2016-08-09 20:38:20,115 DEBUG o.h.cfg.annotations.PropertyBinder - Building property kodeProduk 
2016-08-09 20:38:20,115 DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(m_produk), mappingColumn=nama_produk, insertable=true, updatable=true, unique=false} 
2016-08-09 20:38:20,115 DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property namaProduk with lazy=false 
2016-08-09 20:38:20,115 DEBUG o.h.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.agung.template.springjpa.entity.Produk:namaProduk] 
2016-08-09 20:38:20,115 DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for namaProduk 
2016-08-09 20:38:20,116 DEBUG o.h.cfg.annotations.PropertyBinder - Building property namaProduk 
2016-08-09 20:38:20,119 DEBUG o.h.c.annotations.SimpleValueBinder - Starting fillSimpleValue for id 
2016-08-09 20:38:20,120 DEBUG o.h.c.annotations.SimpleValueBinder - Starting fillSimpleValue for harga 
2016-08-09 20:38:20,120 DEBUG o.h.c.annotations.SimpleValueBinder - Starting fillSimpleValue for kodeProduk 
2016-08-09 20:38:20,120 DEBUG o.h.c.annotations.SimpleValueBinder - Starting fillSimpleValue for namaProduk 
2016-08-09 20:38:20,121 DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass) 
2016-08-09 20:38:20,123 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-09 20:38:20,123 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-09 20:38:20,123 DEBUG org.hibernate.cfg.Configuration - Processing collection mappings 
2016-08-09 20:38:20,123 DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings 
2016-08-09 20:38:20,123 DEBUG org.hibernate.cfg.Configuration - Processing association property references 
2016-08-09 20:38:20,123 DEBUG org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers 
2016-08-09 20:38:20,123 DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints 
2016-08-09 20:38:20,128 DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver 
2016-08-09 20:38:20,129 DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] 
2016-08-09 20:38:20,134 DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
2016-08-09 20:38:20,149 DEBUG org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled 
2016-08-09 20:38:20,149 DEBUG org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled 
2016-08-09 20:38:20,149 DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch size: 15 
2016-08-09 20:38:20,150 DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled 
2016-08-09 20:38:20,150 DEBUG org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled 
2016-08-09 20:38:20,150 DEBUG org.hibernate.cfg.SettingsFactory - Wrap result sets: disabled 
2016-08-09 20:38:20,150 DEBUG org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled 
2016-08-09 20:38:20,150 DEBUG org.hibernate.cfg.SettingsFactory - multi-tenancy strategy : NONE 
2016-08-09 20:38:20,153 DEBUG org.hibernate.cfg.SettingsFactory - Connection release mode: auto 
2016-08-09 20:38:20,158 DEBUG org.hibernate.cfg.SettingsFactory - Using BatchFetchStyle : LEGACY 
2016-08-09 20:38:20,158 DEBUG org.hibernate.cfg.SettingsFactory - Maximum outer join fetch depth: 2 
2016-08-09 20:38:20,159 DEBUG org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1 
2016-08-09 20:38:20,159 DEBUG org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled 
2016-08-09 20:38:20,159 DEBUG org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled 
2016-08-09 20:38:20,159 DEBUG org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled 
2016-08-09 20:38:20,160 DEBUG org.hibernate.cfg.SettingsFactory - Default null ordering: none 
2016-08-09 20:38:20,169 DEBUG org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory 
2016-08-09 20:38:20,174 INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 20:38:20,175 DEBUG org.hibernate.cfg.SettingsFactory - Query language substitutions: {} 
2016-08-09 20:38:20,175 DEBUG org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: disabled 
2016-08-09 20:38:20,175 DEBUG org.hibernate.cfg.SettingsFactory - Second-level cache: enabled 
2016-08-09 20:38:20,175 DEBUG org.hibernate.cfg.SettingsFactory - Query cache: disabled 
2016-08-09 20:38:20,176 DEBUG o.h.c.i.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory 
2016-08-09 20:38:20,180 DEBUG org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled 
2016-08-09 20:38:20,186 DEBUG org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled 
2016-08-09 20:38:20,187 DEBUG org.hibernate.cfg.SettingsFactory - Second-level cache direct-reference entries: disabled 
2016-08-09 20:38:20,188 DEBUG org.hibernate.cfg.SettingsFactory - Automatic eviction of collection cache: disabled 
2016-08-09 20:38:20,188 DEBUG org.hibernate.cfg.SettingsFactory - Statistics: disabled 
2016-08-09 20:38:20,188 DEBUG org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled 
2016-08-09 20:38:20,188 DEBUG org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo 
2016-08-09 20:38:20,188 DEBUG org.hibernate.cfg.SettingsFactory - Named query checking : enabled 
2016-08-09 20:38:20,189 DEBUG org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled 
2016-08-09 20:38:20,189 DEBUG org.hibernate.cfg.SettingsFactory - Allow initialization of lazy state outside session : : disabled 
2016-08-09 20:38:20,189 DEBUG org.hibernate.cfg.SettingsFactory - JTA Track by Thread: enabled 
2016-08-09 20:38:20,201 DEBUG o.h.internal.SessionFactoryImpl - Building session factory 
2016-08-09 20:38:20,217 TRACE org.hibernate.type.TypeFactory - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@260766 
2016-08-09 20:38:20,218 DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} 
2016-08-09 20:38:20,219 DEBUG o.h.internal.SessionFactoryImpl - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_66\jre\bin, java.vm.version=25.66-b18, user.country.format=ID, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.8.0_66-b18, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_66\jre\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\agung\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.8.0_66\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Program Files\java\jdk1.8.0_66\bin;C:\Program Files\mvn\bin;C:\Program Files\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\;C:\Program Files\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\Doctrine extensions for PHP\;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\server\apache-tomcat-8.0.20\bin;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\VSShell\Common7\IDE\;E:\DEVELOPMENT\tool Development\apache-jmeter-2.13\bin;D:\5.PROJECK\Android_Studio_SDK\tools;D:\5.PROJECK\Android_Studio_SDK\platform-tools;C:\Program Files\nodejs\;C:\Program Files\Android\Android Studio\gradle\gradle-2.10\bin;C:\Program Files\Java\jdk1.8.0_66\db\bin;C:\AppServ\Apache2.2\bin;C:\AppServ\php6;C:\Program Files\Microsoft VS Code\bin;C:\Users\agung\AppData\Roaming\npm;., hibernate.ejb.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, user.home=C:\Users\agung, user.timezone=Asia/Bangkok, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=Cp1252, javax.persistence.nonJtaDataSource=org.apache.commons.dbcp.BasicDataSource@d28fa7, hibernate.format_sql=true, user.name=agung, java.class.path=D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes;C:\Users\agung\.m2\repository\org\springframework\data\spring-data-jpa\1.7.3.RELEASE\spring-data-jpa-1.7.3.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\data\spring-data-commons\1.9.3.RELEASE\spring-data-commons-1.9.3.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-orm\4.0.9.RELEASE\spring-orm-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-jdbc\4.0.9.RELEASE\spring-jdbc-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-context\4.0.9.RELEASE\spring-context-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-expression\4.0.9.RELEASE\spring-expression-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-aop\4.0.9.RELEASE\spring-aop-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\agung\.m2\repository\org\springframework\spring-tx\4.0.9.RELEASE\spring-tx-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-beans\4.0.9.RELEASE\spring-beans-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-core\4.0.9.RELEASE\spring-core-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\aspectj\aspectjrt\1.8.6\aspectjrt-1.8.6.jar;C:\Users\agung\.m2\repository\org\slf4j\slf4j-api\1.7.12\slf4j-api-1.7.12.jar;C:\Users\agung\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.12\jcl-over-slf4j-1.7.12.jar;C:\Users\agung\.m2\repository\org\hibernate\hibernate-core\4.3.11.Final\hibernate-core-4.3.11.Final.jar;C:\Users\agung\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\agung\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\agung\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\agung\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\agung\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\agung\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.5.Final\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\agung\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\agung\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\agung\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\agung\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\agung\.m2\repository\org\springframework\spring-test\4.1.7.RELEASE\spring-test-4.1.7.RELEASE.jar;C:\Users\agung\.m2\repository\mysql\mysql-connector-java\5.1.35\mysql-connector-java-5.1.35.jar;C:\Users\agung\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\agung\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\agung\.m2\repository\org\hibernate\hibernate-entitymanager\4.3.10.Final\hibernate-entitymanager-4.3.10.Final.jar;C:\Users\agung\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\agung\.m2\repository\org\postgresql\postgresql\9.4.1208.jre7\postgresql-9.4.1208.jre7.jar;C:\Users\agung\.m2\repository\ch\qos\logback\logback-classic\1.1.3\logback-classic-1.1.3.jar;C:\Users\agung\.m2\repository\ch\qos\logback\logback-core\1.1.3\logback-core-1.1.3.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.8, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.8.0_66\jre, sun.java.command=com.agung.template.springjpa.Main, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, java.specification.vendor=Oracle Corporation, user.language=en, user.language.format=id, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.8.0_66, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_66\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_66\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86} 
2016-08-09 20:38:20,236 DEBUG o.h.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled 
2016-08-09 20:38:20,241 DEBUG o.h.engine.spi.CascadeStyles - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST] 
2016-08-09 20:38:20,341 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5InnoDBDialect] 
2016-08-09 20:38:20,483 DEBUG o.h.p.e.AbstractEntityPersister - Static SQL for entity: com.agung.template.springjpa.entity.Produk 
2016-08-09 20:38:20,483 DEBUG o.h.p.e.AbstractEntityPersister -  Version select: select id from m_produk where id =? 
2016-08-09 20:38:20,483 DEBUG o.h.p.e.AbstractEntityPersister -  Snapshot select: select produk_.id, produk_.harga as harga2_0_, produk_.kode_produk as kode_pro3_0_, produk_.nama_produk as nama_pro4_0_ from m_produk produk_ where produk_.id=? 
2016-08-09 20:38:20,484 DEBUG o.h.p.e.AbstractEntityPersister -  Insert 0: insert into m_produk (harga, kode_produk, nama_produk, id) values (?, ?, ?, ?) 
2016-08-09 20:38:20,484 DEBUG o.h.p.e.AbstractEntityPersister -  Update 0: update m_produk set harga=?, kode_produk=?, nama_produk=? where id=? 
2016-08-09 20:38:20,484 DEBUG o.h.p.e.AbstractEntityPersister -  Delete 0: delete from m_produk where id=? 
2016-08-09 20:38:20,517 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f8a8c3] 
2016-08-09 20:38:20,519 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:20,519 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:20,519 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:20,519 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:20,583 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:20,589 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:20,592 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [NONE]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-09 20:38:20,592 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d1ac19] 
2016-08-09 20:38:20,592 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:20,592 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:20,592 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:20,592 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:20,593 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:20,593 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:20,593 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [READ]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-09 20:38:20,594 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa4757] 
2016-08-09 20:38:20,594 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:20,594 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:20,594 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:20,594 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:20,594 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:20,595 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:20,595 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [UPGRADE]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-09 20:38:20,595 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f60d] 
2016-08-09 20:38:20,595 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:20,596 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:20,598 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:20,598 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:20,598 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:20,599 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:20,599 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [UPGRADE_NOWAIT]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-09 20:38:20,599 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e29a4] 
2016-08-09 20:38:20,600 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:20,600 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:20,600 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:20,600 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:20,600 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:20,600 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:20,601 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [UPGRADE_SKIPLOCKED]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-09 20:38:20,601 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18b521e] 
2016-08-09 20:38:20,601 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:20,601 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:20,601 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:20,601 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:20,601 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:20,602 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:20,602 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [FORCE]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-09 20:38:20,602 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fc448] 
2016-08-09 20:38:20,602 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:20,602 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:20,602 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:20,603 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:20,603 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:20,603 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:20,603 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [PESSIMISTIC_READ]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? lock in share mode 
2016-08-09 20:38:20,603 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8ab592] 
2016-08-09 20:38:20,604 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:20,604 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:20,604 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:20,604 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:20,604 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:20,605 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:20,605 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [PESSIMISTIC_WRITE]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-09 20:38:20,605 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c61eb1] 
2016-08-09 20:38:20,605 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:20,605 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:20,605 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:20,606 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:20,606 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:20,606 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:20,606 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [PESSIMISTIC_FORCE_INCREMENT]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-09 20:38:20,607 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24293c] 
2016-08-09 20:38:20,607 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:20,607 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:20,607 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:20,607 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:20,607 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:20,608 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:20,608 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [OPTIMISTIC]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-09 20:38:20,608 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74c0c] 
2016-08-09 20:38:20,608 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:20,608 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:20,608 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:20,608 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:20,609 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:20,609 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:20,609 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [OPTIMISTIC_FORCE_INCREMENT]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-09 20:38:20,639 DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.agung.template.springjpa.entity.Produk: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-09 20:38:20,639 DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.agung.template.springjpa.entity.Produk: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-09 20:38:21,004 DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1daa23d 
2016-08-09 20:38:21,005 DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 5096e555-9e64-4874-b3db-81741a55b9be (<unnamed>) 
2016-08-09 20:38:21,005 DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured 
2016-08-09 20:38:21,005 DEBUG o.h.internal.SessionFactoryImpl - Instantiated session factory 
2016-08-09 20:38:21,046 DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files 
2016-08-09 20:38:21,046 DEBUG org.hibernate.cfg.Configuration - Process annotated classes 
2016-08-09 20:38:21,046 DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass) 
2016-08-09 20:38:21,046 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-09 20:38:21,047 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-09 20:38:21,047 DEBUG org.hibernate.cfg.Configuration - Processing collection mappings 
2016-08-09 20:38:21,047 DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings 
2016-08-09 20:38:21,047 DEBUG org.hibernate.cfg.Configuration - Processing association property references 
2016-08-09 20:38:21,047 DEBUG org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers 
2016-08-09 20:38:21,047 DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints 
2016-08-09 20:38:21,048 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5InnoDBDialect] 
2016-08-09 20:38:21,048 DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files 
2016-08-09 20:38:21,049 DEBUG org.hibernate.cfg.Configuration - Process annotated classes 
2016-08-09 20:38:21,049 DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass) 
2016-08-09 20:38:21,049 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-09 20:38:21,049 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-09 20:38:21,049 DEBUG org.hibernate.cfg.Configuration - Processing collection mappings 
2016-08-09 20:38:21,049 DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings 
2016-08-09 20:38:21,049 DEBUG org.hibernate.cfg.Configuration - Processing association property references 
2016-08-09 20:38:21,049 DEBUG org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers 
2016-08-09 20:38:21,049 DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints 
2016-08-09 20:38:21,050 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5InnoDBDialect] 
2016-08-09 20:38:21,053 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5InnoDBDialect] 
2016-08-09 20:38:21,055 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export 
2016-08-09 20:38:21,055 DEBUG o.h.tool.hbm2ddl.SchemaExport - Import file not found: /import.sql 
2016-08-09 20:38:21,058 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:38:21,661 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:38:22,067 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:38:22,556 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete 
2016-08-09 20:38:22,556 DEBUG o.h.internal.NamedQueryRepository - Checking 0 named HQL queries 
2016-08-09 20:38:22,556 DEBUG o.h.internal.NamedQueryRepository - Checking 0 named SQL queries 
2016-08-09 20:38:22,563 DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] 
2016-08-09 20:38:22,584 DEBUG o.h.j.i.s.JpaSchemaGenerator - No actions specified; doing nothing 
2016-08-09 20:38:22,653 DEBUG o.h.j.i.EntityManagerFactoryRegistry - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@183c5a5 
2016-08-09 20:38:22,653 DEBUG o.h.j.i.EntityManagerFactoryRegistry - Registering EntityManagerFactory: default  
2016-08-09 20:38:22,660 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:22,662 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'entityManagerFactory' 
2016-08-09 20:38:22,662 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3ee3a2: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,produkService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,dataSource,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,foo,jpaMappingContext,produkDao,transactionManager,entityManagerFactory,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,org.springframework.orm.jpa.SharedEntityManagerCreator#0]; root of factory hierarchy 
2016-08-09 20:38:22,662 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' 
2016-08-09 20:38:22,663 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'produkService' 
2016-08-09 20:38:22,663 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'produkService' 
2016-08-09 20:38:22,683 DEBUG o.s.b.f.a.InjectionMetadata - Registered injected element on class [com.agung.template.springjpa.service.impl.ProdukServiceImpl]: AutowiredFieldElement for private com.agung.template.springjpa.repository.ProdukDao com.agung.template.springjpa.service.impl.ProdukServiceImpl.produDao 
2016-08-09 20:38:22,683 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'produkService' to allow for resolving potential circular references 
2016-08-09 20:38:22,685 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'produkService': AutowiredFieldElement for private com.agung.template.springjpa.repository.ProdukDao com.agung.template.springjpa.service.impl.ProdukServiceImpl.produDao 
2016-08-09 20:38:22,689 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'produkDao' 
2016-08-09 20:38:22,689 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'produkDao' 
2016-08-09 20:38:22,739 DEBUG o.s.b.f.a.InjectionMetadata - Registered injected element on class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]: PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager) 
2016-08-09 20:38:22,740 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'produkDao' to allow for resolving potential circular references 
2016-08-09 20:38:22,743 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'produkDao': PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager) 
2016-08-09 20:38:22,744 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean '(inner bean)#13c7bdb' 
2016-08-09 20:38:22,793 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean '(inner bean)#19f4597' 
2016-08-09 20:38:22,808 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name '(inner bean)#19f4597' 
2016-08-09 20:38:22,809 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:22,814 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)#19f4597' 
2016-08-09 20:38:22,816 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:22,832 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:22,833 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)#13c7bdb' 
2016-08-09 20:38:22,834 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean '(inner bean)#10d80c4' 
2016-08-09 20:38:22,839 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:22,840 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)#10d80c4' 
2016-08-09 20:38:22,840 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean '(inner bean)#7f2e0f' 
2016-08-09 20:38:22,842 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory' 
2016-08-09 20:38:22,842 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:22,881 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:22,882 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)#7f2e0f' 
2016-08-09 20:38:22,883 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpaMappingContext' 
2016-08-09 20:38:22,883 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'jpaMappingContext' 
2016-08-09 20:38:22,884 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'jpaMappingContext' to allow for resolving potential circular references 
2016-08-09 20:38:22,888 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'jpaMappingContext' 
2016-08-09 20:38:22,889 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:22,889 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning eagerly cached instance of singleton bean 'jpaMappingContext' that is not fully initialized yet - a consequence of a circular reference 
2016-08-09 20:38:22,890 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory' 
2016-08-09 20:38:22,917 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'jpaMappingContext' 
2016-08-09 20:38:22,917 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:22,921 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'produkDao' 
2016-08-09 20:38:22,949 DEBUG o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation 
2016-08-09 20:38:23,066 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-09 20:38:23,098 DEBUG o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation 
2016-08-09 20:38:23,099 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-09 20:38:23,106 DEBUG o.s.a.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ThreadBoundTargetSource@4a4442 
2016-08-09 20:38:23,154 DEBUG o.s.d.j.r.query.JpaQueryFactory - Looking up query for method search 
2016-08-09 20:38:23,234 DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select p from com.agung.template.springjpa.entity.Produk p where lower(p.kodeProduk) like lower(:search) or lower(p.namaProduk) like lower(:search) order by p.namaProduk asc 
2016-08-09 20:38:23,247 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'agung'
    |  |     |  |  |  |  \-[IDENT] Node: 'template'
    |  |     |  |  |  \-[IDENT] Node: 'springjpa'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Produk'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'p'
    +-[WHERE] Node: 'where'
    |  \-[OR] Node: 'or'
    |     +-[LIKE] Node: 'like'
    |     |  +-[METHOD_CALL] Node: '('
    |     |  |  +-[IDENT] Node: 'lower'
    |     |  |  \-[EXPR_LIST] Node: 'exprList'
    |     |  |     \-[DOT] Node: '.'
    |     |  |        +-[IDENT] Node: 'p'
    |     |  |        \-[IDENT] Node: 'kodeProduk'
    |     |  \-[METHOD_CALL] Node: '('
    |     |     +-[IDENT] Node: 'lower'
    |     |     \-[EXPR_LIST] Node: 'exprList'
    |     |        \-[COLON] Node: ':'
    |     |           \-[IDENT] Node: 'search'
    |     \-[LIKE] Node: 'like'
    |        +-[METHOD_CALL] Node: '('
    |        |  +-[IDENT] Node: 'lower'
    |        |  \-[EXPR_LIST] Node: 'exprList'
    |        |     \-[DOT] Node: '.'
    |        |        +-[IDENT] Node: 'p'
    |        |        \-[IDENT] Node: 'namaProduk'
    |        \-[METHOD_CALL] Node: '('
    |           +-[IDENT] Node: 'lower'
    |           \-[EXPR_LIST] Node: 'exprList'
    |              \-[COLON] Node: ':'
    |                 \-[IDENT] Node: 'search'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'p'
       |  \-[IDENT] Node: 'namaProduk'
       \-[ASCENDING] Node: 'asc'
 
2016-08-09 20:38:23,248 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-09 20:38:23,307 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select] 
2016-08-09 20:38:23,337 DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.agung.template.springjpa.entity.Produk (p) -> produk0_ 
2016-08-09 20:38:23,339 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-09 20:38:23,344 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-09 20:38:23,347 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : kodeProduk -> org.hibernate.type.StringType@1a37759 
2016-08-09 20:38:23,348 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p.kodeProduk -> produk0_.kode_produk 
2016-08-09 20:38:23,351 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-09 20:38:23,352 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : namaProduk -> org.hibernate.type.StringType@1a37759 
2016-08-09 20:38:23,352 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p.namaProduk -> produk0_.nama_produk 
2016-08-09 20:38:23,353 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-09 20:38:23,353 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : namaProduk -> org.hibernate.type.StringType@1a37759 
2016-08-09 20:38:23,353 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p.namaProduk -> produk0_.nama_produk 
2016-08-09 20:38:23,354 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select] 
2016-08-09 20:38:23,355 DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} produk0_.id ) ( FromClause{level=1} m_produk produk0_ ) ( where ( or ( like ( ( lower ( exprList ( produk0_.kode_produk produk0_.id kodeProduk ) ) ) ( ( lower ( exprList ? ) ) ) ( like ( ( lower ( exprList ( produk0_.nama_produk produk0_.id namaProduk ) ) ) ( ( lower ( exprList ? ) ) ) ) ) ( order ( produk0_.nama_produk produk0_.id namaProduk ) asc ) ) 
2016-08-09 20:38:23,368 DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [m_produk produk0_] 
2016-08-09 20:38:23,369 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select] 
2016-08-09 20:38:23,371 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (m_produk)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'produk0_.id as id1_0_' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
    |  \-[SQL_TOKEN] SqlFragment: 'produk0_.harga as harga2_0_, produk0_.kode_produk as kode_pro3_0_, produk0_.nama_produk as nama_pro4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[produk0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'm_produk produk0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=m_produk,tableAlias=produk0_,origin=null,columns={,className=com.agung.template.springjpa.entity.Produk}}
    +-[WHERE] SqlNode: 'where'
    |  \-[OR] SqlNode: 'or'
    |     +-[LIKE] BinaryLogicOperatorNode: 'like'
    |     |  +-[METHOD_CALL] MethodNode: '('
    |     |  |  +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
    |     |  |  \-[EXPR_LIST] SqlNode: 'exprList'
    |     |  |     \-[DOT] DotNode: 'produk0_.kode_produk' {propertyName=kodeProduk,dereferenceType=PRIMITIVE,getPropertyPath=kodeProduk,path=p.kodeProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=p}
    |     |  |        +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
    |     |  |        \-[IDENT] IdentNode: 'kodeProduk' {originalText=kodeProduk}
    |     |  \-[METHOD_CALL] MethodNode: '('
    |     |     +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
    |     |     \-[EXPR_LIST] SqlNode: 'exprList'
    |     |        \-[NAMED_PARAM] ParameterNode: '?' {name=search, expectedType=null}
    |     \-[LIKE] BinaryLogicOperatorNode: 'like'
    |        +-[METHOD_CALL] MethodNode: '('
    |        |  +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
    |        |  \-[EXPR_LIST] SqlNode: 'exprList'
    |        |     \-[DOT] DotNode: 'produk0_.nama_produk' {propertyName=namaProduk,dereferenceType=PRIMITIVE,getPropertyPath=namaProduk,path=p.namaProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=p}
    |        |        +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
    |        |        \-[IDENT] IdentNode: 'namaProduk' {originalText=namaProduk}
    |        \-[METHOD_CALL] MethodNode: '('
    |           +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
    |           \-[EXPR_LIST] SqlNode: 'exprList'
    |              \-[NAMED_PARAM] ParameterNode: '?' {name=search, expectedType=null}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'produk0_.nama_produk' {propertyName=namaProduk,dereferenceType=PRIMITIVE,getPropertyPath=namaProduk,path=p.namaProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=p}
       |  +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
       |  \-[IDENT] IdentNode: 'namaProduk' {originalText=namaProduk}
       \-[ASCENDING] SqlNode: 'asc'
 
2016-08-09 20:38:23,372 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-09 20:38:23,383 DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select p from com.agung.template.springjpa.entity.Produk p where lower(p.kodeProduk) like lower(:search) or lower(p.namaProduk) like lower(:search) order by p.namaProduk asc 
2016-08-09 20:38:23,384 DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select produk0_.id as id1_0_, produk0_.harga as harga2_0_, produk0_.kode_produk as kode_pro3_0_, produk0_.nama_produk as nama_pro4_0_ from m_produk produk0_ where lower(produk0_.kode_produk) like lower(?) or lower(produk0_.nama_produk) like lower(?) order by produk0_.nama_produk asc 
2016-08-09 20:38:23,384 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-09 20:38:23,394 DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select count(p) from com.agung.template.springjpa.entity.Produk p where lower(p.kodeProduk) like lower(:search) or lower(p.namaProduk) like lower(:search) 
2016-08-09 20:38:23,397 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'agung'
    |  |     |  |  |  |  \-[IDENT] Node: 'template'
    |  |     |  |  |  \-[IDENT] Node: 'springjpa'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Produk'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[LIKE] Node: 'like'
          |  +-[METHOD_CALL] Node: '('
          |  |  +-[IDENT] Node: 'lower'
          |  |  \-[EXPR_LIST] Node: 'exprList'
          |  |     \-[DOT] Node: '.'
          |  |        +-[IDENT] Node: 'p'
          |  |        \-[IDENT] Node: 'kodeProduk'
          |  \-[METHOD_CALL] Node: '('
          |     +-[IDENT] Node: 'lower'
          |     \-[EXPR_LIST] Node: 'exprList'
          |        \-[COLON] Node: ':'
          |           \-[IDENT] Node: 'search'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'lower'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'p'
             |        \-[IDENT] Node: 'namaProduk'
             \-[METHOD_CALL] Node: '('
                +-[IDENT] Node: 'lower'
                \-[EXPR_LIST] Node: 'exprList'
                   \-[COLON] Node: ':'
                      \-[IDENT] Node: 'search'
 
2016-08-09 20:38:23,398 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-09 20:38:23,398 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select] 
2016-08-09 20:38:23,398 DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.agung.template.springjpa.entity.Produk (p) -> produk0_ 
2016-08-09 20:38:23,399 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-09 20:38:23,400 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-09 20:38:23,400 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : kodeProduk -> org.hibernate.type.StringType@1a37759 
2016-08-09 20:38:23,400 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p.kodeProduk -> produk0_.kode_produk 
2016-08-09 20:38:23,400 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-09 20:38:23,400 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : namaProduk -> org.hibernate.type.StringType@1a37759 
2016-08-09 20:38:23,401 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p.namaProduk -> produk0_.nama_produk 
2016-08-09 20:38:23,401 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select] 
2016-08-09 20:38:23,402 DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( count produk0_.id ) ) ( FromClause{level=1} m_produk produk0_ ) ( where ( or ( like ( ( lower ( exprList ( produk0_.kode_produk produk0_.id kodeProduk ) ) ) ( ( lower ( exprList ? ) ) ) ( like ( ( lower ( exprList ( produk0_.nama_produk produk0_.id namaProduk ) ) ) ( ( lower ( exprList ? ) ) ) ) ) ) 
2016-08-09 20:38:23,403 DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [m_produk produk0_] 
2016-08-09 20:38:23,403 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select] 
2016-08-09 20:38:23,404 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (m_produk)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[produk0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'm_produk produk0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=m_produk,tableAlias=produk0_,origin=null,columns={,className=com.agung.template.springjpa.entity.Produk}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[METHOD_CALL] MethodNode: '('
          |  |  +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
          |  |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     \-[DOT] DotNode: 'produk0_.kode_produk' {propertyName=kodeProduk,dereferenceType=PRIMITIVE,getPropertyPath=kodeProduk,path=p.kodeProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=p}
          |  |        +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
          |  |        \-[IDENT] IdentNode: 'kodeProduk' {originalText=kodeProduk}
          |  \-[METHOD_CALL] MethodNode: '('
          |     +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
          |     \-[EXPR_LIST] SqlNode: 'exprList'
          |        \-[NAMED_PARAM] ParameterNode: '?' {name=search, expectedType=null}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'produk0_.nama_produk' {propertyName=namaProduk,dereferenceType=PRIMITIVE,getPropertyPath=namaProduk,path=p.namaProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=p}
             |        +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
             |        \-[IDENT] IdentNode: 'namaProduk' {originalText=namaProduk}
             \-[METHOD_CALL] MethodNode: '('
                +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
                \-[EXPR_LIST] SqlNode: 'exprList'
                   \-[NAMED_PARAM] ParameterNode: '?' {name=search, expectedType=null}
 
2016-08-09 20:38:23,404 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-09 20:38:23,404 DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select count(p) from com.agung.template.springjpa.entity.Produk p where lower(p.kodeProduk) like lower(:search) or lower(p.namaProduk) like lower(:search) 
2016-08-09 20:38:23,404 DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select count(produk0_.id) as col_0_0_ from m_produk produk0_ where lower(produk0_.kode_produk) like lower(?) or lower(produk0_.nama_produk) like lower(?) 
2016-08-09 20:38:23,404 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-09 20:38:23,413 DEBUG o.s.d.j.r.query.JpaQueryFactory - Looking up query for method findByKodeProduk 
2016-08-09 20:38:23,415 DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Produk.findByKodeProduk 
2016-08-09 20:38:23,416 DEBUG o.h.j.spi.AbstractEntityManagerImpl - Mark transaction for rollback 
2016-08-09 20:38:23,416 DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Produk.findByKodeProduk 
2016-08-09 20:38:23,426 DEBUG o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation 
2016-08-09 20:38:23,427 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-09 20:38:23,464 DEBUG o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation 
2016-08-09 20:38:23,465 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-09 20:38:23,465 DEBUG o.s.a.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.jpa.repository.support.SimpleJpaRepository@7cfcbb] 
2016-08-09 20:38:23,473 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:23,474 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'produkDao' 
2016-08-09 20:38:23,474 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:23,477 DEBUG o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'produkService' to bean named 'produkDao' 
2016-08-09 20:38:23,477 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:23,479 DEBUG o.s.t.a.AnnotationTransactionAttributeSource - Adding transactional method 'ProdukServiceImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '' 
2016-08-09 20:38:23,480 DEBUG o.s.a.f.a.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'produkService' with 0 common interceptors and 1 specific interceptors 
2016-08-09 20:38:23,480 DEBUG o.s.a.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.agung.template.springjpa.service.impl.ProdukServiceImpl@fabd0f] 
2016-08-09 20:38:23,485 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'produkService' 
2016-08-09 20:38:23,485 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' 
2016-08-09 20:38:23,485 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' 
2016-08-09 20:38:23,485 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' 
2016-08-09 20:38:23,485 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' 
2016-08-09 20:38:23,485 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' 
2016-08-09 20:38:23,485 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator' 
2016-08-09 20:38:23,485 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' 
2016-08-09 20:38:23,485 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' 
2016-08-09 20:38:23,485 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' 
2016-08-09 20:38:23,492 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references 
2016-08-09 20:38:23,496 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' 
2016-08-09 20:38:23,496 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0' 
2016-08-09 20:38:23,496 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' 
2016-08-09 20:38:23,496 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:23,496 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource' 
2016-08-09 20:38:23,501 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' 
2016-08-09 20:38:23,501 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'foo' 
2016-08-09 20:38:23,501 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'jpaMappingContext' 
2016-08-09 20:38:23,501 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'produkDao' 
2016-08-09 20:38:23,502 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager' 
2016-08-09 20:38:23,502 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'transactionManager' 
2016-08-09 20:38:23,522 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references 
2016-08-09 20:38:23,542 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory' 
2016-08-09 20:38:23,543 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaDialect#134f01b' 
2016-08-09 20:38:23,549 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:23,550 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaDialect#134f01b' 
2016-08-09 20:38:23,550 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionManager' 
2016-08-09 20:38:23,556 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:23,558 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'transactionManager' 
2016-08-09 20:38:23,560 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory' 
2016-08-09 20:38:23,560 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' 
2016-08-09 20:38:23,560 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' 
2016-08-09 20:38:23,560 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.orm.jpa.SharedEntityManagerCreator#0' 
2016-08-09 20:38:23,560 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.orm.jpa.SharedEntityManagerCreator#0' 
2016-08-09 20:38:23,562 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory' 
2016-08-09 20:38:23,567 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.orm.jpa.SharedEntityManagerCreator#0' to allow for resolving potential circular references 
2016-08-09 20:38:23,568 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:23,568 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.orm.jpa.SharedEntityManagerCreator#0' 
2016-08-09 20:38:23,570 DEBUG o.s.c.s.ClassPathXmlApplicationContext - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1d7bfb3] 
2016-08-09 20:38:23,570 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor' 
2016-08-09 20:38:23,579 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] 
2016-08-09 20:38:23,579 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] 
2016-08-09 20:38:23,579 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] 
2016-08-09 20:38:23,579 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'produkService' 
2016-08-09 20:38:50,242 DEBUG o.s.t.c.j.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class com.agung.template.springjpa.produktest.ProdukDaoTest]. 
2016-08-09 20:38:50,260 DEBUG o.s.test.context.BootstrapUtils - Instantiating TestContextBootstrapper from class [org.springframework.test.context.support.DefaultTestContextBootstrapper] 
2016-08-09 20:38:50,305 DEBUG o.s.t.c.s.AbstractDelegatingSmartContextLoader - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@765367 declaringClass = 'com.agung.template.springjpa.produktest.ProdukDaoTest', classes = '{}', locations = '{classpath*:applicationContext.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']. 
2016-08-09 20:38:50,309 DEBUG o.s.t.c.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-09 20:38:50,318 DEBUG o.s.t.c.s.DefaultTestContextBootstrapper - @TestExecutionListeners is not present for class [com.agung.template.springjpa.produktest.ProdukDaoTest]: using defaults. 
2016-08-09 20:38:50,327 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 20:38:50,355 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 20:38:50,356 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@eebfca, org.springframework.test.context.support.DirtiesContextTestExecutionListener@718207, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1371b2d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3c6f6d] 
2016-08-09 20:38:50,359 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-09 20:38:50,360 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-09 20:38:50,362 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-09 20:38:50,362 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-09 20:38:50,367 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-09 20:38:50,368 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-09 20:38:50,370 DEBUG o.s.t.c.s.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = com.agung.template.springjpa.produktest.ProdukDaoTest@3fc542, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]. 
2016-08-09 20:38:50,371 DEBUG o.s.t.c.s.AbstractDelegatingSmartContextLoader - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]. 
2016-08-09 20:38:50,371 DEBUG o.s.t.c.s.AbstractGenericContextLoader - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]. 
2016-08-09 20:38:50,500 DEBUG o.s.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence 
2016-08-09 20:38:50,504 DEBUG o.s.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence 
2016-08-09 20:38:50,504 DEBUG o.s.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] 
2016-08-09 20:38:50,520 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 20:38:50,527 DEBUG o.s.b.f.xml.DefaultDocumentLoader - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] 
2016-08-09 20:38:50,566 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Loading schema mappings from [META-INF/spring.schemas] 
2016-08-09 20:38:50,570 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd} 
2016-08-09 20:38:50,575 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd 
2016-08-09 20:38:50,631 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/context/spring-context-3.1.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd 
2016-08-09 20:38:50,638 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd 
2016-08-09 20:38:50,651 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd 
2016-08-09 20:38:50,658 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd] in classpath: org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd 
2016-08-09 20:38:50,660 DEBUG o.s.b.f.xml.PluggableSchemaResolver - Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.0.xsd 
2016-08-09 20:38:50,670 DEBUG o.s.b.f.x.DefaultBeanDefinitionDocumentReader - Loading bean definitions 
2016-08-09 20:38:50,687 DEBUG o.s.b.f.x.DefaultNamespaceHandlerResolver - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler} 
2016-08-09 20:38:50,729 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service] 
2016-08-09 20:38:50,730 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/service/**/*.class] 
2016-08-09 20:38:50,732 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/service/**/*.class] 
2016-08-09 20:38:50,735 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/agung/template/springjpa/service/**/*.class] to resources [file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl\ProdukServiceImpl.class], file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\ProdukService.class]] 
2016-08-09 20:38:50,766 DEBUG o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl\ProdukServiceImpl.class] 
2016-08-09 20:38:50,786 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl] 
2016-08-09 20:38:50,787 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/service/impl/**/*.class] 
2016-08-09 20:38:50,788 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/agung/template/springjpa/service/impl/**/*.class] to resources [file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl\ProdukServiceImpl.class]] 
2016-08-09 20:38:50,788 DEBUG o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\service\impl\ProdukServiceImpl.class] 
2016-08-09 20:38:50,844 DEBUG o.s.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence 
2016-08-09 20:38:50,844 DEBUG o.s.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence 
2016-08-09 20:38:50,844 DEBUG o.s.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] 
2016-08-09 20:38:50,847 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in jar file [file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar] 
2016-08-09 20:38:50,858 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in jar file [file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar] 
2016-08-09 20:38:50,870 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:org/springframework/data/**/repository/support/**/*.class] to resources [URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/Querydsl$1.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$ThreadBoundTargetSource.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaPersistableEntityInformation.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider$4.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$1.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaEntityInformation.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaMetamodelEntityInformation.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaMetamodelEntityInformation$IdMetadata.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaEntityInformationSupport.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider$3.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/QueryDslRepositorySupport.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaRepositoryFactory.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$DefaultCrudMethodMetadata.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/SimpleJpaRepository.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodIntercceptor.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/Querydsl.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/CrudMethodMetadata.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/EntityManagerBeanDefinitionRegistrarPostProcessor.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaMetamodelEntityInformation$IdentifierDerivingDirectFieldAccessFallbackBeanWrapper.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider$1.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/QueryDslJpaRepository.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider$2.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaRepositoryFactoryBean.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/PersistenceProvider$Constants.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/SimpleJpaRepository$ByIdsSpecification.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/Repositories$EmptyRepositoryFactoryInformation.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/DomainClassPropertyEditorRegistrar.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/CrudRepositoryInvoker.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/Repositories.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/ReflectionRepositoryInvoker.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/DomainClassPropertyEditor.class], URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-commons/1.9.3.RELEASE/spring-data-commons-1.9.3.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter.class]] 
2016-08-09 20:38:50,904 DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/agung/.m2/repository/org/springframework/data/spring-data-jpa/1.7.3.RELEASE/spring-data-jpa-1.7.3.RELEASE.jar!/org/springframework/data/jpa/repository/support/JpaRepositoryFactory.class] 
2016-08-09 20:38:50,964 DEBUG o.s.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence 
2016-08-09 20:38:50,964 DEBUG o.s.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence 
2016-08-09 20:38:50,965 DEBUG o.s.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] 
2016-08-09 20:38:50,967 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository] 
2016-08-09 20:38:50,968 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/repository/**/*.class] 
2016-08-09 20:38:50,969 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/agung/template/springjpa/repository/**/*.class] to resources [file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository\ProdukDao.class]] 
2016-08-09 20:38:50,975 DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository\ProdukDao.class] 
2016-08-09 20:38:50,983 DEBUG o.s.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence 
2016-08-09 20:38:50,983 DEBUG o.s.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence 
2016-08-09 20:38:50,983 DEBUG o.s.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] 
2016-08-09 20:38:50,985 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository] 
2016-08-09 20:38:50,985 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\repository] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/repository/**/*ProdukDaoImpl.class] 
2016-08-09 20:38:50,987 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/agung/template/springjpa/repository/**/*ProdukDaoImpl.class] to resources [] 
2016-08-09 20:38:51,001 DEBUG o.s.d.r.c.RepositoryConfigurationDelegate - Spring Data JPA - Registering repository: produkDao - Interface: com.agung.template.springjpa.repository.ProdukDao - Factory: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean 
2016-08-09 20:38:51,005 DEBUG o.s.b.f.x.BeanDefinitionParserDelegate - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.orm.jpa.vendor.HibernateJpaDialect#d7f8b4] 
2016-08-09 20:38:51,007 DEBUG o.s.b.f.x.BeanDefinitionParserDelegate - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#1883b97] 
2016-08-09 20:38:51,008 DEBUG o.s.b.f.xml.XmlBeanDefinitionReader - Loaded 19 bean definitions from location pattern [classpath*:applicationContext.xml] 
2016-08-09 20:38:51,012 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@123a213: startup date [Tue Aug 09 20:38:51 ICT 2016]; root of context hierarchy 
2016-08-09 20:38:51,012 DEBUG o.s.c.s.GenericApplicationContext - Bean factory for org.springframework.context.support.GenericApplicationContext@123a213: org.springframework.beans.factory.support.DefaultListableBeanFactory@3958e7: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,produkService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,dataSource,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,foo,jpaMappingContext,produkDao,transactionManager,entityManagerFactory]; root of factory hierarchy 
2016-08-09 20:38:51,051 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' 
2016-08-09 20:38:51,051 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' 
2016-08-09 20:38:51,069 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references 
2016-08-09 20:38:51,072 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' 
2016-08-09 20:38:51,123 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' 
2016-08-09 20:38:51,124 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' 
2016-08-09 20:38:51,127 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' to allow for resolving potential circular references 
2016-08-09 20:38:51,162 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' 
2016-08-09 20:38:51,163 DEBUG o.s.core.env.MutablePropertySources - Adding [environmentProperties] PropertySource with lowest search precedence 
2016-08-09 20:38:51,164 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 20:38:51,165 DEBUG o.s.core.env.MutablePropertySources - Adding [localProperties] PropertySource with lowest search precedence 
2016-08-09 20:38:51,168 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.driver' in [environmentProperties] 
2016-08-09 20:38:51,168 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.driver' in [systemProperties] 
2016-08-09 20:38:51,168 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.driver' in [systemEnvironment] 
2016-08-09 20:38:51,169 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'jdbc.driver' in any property source. Returning [null] 
2016-08-09 20:38:51,169 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.driver' in [localProperties] 
2016-08-09 20:38:51,170 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'jdbc.driver' in [localProperties] with type [String] and value 'com.mysql.jdbc.Driver' 
2016-08-09 20:38:51,172 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.password' in [environmentProperties] 
2016-08-09 20:38:51,173 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.password' in [systemProperties] 
2016-08-09 20:38:51,173 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.password' in [systemEnvironment] 
2016-08-09 20:38:51,173 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'jdbc.password' in any property source. Returning [null] 
2016-08-09 20:38:51,174 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.password' in [localProperties] 
2016-08-09 20:38:51,174 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'jdbc.password' in [localProperties] with type [String] and value 'root' 
2016-08-09 20:38:51,174 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.url' in [environmentProperties] 
2016-08-09 20:38:51,174 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.url' in [systemProperties] 
2016-08-09 20:38:51,174 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.url' in [systemEnvironment] 
2016-08-09 20:38:51,175 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'jdbc.url' in any property source. Returning [null] 
2016-08-09 20:38:51,175 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.url' in [localProperties] 
2016-08-09 20:38:51,175 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'jdbc.url' in [localProperties] with type [String] and value 'jdbc:mysql://localhost:3306/belajar' 
2016-08-09 20:38:51,176 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.username' in [environmentProperties] 
2016-08-09 20:38:51,176 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.username' in [systemProperties] 
2016-08-09 20:38:51,176 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.username' in [systemEnvironment] 
2016-08-09 20:38:51,176 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'jdbc.username' in any property source. Returning [null] 
2016-08-09 20:38:51,176 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'jdbc.username' in [localProperties] 
2016-08-09 20:38:51,177 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'jdbc.username' in [localProperties] with type [String] and value 'root' 
2016-08-09 20:38:51,178 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [environmentProperties] 
2016-08-09 20:38:51,178 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [systemProperties] 
2016-08-09 20:38:51,178 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [systemEnvironment] 
2016-08-09 20:38:51,178 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'hibernate.dialect' in any property source. Returning [null] 
2016-08-09 20:38:51,179 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [localProperties] 
2016-08-09 20:38:51,179 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'hibernate.dialect' in [localProperties] with type [String] and value 'org.hibernate.dialect.MySQL5InnoDBDialect' 
2016-08-09 20:38:51,180 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'foo' 
2016-08-09 20:38:51,180 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'foo' 
2016-08-09 20:38:51,180 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'foo' to allow for resolving potential circular references 
2016-08-09 20:38:51,181 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'foo' 
2016-08-09 20:38:51,189 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' 
2016-08-09 20:38:51,190 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' 
2016-08-09 20:38:51,191 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references 
2016-08-09 20:38:51,191 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' 
2016-08-09 20:38:51,192 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' 
2016-08-09 20:38:51,193 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' 
2016-08-09 20:38:51,193 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references 
2016-08-09 20:38:51,194 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' 
2016-08-09 20:38:51,194 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' 
2016-08-09 20:38:51,194 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' 
2016-08-09 20:38:51,200 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references 
2016-08-09 20:38:51,200 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' 
2016-08-09 20:38:51,200 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' 
2016-08-09 20:38:51,202 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' 
2016-08-09 20:38:51,203 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references 
2016-08-09 20:38:51,203 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' 
2016-08-09 20:38:51,203 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' 
2016-08-09 20:38:51,203 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' 
2016-08-09 20:38:51,204 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' to allow for resolving potential circular references 
2016-08-09 20:38:51,204 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' 
2016-08-09 20:38:51,204 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' 
2016-08-09 20:38:51,205 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' 
2016-08-09 20:38:51,205 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references 
2016-08-09 20:38:51,206 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' 
2016-08-09 20:38:51,206 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' 
2016-08-09 20:38:51,206 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' 
2016-08-09 20:38:51,206 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references 
2016-08-09 20:38:51,206 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' 
2016-08-09 20:38:51,207 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator' 
2016-08-09 20:38:51,207 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator' 
2016-08-09 20:38:51,218 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references 
2016-08-09 20:38:51,235 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator' 
2016-08-09 20:38:51,238 DEBUG o.s.c.s.GenericApplicationContext - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1e2e487] 
2016-08-09 20:38:51,241 DEBUG o.s.c.s.GenericApplicationContext - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1c54ad4] 
2016-08-09 20:38:51,246 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'entityManagerFactory' 
2016-08-09 20:38:51,246 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'entityManagerFactory' 
2016-08-09 20:38:51,267 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references 
2016-08-09 20:38:51,291 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataSource' 
2016-08-09 20:38:51,292 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'dataSource' 
2016-08-09 20:38:51,317 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'dataSource' to allow for resolving potential circular references 
2016-08-09 20:38:51,345 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:51,345 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:51,348 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references 
2016-08-09 20:38:51,354 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' 
2016-08-09 20:38:51,354 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' 
2016-08-09 20:38:51,355 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references 
2016-08-09 20:38:51,358 DEBUG o.s.a.f.a.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:51,360 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' 
2016-08-09 20:38:51,361 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:51,365 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'dataSource' 
2016-08-09 20:38:51,366 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#1883b97' 
2016-08-09 20:38:51,421 DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider 
2016-08-09 20:38:51,429 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:51,430 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#1883b97' 
2016-08-09 20:38:51,437 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'entityManagerFactory' 
2016-08-09 20:38:51,446 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\entity] 
2016-08-09 20:38:51,447 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\entity] for files matching pattern [D:/5.PROJECK/JAVA DEVELOPMENT/1.TEMPLATE PROJECK/Template-Projeck-SpringDataJpa/target/classes/com/agung/template/springjpa/entity/**/*.class] 
2016-08-09 20:38:51,448 DEBUG o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/agung/template/springjpa/entity/**/*.class] to resources [file [D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes\com\agung\template\springjpa\entity\Produk.class]] 
2016-08-09 20:38:51,451 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:38:51,486 DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@1b84c92
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.commons.dbcp.BasicDataSource@4f4a5c
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.agung.template.springjpa.entity.Produk]
	Mapping files names []
	Properties [] 
2016-08-09 20:38:51,517 DEBUG o.h.i.i.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. 
2016-08-09 20:38:51,519 DEBUG o.h.i.i.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. 
2016-08-09 20:38:51,521 DEBUG o.h.i.i.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. 
2016-08-09 20:38:51,523 DEBUG o.h.i.i.IntegratorServiceImpl - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator]. 
2016-08-09 20:38:51,549 DEBUG o.h.b.r.s.i.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect]) 
2016-08-09 20:38:51,550 DEBUG o.h.b.r.s.i.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect]) 
2016-08-09 20:38:51,617 INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.3.11.Final} 
2016-08-09 20:38:51,619 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 20:38:51,621 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 20:38:51,817 DEBUG o.h.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService] 
2016-08-09 20:38:51,858 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@414e40 
2016-08-09 20:38:51,859 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@414e40 
2016-08-09 20:38:51,859 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@414e40 
2016-08-09 20:38:51,864 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@383390 
2016-08-09 20:38:51,866 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6c1270 
2016-08-09 20:38:51,867 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1ee4f1b 
2016-08-09 20:38:51,869 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@17cf65c 
2016-08-09 20:38:51,870 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@17cf65c 
2016-08-09 20:38:51,870 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17cf65c 
2016-08-09 20:38:51,872 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1862f56 
2016-08-09 20:38:51,872 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1862f56 
2016-08-09 20:38:51,873 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1862f56 
2016-08-09 20:38:51,875 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1fe57a9 
2016-08-09 20:38:51,875 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1fe57a9 
2016-08-09 20:38:51,875 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1fe57a9 
2016-08-09 20:38:51,877 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@12535ff 
2016-08-09 20:38:51,877 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@12535ff 
2016-08-09 20:38:51,877 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@12535ff 
2016-08-09 20:38:51,879 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@41a47d 
2016-08-09 20:38:51,879 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@41a47d 
2016-08-09 20:38:51,879 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@41a47d 
2016-08-09 20:38:51,881 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1d426b5 
2016-08-09 20:38:51,882 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1d426b5 
2016-08-09 20:38:51,882 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1d426b5 
2016-08-09 20:38:51,884 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2ff723 
2016-08-09 20:38:51,884 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2ff723 
2016-08-09 20:38:51,884 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2ff723 
2016-08-09 20:38:51,887 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1798ca7 
2016-08-09 20:38:51,887 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1798ca7 
2016-08-09 20:38:51,888 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@448449 
2016-08-09 20:38:51,889 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@448449 
2016-08-09 20:38:51,890 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1c995f4 
2016-08-09 20:38:51,890 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1c995f4 
2016-08-09 20:38:51,892 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1f6226d 
2016-08-09 20:38:51,893 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@14c1d96 
2016-08-09 20:38:51,895 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@884e4b 
2016-08-09 20:38:51,896 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@884e4b 
2016-08-09 20:38:51,898 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@eb909f 
2016-08-09 20:38:51,898 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@eb909f 
2016-08-09 20:38:51,901 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1d9b21f 
2016-08-09 20:38:51,901 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1d9b21f 
2016-08-09 20:38:51,907 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7ef2e0 
2016-08-09 20:38:51,907 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7ef2e0 
2016-08-09 20:38:51,907 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7ef2e0 
2016-08-09 20:38:51,910 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@636ea3 
2016-08-09 20:38:51,911 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1f8276e 
2016-08-09 20:38:51,912 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1f8276e 
2016-08-09 20:38:51,912 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1f8276e 
2016-08-09 20:38:51,913 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1be2511 
2016-08-09 20:38:51,914 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1d02341 
2016-08-09 20:38:51,915 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d02341 
2016-08-09 20:38:51,916 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2eb8aa 
2016-08-09 20:38:51,916 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2eb8aa 
2016-08-09 20:38:51,917 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@16690c0 
2016-08-09 20:38:51,917 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@16690c0 
2016-08-09 20:38:51,919 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@f6a5f9 
2016-08-09 20:38:51,919 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f6a5f9 
2016-08-09 20:38:51,921 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1304a40 
2016-08-09 20:38:51,921 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1304a40 
2016-08-09 20:38:51,922 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1351f41 
2016-08-09 20:38:51,923 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@15f10b2 
2016-08-09 20:38:51,924 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@30646a 
2016-08-09 20:38:51,925 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@30646a 
2016-08-09 20:38:51,925 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@30646a 
2016-08-09 20:38:51,926 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@14df0a4 
2016-08-09 20:38:51,926 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@14df0a4 
2016-08-09 20:38:51,926 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@14df0a4 
2016-08-09 20:38:51,927 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1f95696 
2016-08-09 20:38:51,929 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1653e16 
2016-08-09 20:38:51,929 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1653e16 
2016-08-09 20:38:51,929 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1653e16 
2016-08-09 20:38:51,932 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e1ce85 
2016-08-09 20:38:51,932 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e1ce85 
2016-08-09 20:38:51,932 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e1ce85 
2016-08-09 20:38:51,933 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@10a1967 
2016-08-09 20:38:51,934 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@16f63f6 
2016-08-09 20:38:51,940 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1d2400d 
2016-08-09 20:38:51,940 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1d2400d 
2016-08-09 20:38:51,942 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1202a3a 
2016-08-09 20:38:51,947 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1ec38b 
2016-08-09 20:38:51,947 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ec38b 
2016-08-09 20:38:51,951 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2e560f 
2016-08-09 20:38:51,952 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2e560f 
2016-08-09 20:38:51,952 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1730606 
2016-08-09 20:38:51,953 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@16fd5e 
2016-08-09 20:38:51,955 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@ac4250 
2016-08-09 20:38:51,963 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@8e8225 
2016-08-09 20:38:51,963 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@8e8225 
2016-08-09 20:38:51,964 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7bdeb 
2016-08-09 20:38:51,965 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@c28d64 
2016-08-09 20:38:51,965 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@92fab5 
2016-08-09 20:38:51,965 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5529ab 
2016-08-09 20:38:51,965 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1a8312f 
2016-08-09 20:38:51,966 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@16722d3 
2016-08-09 20:38:51,966 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@532cd8 
2016-08-09 20:38:51,966 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@14e5088 
2016-08-09 20:38:51,995 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.5.Final} 
2016-08-09 20:38:52,012 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] 
2016-08-09 20:38:52,013 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] 
2016-08-09 20:38:52,014 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] 
2016-08-09 20:38:52,014 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] 
2016-08-09 20:38:52,016 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator] 
2016-08-09 20:38:52,016 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] 
2016-08-09 20:38:52,018 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] 
2016-08-09 20:38:52,018 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] 
2016-08-09 20:38:52,019 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator] 
2016-08-09 20:38:52,020 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] 
2016-08-09 20:38:52,020 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] 
2016-08-09 20:38:52,023 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] 
2016-08-09 20:38:52,023 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] 
2016-08-09 20:38:52,024 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
2016-08-09 20:38:52,026 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] 
2016-08-09 20:38:52,036 DEBUG org.hibernate.cfg.Configuration - Preparing to build session factory with filters : {} 
2016-08-09 20:38:52,515 DEBUG o.h.e.j.internal.JdbcServicesImpl - Database ->
       name : MySQL
    version : 5.6.22-log
      major : 5
      minor : 6 
2016-08-09 20:38:52,516 DEBUG o.h.e.j.internal.JdbcServicesImpl - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
      major : 5
      minor : 1 
2016-08-09 20:38:52,516 DEBUG o.h.e.j.internal.JdbcServicesImpl - JDBC version : 4.0 
2016-08-09 20:38:52,524 DEBUG o.h.e.j.c.i.StandardRefCursorSupport - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null 
2016-08-09 20:38:52,580 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 20:38:52,638 DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files 
2016-08-09 20:38:52,638 DEBUG org.hibernate.cfg.Configuration - Process annotated classes 
2016-08-09 20:38:52,644 DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.agung.template.springjpa.entity.Produk 
2016-08-09 20:38:52,700 DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
2016-08-09 20:38:52,708 DEBUG o.h.cfg.annotations.EntityBinder - Import with entity name Produk 
2016-08-09 20:38:52,712 DEBUG o.h.cfg.annotations.EntityBinder - Bind entity com.agung.template.springjpa.entity.Produk on table m_produk 
2016-08-09 20:38:52,739 DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(m_produk), mappingColumn=id, insertable=true, updatable=true, unique=false} 
2016-08-09 20:38:52,743 DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false 
2016-08-09 20:38:52,745 DEBUG o.h.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.agung.template.springjpa.entity.Produk:id] 
2016-08-09 20:38:52,746 DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for id 
2016-08-09 20:38:52,748 DEBUG o.h.cfg.annotations.PropertyBinder - Building property id 
2016-08-09 20:38:52,757 DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(m_produk), mappingColumn=harga, insertable=true, updatable=true, unique=false} 
2016-08-09 20:38:52,758 DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property harga with lazy=false 
2016-08-09 20:38:52,758 DEBUG o.h.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.agung.template.springjpa.entity.Produk:harga] 
2016-08-09 20:38:52,758 DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for harga 
2016-08-09 20:38:52,758 DEBUG o.h.cfg.annotations.PropertyBinder - Building property harga 
2016-08-09 20:38:52,759 DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(m_produk), mappingColumn=kode_produk, insertable=true, updatable=true, unique=true} 
2016-08-09 20:38:52,760 DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property kodeProduk with lazy=false 
2016-08-09 20:38:52,760 DEBUG o.h.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.agung.template.springjpa.entity.Produk:kodeProduk] 
2016-08-09 20:38:52,760 DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for kodeProduk 
2016-08-09 20:38:52,761 DEBUG o.h.cfg.annotations.PropertyBinder - Building property kodeProduk 
2016-08-09 20:38:52,761 DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(m_produk), mappingColumn=nama_produk, insertable=true, updatable=true, unique=false} 
2016-08-09 20:38:52,761 DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property namaProduk with lazy=false 
2016-08-09 20:38:52,762 DEBUG o.h.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.agung.template.springjpa.entity.Produk:namaProduk] 
2016-08-09 20:38:52,762 DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for namaProduk 
2016-08-09 20:38:52,762 DEBUG o.h.cfg.annotations.PropertyBinder - Building property namaProduk 
2016-08-09 20:38:52,764 DEBUG o.h.c.annotations.SimpleValueBinder - Starting fillSimpleValue for id 
2016-08-09 20:38:52,765 DEBUG o.h.c.annotations.SimpleValueBinder - Starting fillSimpleValue for harga 
2016-08-09 20:38:52,765 DEBUG o.h.c.annotations.SimpleValueBinder - Starting fillSimpleValue for kodeProduk 
2016-08-09 20:38:52,765 DEBUG o.h.c.annotations.SimpleValueBinder - Starting fillSimpleValue for namaProduk 
2016-08-09 20:38:52,766 DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass) 
2016-08-09 20:38:52,768 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-09 20:38:52,768 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-09 20:38:52,768 DEBUG org.hibernate.cfg.Configuration - Processing collection mappings 
2016-08-09 20:38:52,768 DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings 
2016-08-09 20:38:52,769 DEBUG org.hibernate.cfg.Configuration - Processing association property references 
2016-08-09 20:38:52,769 DEBUG org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers 
2016-08-09 20:38:52,769 DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints 
2016-08-09 20:38:52,777 DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver 
2016-08-09 20:38:52,778 DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] 
2016-08-09 20:38:52,782 DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
2016-08-09 20:38:52,786 DEBUG org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled 
2016-08-09 20:38:52,786 DEBUG org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled 
2016-08-09 20:38:52,787 DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch size: 15 
2016-08-09 20:38:52,787 DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled 
2016-08-09 20:38:52,787 DEBUG org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled 
2016-08-09 20:38:52,787 DEBUG org.hibernate.cfg.SettingsFactory - Wrap result sets: disabled 
2016-08-09 20:38:52,787 DEBUG org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled 
2016-08-09 20:38:52,787 DEBUG org.hibernate.cfg.SettingsFactory - multi-tenancy strategy : NONE 
2016-08-09 20:38:52,789 DEBUG org.hibernate.cfg.SettingsFactory - Connection release mode: auto 
2016-08-09 20:38:52,796 DEBUG org.hibernate.cfg.SettingsFactory - Using BatchFetchStyle : LEGACY 
2016-08-09 20:38:52,797 DEBUG org.hibernate.cfg.SettingsFactory - Maximum outer join fetch depth: 2 
2016-08-09 20:38:52,797 DEBUG org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1 
2016-08-09 20:38:52,797 DEBUG org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled 
2016-08-09 20:38:52,797 DEBUG org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled 
2016-08-09 20:38:52,798 DEBUG org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled 
2016-08-09 20:38:52,798 DEBUG org.hibernate.cfg.SettingsFactory - Default null ordering: none 
2016-08-09 20:38:52,799 DEBUG org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory 
2016-08-09 20:38:52,801 INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 20:38:52,802 DEBUG org.hibernate.cfg.SettingsFactory - Query language substitutions: {} 
2016-08-09 20:38:52,802 DEBUG org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: disabled 
2016-08-09 20:38:52,802 DEBUG org.hibernate.cfg.SettingsFactory - Second-level cache: enabled 
2016-08-09 20:38:52,802 DEBUG org.hibernate.cfg.SettingsFactory - Query cache: disabled 
2016-08-09 20:38:52,803 DEBUG o.h.c.i.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory 
2016-08-09 20:38:52,807 DEBUG org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled 
2016-08-09 20:38:52,807 DEBUG org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled 
2016-08-09 20:38:52,807 DEBUG org.hibernate.cfg.SettingsFactory - Second-level cache direct-reference entries: disabled 
2016-08-09 20:38:52,807 DEBUG org.hibernate.cfg.SettingsFactory - Automatic eviction of collection cache: disabled 
2016-08-09 20:38:52,808 DEBUG org.hibernate.cfg.SettingsFactory - Statistics: disabled 
2016-08-09 20:38:52,808 DEBUG org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled 
2016-08-09 20:38:52,808 DEBUG org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo 
2016-08-09 20:38:52,808 DEBUG org.hibernate.cfg.SettingsFactory - Named query checking : enabled 
2016-08-09 20:38:52,809 DEBUG org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled 
2016-08-09 20:38:52,809 DEBUG org.hibernate.cfg.SettingsFactory - Allow initialization of lazy state outside session : : disabled 
2016-08-09 20:38:52,809 DEBUG org.hibernate.cfg.SettingsFactory - JTA Track by Thread: enabled 
2016-08-09 20:38:52,822 DEBUG o.h.internal.SessionFactoryImpl - Building session factory 
2016-08-09 20:38:52,836 TRACE org.hibernate.type.TypeFactory - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@12518c3 
2016-08-09 20:38:52,838 DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} 
2016-08-09 20:38:52,838 DEBUG o.h.internal.SessionFactoryImpl - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_66\jre\bin, java.vm.version=25.66-b18, user.country.format=ID, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, test=com.agung.template.springjpa.produktest.ProdukDaoTest, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.8.0_66-b18, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, basedir=D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_66\jre\lib\endorsed, os.arch=x86, surefire.real.class.path=D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\surefire\surefirebooter8055279839590687267.jar, java.io.tmpdir=C:\Users\agung\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, maven.ext.class.path=C:\Users\agung\AppData\Roaming\NetBeans\8.0.2\maven-nblib\netbeans-eventspy.jar, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.8.0_66\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Program Files\java\jdk1.8.0_66\bin;C:\Program Files\mvn\bin;C:\Program Files\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\;C:\Program Files\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\Doctrine extensions for PHP\;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\server\apache-tomcat-8.0.20\bin;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\VSShell\Common7\IDE\;E:\DEVELOPMENT\tool Development\apache-jmeter-2.13\bin;D:\5.PROJECK\Android_Studio_SDK\tools;D:\5.PROJECK\Android_Studio_SDK\platform-tools;C:\Program Files\nodejs\;C:\Program Files\Android\Android Studio\gradle\gradle-2.10\bin;C:\Program Files\Java\jdk1.8.0_66\db\bin;C:\AppServ\Apache2.2\bin;C:\AppServ\php6;C:\Program Files\Microsoft VS Code\bin;C:\Users\agung\AppData\Roaming\npm;., surefire.test.class.path=D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\test-classes;D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes;C:\Users\agung\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\agung\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\agung\.m2\repository\org\springframework\data\spring-data-jpa\1.7.3.RELEASE\spring-data-jpa-1.7.3.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\data\spring-data-commons\1.9.3.RELEASE\spring-data-commons-1.9.3.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-orm\4.0.9.RELEASE\spring-orm-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-jdbc\4.0.9.RELEASE\spring-jdbc-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-context\4.0.9.RELEASE\spring-context-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-expression\4.0.9.RELEASE\spring-expression-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-aop\4.0.9.RELEASE\spring-aop-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\agung\.m2\repository\org\springframework\spring-tx\4.0.9.RELEASE\spring-tx-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-beans\4.0.9.RELEASE\spring-beans-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-core\4.0.9.RELEASE\spring-core-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\aspectj\aspectjrt\1.8.6\aspectjrt-1.8.6.jar;C:\Users\agung\.m2\repository\org\slf4j\slf4j-api\1.7.12\slf4j-api-1.7.12.jar;C:\Users\agung\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.12\jcl-over-slf4j-1.7.12.jar;C:\Users\agung\.m2\repository\org\hibernate\hibernate-core\4.3.11.Final\hibernate-core-4.3.11.Final.jar;C:\Users\agung\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\agung\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\agung\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\agung\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\agung\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\agung\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.5.Final\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\agung\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\agung\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\agung\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\agung\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\agung\.m2\repository\org\springframework\spring-test\4.1.7.RELEASE\spring-test-4.1.7.RELEASE.jar;C:\Users\agung\.m2\repository\mysql\mysql-connector-java\5.1.35\mysql-connector-java-5.1.35.jar;C:\Users\agung\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\agung\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\agung\.m2\repository\org\hibernate\hibernate-entitymanager\4.3.10.Final\hibernate-entitymanager-4.3.10.Final.jar;C:\Users\agung\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\agung\.m2\repository\org\dbunit\dbunit\2.4.9\dbunit-2.4.9.jar;C:\Users\agung\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\agung\.m2\repository\org\postgresql\postgresql\9.4.1208.jre7\postgresql-9.4.1208.jre7.jar;C:\Users\agung\.m2\repository\ch\qos\logback\logback-classic\1.1.3\logback-classic-1.1.3.jar;C:\Users\agung\.m2\repository\ch\qos\logback\logback-core\1.1.3\logback-core-1.1.3.jar;, hibernate.ejb.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, user.home=C:\Users\agung, user.timezone=Asia/Bangkok, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, javax.persistence.nonJtaDataSource=org.apache.commons.dbcp.BasicDataSource@4f4a5c, hibernate.format_sql=true, user.name=agung, java.class.path=D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\test-classes;D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\classes;C:\Users\agung\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\agung\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\agung\.m2\repository\org\springframework\data\spring-data-jpa\1.7.3.RELEASE\spring-data-jpa-1.7.3.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\data\spring-data-commons\1.9.3.RELEASE\spring-data-commons-1.9.3.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-orm\4.0.9.RELEASE\spring-orm-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-jdbc\4.0.9.RELEASE\spring-jdbc-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-context\4.0.9.RELEASE\spring-context-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-expression\4.0.9.RELEASE\spring-expression-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-aop\4.0.9.RELEASE\spring-aop-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\agung\.m2\repository\org\springframework\spring-tx\4.0.9.RELEASE\spring-tx-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-beans\4.0.9.RELEASE\spring-beans-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\springframework\spring-core\4.0.9.RELEASE\spring-core-4.0.9.RELEASE.jar;C:\Users\agung\.m2\repository\org\aspectj\aspectjrt\1.8.6\aspectjrt-1.8.6.jar;C:\Users\agung\.m2\repository\org\slf4j\slf4j-api\1.7.12\slf4j-api-1.7.12.jar;C:\Users\agung\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.12\jcl-over-slf4j-1.7.12.jar;C:\Users\agung\.m2\repository\org\hibernate\hibernate-core\4.3.11.Final\hibernate-core-4.3.11.Final.jar;C:\Users\agung\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\agung\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\agung\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\agung\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\agung\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\agung\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.5.Final\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\agung\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\agung\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\agung\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\agung\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\agung\.m2\repository\org\springframework\spring-test\4.1.7.RELEASE\spring-test-4.1.7.RELEASE.jar;C:\Users\agung\.m2\repository\mysql\mysql-connector-java\5.1.35\mysql-connector-java-5.1.35.jar;C:\Users\agung\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\agung\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\agung\.m2\repository\org\hibernate\hibernate-entitymanager\4.3.10.Final\hibernate-entitymanager-4.3.10.Final.jar;C:\Users\agung\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\agung\.m2\repository\org\dbunit\dbunit\2.4.9\dbunit-2.4.9.jar;C:\Users\agung\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\agung\.m2\repository\org\postgresql\postgresql\9.4.1208.jre7\postgresql-9.4.1208.jre7.jar;C:\Users\agung\.m2\repository\ch\qos\logback\logback-classic\1.1.3\logback-classic-1.1.3.jar;C:\Users\agung\.m2\repository\ch\qos\logback\logback-core\1.1.3\logback-core-1.1.3.jar;, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.8, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.8.0_66\jre, sun.java.command=D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\surefire\surefirebooter8055279839590687267.jar D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\surefire\surefire914977375005863237tmp D:\5.PROJECK\JAVA DEVELOPMENT\1.TEMPLATE PROJECK\Template-Projeck-SpringDataJpa\target\surefire\surefire_04305255948903710627tmp, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, java.specification.vendor=Oracle Corporation, user.language=en, user.language.format=id, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.8.0_66, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_66\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_66\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_66\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_66\jre\classes, java.vendor=Oracle Corporation, localRepository=C:\Users\agung\.m2\repository, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86} 
2016-08-09 20:38:52,868 DEBUG o.h.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled 
2016-08-09 20:38:52,874 DEBUG o.h.engine.spi.CascadeStyles - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST] 
2016-08-09 20:38:52,952 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5InnoDBDialect] 
2016-08-09 20:38:53,077 DEBUG o.h.p.e.AbstractEntityPersister - Static SQL for entity: com.agung.template.springjpa.entity.Produk 
2016-08-09 20:38:53,077 DEBUG o.h.p.e.AbstractEntityPersister -  Version select: select id from m_produk where id =? 
2016-08-09 20:38:53,077 DEBUG o.h.p.e.AbstractEntityPersister -  Snapshot select: select produk_.id, produk_.harga as harga2_0_, produk_.kode_produk as kode_pro3_0_, produk_.nama_produk as nama_pro4_0_ from m_produk produk_ where produk_.id=? 
2016-08-09 20:38:53,077 DEBUG o.h.p.e.AbstractEntityPersister -  Insert 0: insert into m_produk (harga, kode_produk, nama_produk, id) values (?, ?, ?, ?) 
2016-08-09 20:38:53,078 DEBUG o.h.p.e.AbstractEntityPersister -  Update 0: update m_produk set harga=?, kode_produk=?, nama_produk=? where id=? 
2016-08-09 20:38:53,078 DEBUG o.h.p.e.AbstractEntityPersister -  Delete 0: delete from m_produk where id=? 
2016-08-09 20:38:53,153 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bf7094] 
2016-08-09 20:38:53,155 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:53,155 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:53,155 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:53,156 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:53,175 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:53,181 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:53,184 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [NONE]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-09 20:38:53,185 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10e94e] 
2016-08-09 20:38:53,185 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:53,185 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:53,185 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:53,185 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:53,186 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:53,186 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:53,186 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [READ]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-09 20:38:53,186 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dbf9be] 
2016-08-09 20:38:53,186 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:53,187 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:53,187 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:53,187 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:53,187 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:53,187 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:53,188 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [UPGRADE]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-09 20:38:53,188 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6ee17] 
2016-08-09 20:38:53,188 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:53,189 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:53,189 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:53,189 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:53,190 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:53,190 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:53,192 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [UPGRADE_NOWAIT]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-09 20:38:53,193 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@818ac4] 
2016-08-09 20:38:53,193 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:53,193 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:53,193 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:53,193 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:53,194 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:53,194 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:53,194 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [UPGRADE_SKIPLOCKED]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-09 20:38:53,194 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1154f21] 
2016-08-09 20:38:53,195 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:53,195 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:53,195 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:53,195 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:53,195 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:53,195 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:53,196 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [FORCE]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-09 20:38:53,196 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@116fc68] 
2016-08-09 20:38:53,196 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:53,197 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:53,197 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:53,197 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:53,197 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:53,198 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:53,198 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [PESSIMISTIC_READ]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? lock in share mode 
2016-08-09 20:38:53,198 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fdb014] 
2016-08-09 20:38:53,198 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:53,198 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:53,198 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:53,199 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:53,199 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:53,199 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:53,199 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [PESSIMISTIC_WRITE]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-09 20:38:53,200 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fc505] 
2016-08-09 20:38:53,207 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:53,208 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:53,208 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:53,209 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:53,209 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:53,209 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:53,210 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [PESSIMISTIC_FORCE_INCREMENT]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? for update 
2016-08-09 20:38:53,210 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d140a7] 
2016-08-09 20:38:53,210 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:53,210 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:53,210 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:53,210 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:53,210 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:53,213 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:53,213 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [OPTIMISTIC]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-09 20:38:53,213 DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a27288] 
2016-08-09 20:38:53,213 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : harga 
2016-08-09 20:38:53,213 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : kodeProduk 
2016-08-09 20:38:53,213 DEBUG o.h.p.w.spi.MetamodelGraphWalker - Visiting attribute path : namaProduk 
2016-08-09 20:38:53,213 DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan... 
2016-08-09 20:38:53,214 DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0> 
2016-08-09 20:38:53,214 DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter - LoadPlan(entity=com.agung.template.springjpa.entity.Produk)
    - Returns
       - EntityReturnImpl(entity=com.agung.template.springjpa.entity.Produk, querySpaceUid=<gen:0>, path=com.agung.template.springjpa.entity.Produk)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.agung.template.springjpa.entity.Produk)
          - SQL table alias mapping - produk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
 
2016-08-09 20:38:53,215 DEBUG o.h.loader.entity.plan.EntityLoader - Static select for entity com.agung.template.springjpa.entity.Produk [OPTIMISTIC_FORCE_INCREMENT]: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-09 20:38:53,239 DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.agung.template.springjpa.entity.Produk: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-09 20:38:53,240 DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.agung.template.springjpa.entity.Produk: select produk0_.id as id1_0_0_, produk0_.harga as harga2_0_0_, produk0_.kode_produk as kode_pro3_0_0_, produk0_.nama_produk as nama_pro4_0_0_ from m_produk produk0_ where produk0_.id=? 
2016-08-09 20:38:53,513 DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c827db 
2016-08-09 20:38:53,513 DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 4328f11d-5d2e-4407-bce9-6c0ae70707cf (<unnamed>) 
2016-08-09 20:38:53,514 DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured 
2016-08-09 20:38:53,514 DEBUG o.h.internal.SessionFactoryImpl - Instantiated session factory 
2016-08-09 20:38:53,525 DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files 
2016-08-09 20:38:53,526 DEBUG org.hibernate.cfg.Configuration - Process annotated classes 
2016-08-09 20:38:53,526 DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass) 
2016-08-09 20:38:53,526 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-09 20:38:53,526 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-09 20:38:53,526 DEBUG org.hibernate.cfg.Configuration - Processing collection mappings 
2016-08-09 20:38:53,526 DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings 
2016-08-09 20:38:53,526 DEBUG org.hibernate.cfg.Configuration - Processing association property references 
2016-08-09 20:38:53,526 DEBUG org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers 
2016-08-09 20:38:53,526 DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints 
2016-08-09 20:38:53,527 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5InnoDBDialect] 
2016-08-09 20:38:53,527 DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files 
2016-08-09 20:38:53,527 DEBUG org.hibernate.cfg.Configuration - Process annotated classes 
2016-08-09 20:38:53,528 DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass) 
2016-08-09 20:38:53,528 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-09 20:38:53,528 DEBUG org.hibernate.cfg.Configuration - Processing extends queue 
2016-08-09 20:38:53,528 DEBUG org.hibernate.cfg.Configuration - Processing collection mappings 
2016-08-09 20:38:53,528 DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings 
2016-08-09 20:38:53,528 DEBUG org.hibernate.cfg.Configuration - Processing association property references 
2016-08-09 20:38:53,528 DEBUG org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers 
2016-08-09 20:38:53,528 DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints 
2016-08-09 20:38:53,528 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5InnoDBDialect] 
2016-08-09 20:38:53,534 DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5InnoDBDialect] 
2016-08-09 20:38:53,536 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export 
2016-08-09 20:38:53,536 DEBUG o.h.tool.hbm2ddl.SchemaExport - Import file not found: /import.sql 
2016-08-09 20:38:53,539 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:38:53,640 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:38:53,670 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:38:53,776 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete 
2016-08-09 20:38:53,776 DEBUG o.h.internal.NamedQueryRepository - Checking 0 named HQL queries 
2016-08-09 20:38:53,776 DEBUG o.h.internal.NamedQueryRepository - Checking 0 named SQL queries 
2016-08-09 20:38:53,784 DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] 
2016-08-09 20:38:53,790 DEBUG o.h.j.i.s.JpaSchemaGenerator - No actions specified; doing nothing 
2016-08-09 20:38:53,853 DEBUG o.h.j.i.EntityManagerFactoryRegistry - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@1d69c0f 
2016-08-09 20:38:53,854 DEBUG o.h.j.i.EntityManagerFactoryRegistry - Registering EntityManagerFactory: default  
2016-08-09 20:38:53,859 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:53,861 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'entityManagerFactory' 
2016-08-09 20:38:53,861 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3958e7: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,produkService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,dataSource,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,foo,jpaMappingContext,produkDao,transactionManager,entityManagerFactory,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,org.springframework.orm.jpa.SharedEntityManagerCreator#0]; root of factory hierarchy 
2016-08-09 20:38:53,862 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' 
2016-08-09 20:38:53,862 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'produkService' 
2016-08-09 20:38:53,862 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'produkService' 
2016-08-09 20:38:53,868 DEBUG o.s.b.f.a.InjectionMetadata - Registered injected element on class [com.agung.template.springjpa.service.impl.ProdukServiceImpl]: AutowiredFieldElement for private com.agung.template.springjpa.repository.ProdukDao com.agung.template.springjpa.service.impl.ProdukServiceImpl.produDao 
2016-08-09 20:38:53,868 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'produkService' to allow for resolving potential circular references 
2016-08-09 20:38:53,870 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'produkService': AutowiredFieldElement for private com.agung.template.springjpa.repository.ProdukDao com.agung.template.springjpa.service.impl.ProdukServiceImpl.produDao 
2016-08-09 20:38:53,874 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'produkDao' 
2016-08-09 20:38:53,875 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'produkDao' 
2016-08-09 20:38:53,893 DEBUG o.s.b.f.a.InjectionMetadata - Registered injected element on class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]: PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager) 
2016-08-09 20:38:53,894 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'produkDao' to allow for resolving potential circular references 
2016-08-09 20:38:53,897 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'produkDao': PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager) 
2016-08-09 20:38:53,898 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean '(inner bean)#91f68b' 
2016-08-09 20:38:53,902 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean '(inner bean)#c7d8b3' 
2016-08-09 20:38:53,907 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name '(inner bean)#c7d8b3' 
2016-08-09 20:38:53,908 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:53,908 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)#c7d8b3' 
2016-08-09 20:38:53,909 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:53,920 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:53,921 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)#91f68b' 
2016-08-09 20:38:53,921 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean '(inner bean)#2a69b4' 
2016-08-09 20:38:53,927 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:53,928 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)#2a69b4' 
2016-08-09 20:38:53,929 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean '(inner bean)#18bd86d' 
2016-08-09 20:38:53,930 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory' 
2016-08-09 20:38:53,930 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:53,959 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:53,961 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)#18bd86d' 
2016-08-09 20:38:53,961 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpaMappingContext' 
2016-08-09 20:38:53,961 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'jpaMappingContext' 
2016-08-09 20:38:53,962 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'jpaMappingContext' to allow for resolving potential circular references 
2016-08-09 20:38:53,967 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'jpaMappingContext' 
2016-08-09 20:38:53,967 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:53,968 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning eagerly cached instance of singleton bean 'jpaMappingContext' that is not fully initialized yet - a consequence of a circular reference 
2016-08-09 20:38:53,968 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory' 
2016-08-09 20:38:53,993 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'jpaMappingContext' 
2016-08-09 20:38:53,993 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:53,997 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'produkDao' 
2016-08-09 20:38:54,010 DEBUG o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation 
2016-08-09 20:38:54,096 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-09 20:38:54,117 DEBUG o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation 
2016-08-09 20:38:54,117 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-09 20:38:54,124 DEBUG o.s.a.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ThreadBoundTargetSource@1f02251 
2016-08-09 20:38:54,158 DEBUG o.s.d.j.r.query.JpaQueryFactory - Looking up query for method search 
2016-08-09 20:38:54,247 DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select p from com.agung.template.springjpa.entity.Produk p where lower(p.kodeProduk) like lower(:search) or lower(p.namaProduk) like lower(:search) order by p.namaProduk asc 
2016-08-09 20:38:54,261 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'agung'
    |  |     |  |  |  |  \-[IDENT] Node: 'template'
    |  |     |  |  |  \-[IDENT] Node: 'springjpa'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Produk'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'p'
    +-[WHERE] Node: 'where'
    |  \-[OR] Node: 'or'
    |     +-[LIKE] Node: 'like'
    |     |  +-[METHOD_CALL] Node: '('
    |     |  |  +-[IDENT] Node: 'lower'
    |     |  |  \-[EXPR_LIST] Node: 'exprList'
    |     |  |     \-[DOT] Node: '.'
    |     |  |        +-[IDENT] Node: 'p'
    |     |  |        \-[IDENT] Node: 'kodeProduk'
    |     |  \-[METHOD_CALL] Node: '('
    |     |     +-[IDENT] Node: 'lower'
    |     |     \-[EXPR_LIST] Node: 'exprList'
    |     |        \-[COLON] Node: ':'
    |     |           \-[IDENT] Node: 'search'
    |     \-[LIKE] Node: 'like'
    |        +-[METHOD_CALL] Node: '('
    |        |  +-[IDENT] Node: 'lower'
    |        |  \-[EXPR_LIST] Node: 'exprList'
    |        |     \-[DOT] Node: '.'
    |        |        +-[IDENT] Node: 'p'
    |        |        \-[IDENT] Node: 'namaProduk'
    |        \-[METHOD_CALL] Node: '('
    |           +-[IDENT] Node: 'lower'
    |           \-[EXPR_LIST] Node: 'exprList'
    |              \-[COLON] Node: ':'
    |                 \-[IDENT] Node: 'search'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'p'
       |  \-[IDENT] Node: 'namaProduk'
       \-[ASCENDING] Node: 'asc'
 
2016-08-09 20:38:54,261 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-09 20:38:54,292 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select] 
2016-08-09 20:38:54,319 DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.agung.template.springjpa.entity.Produk (p) -> produk0_ 
2016-08-09 20:38:54,322 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-09 20:38:54,328 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-09 20:38:54,330 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : kodeProduk -> org.hibernate.type.StringType@1c995f4 
2016-08-09 20:38:54,331 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p.kodeProduk -> produk0_.kode_produk 
2016-08-09 20:38:54,334 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-09 20:38:54,335 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : namaProduk -> org.hibernate.type.StringType@1c995f4 
2016-08-09 20:38:54,335 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p.namaProduk -> produk0_.nama_produk 
2016-08-09 20:38:54,336 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-09 20:38:54,337 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : namaProduk -> org.hibernate.type.StringType@1c995f4 
2016-08-09 20:38:54,337 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p.namaProduk -> produk0_.nama_produk 
2016-08-09 20:38:54,337 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select] 
2016-08-09 20:38:54,338 DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} produk0_.id ) ( FromClause{level=1} m_produk produk0_ ) ( where ( or ( like ( ( lower ( exprList ( produk0_.kode_produk produk0_.id kodeProduk ) ) ) ( ( lower ( exprList ? ) ) ) ( like ( ( lower ( exprList ( produk0_.nama_produk produk0_.id namaProduk ) ) ) ( ( lower ( exprList ? ) ) ) ) ) ( order ( produk0_.nama_produk produk0_.id namaProduk ) asc ) ) 
2016-08-09 20:38:54,346 DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [m_produk produk0_] 
2016-08-09 20:38:54,347 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select] 
2016-08-09 20:38:54,348 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (m_produk)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'produk0_.id as id1_0_' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
    |  \-[SQL_TOKEN] SqlFragment: 'produk0_.harga as harga2_0_, produk0_.kode_produk as kode_pro3_0_, produk0_.nama_produk as nama_pro4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[produk0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'm_produk produk0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=m_produk,tableAlias=produk0_,origin=null,columns={,className=com.agung.template.springjpa.entity.Produk}}
    +-[WHERE] SqlNode: 'where'
    |  \-[OR] SqlNode: 'or'
    |     +-[LIKE] BinaryLogicOperatorNode: 'like'
    |     |  +-[METHOD_CALL] MethodNode: '('
    |     |  |  +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
    |     |  |  \-[EXPR_LIST] SqlNode: 'exprList'
    |     |  |     \-[DOT] DotNode: 'produk0_.kode_produk' {propertyName=kodeProduk,dereferenceType=PRIMITIVE,getPropertyPath=kodeProduk,path=p.kodeProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=p}
    |     |  |        +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
    |     |  |        \-[IDENT] IdentNode: 'kodeProduk' {originalText=kodeProduk}
    |     |  \-[METHOD_CALL] MethodNode: '('
    |     |     +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
    |     |     \-[EXPR_LIST] SqlNode: 'exprList'
    |     |        \-[NAMED_PARAM] ParameterNode: '?' {name=search, expectedType=null}
    |     \-[LIKE] BinaryLogicOperatorNode: 'like'
    |        +-[METHOD_CALL] MethodNode: '('
    |        |  +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
    |        |  \-[EXPR_LIST] SqlNode: 'exprList'
    |        |     \-[DOT] DotNode: 'produk0_.nama_produk' {propertyName=namaProduk,dereferenceType=PRIMITIVE,getPropertyPath=namaProduk,path=p.namaProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=p}
    |        |        +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
    |        |        \-[IDENT] IdentNode: 'namaProduk' {originalText=namaProduk}
    |        \-[METHOD_CALL] MethodNode: '('
    |           +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
    |           \-[EXPR_LIST] SqlNode: 'exprList'
    |              \-[NAMED_PARAM] ParameterNode: '?' {name=search, expectedType=null}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'produk0_.nama_produk' {propertyName=namaProduk,dereferenceType=PRIMITIVE,getPropertyPath=namaProduk,path=p.namaProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=p}
       |  +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
       |  \-[IDENT] IdentNode: 'namaProduk' {originalText=namaProduk}
       \-[ASCENDING] SqlNode: 'asc'
 
2016-08-09 20:38:54,349 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-09 20:38:54,365 DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select p from com.agung.template.springjpa.entity.Produk p where lower(p.kodeProduk) like lower(:search) or lower(p.namaProduk) like lower(:search) order by p.namaProduk asc 
2016-08-09 20:38:54,366 DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select produk0_.id as id1_0_, produk0_.harga as harga2_0_, produk0_.kode_produk as kode_pro3_0_, produk0_.nama_produk as nama_pro4_0_ from m_produk produk0_ where lower(produk0_.kode_produk) like lower(?) or lower(produk0_.nama_produk) like lower(?) order by produk0_.nama_produk asc 
2016-08-09 20:38:54,366 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-09 20:38:54,376 DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select count(p) from com.agung.template.springjpa.entity.Produk p where lower(p.kodeProduk) like lower(:search) or lower(p.namaProduk) like lower(:search) 
2016-08-09 20:38:54,380 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'agung'
    |  |     |  |  |  |  \-[IDENT] Node: 'template'
    |  |     |  |  |  \-[IDENT] Node: 'springjpa'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Produk'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[LIKE] Node: 'like'
          |  +-[METHOD_CALL] Node: '('
          |  |  +-[IDENT] Node: 'lower'
          |  |  \-[EXPR_LIST] Node: 'exprList'
          |  |     \-[DOT] Node: '.'
          |  |        +-[IDENT] Node: 'p'
          |  |        \-[IDENT] Node: 'kodeProduk'
          |  \-[METHOD_CALL] Node: '('
          |     +-[IDENT] Node: 'lower'
          |     \-[EXPR_LIST] Node: 'exprList'
          |        \-[COLON] Node: ':'
          |           \-[IDENT] Node: 'search'
          \-[LIKE] Node: 'like'
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'lower'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'p'
             |        \-[IDENT] Node: 'namaProduk'
             \-[METHOD_CALL] Node: '('
                +-[IDENT] Node: 'lower'
                \-[EXPR_LIST] Node: 'exprList'
                   \-[COLON] Node: ':'
                      \-[IDENT] Node: 'search'
 
2016-08-09 20:38:54,381 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-09 20:38:54,381 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select] 
2016-08-09 20:38:54,381 DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.agung.template.springjpa.entity.Produk (p) -> produk0_ 
2016-08-09 20:38:54,382 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-09 20:38:54,383 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-09 20:38:54,383 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : kodeProduk -> org.hibernate.type.StringType@1c995f4 
2016-08-09 20:38:54,383 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p.kodeProduk -> produk0_.kode_produk 
2016-08-09 20:38:54,383 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p -> produk0_.id 
2016-08-09 20:38:54,384 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : namaProduk -> org.hibernate.type.StringType@1c995f4 
2016-08-09 20:38:54,384 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : p.namaProduk -> produk0_.nama_produk 
2016-08-09 20:38:54,384 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select] 
2016-08-09 20:38:54,384 DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( count produk0_.id ) ) ( FromClause{level=1} m_produk produk0_ ) ( where ( or ( like ( ( lower ( exprList ( produk0_.kode_produk produk0_.id kodeProduk ) ) ) ( ( lower ( exprList ? ) ) ) ( like ( ( lower ( exprList ( produk0_.nama_produk produk0_.id namaProduk ) ) ) ( ( lower ( exprList ? ) ) ) ) ) ) 
2016-08-09 20:38:54,385 DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [m_produk produk0_] 
2016-08-09 20:38:54,386 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select] 
2016-08-09 20:38:54,388 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (m_produk)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[produk0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'm_produk produk0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=m_produk,tableAlias=produk0_,origin=null,columns={,className=com.agung.template.springjpa.entity.Produk}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[METHOD_CALL] MethodNode: '('
          |  |  +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
          |  |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     \-[DOT] DotNode: 'produk0_.kode_produk' {propertyName=kodeProduk,dereferenceType=PRIMITIVE,getPropertyPath=kodeProduk,path=p.kodeProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=p}
          |  |        +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
          |  |        \-[IDENT] IdentNode: 'kodeProduk' {originalText=kodeProduk}
          |  \-[METHOD_CALL] MethodNode: '('
          |     +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
          |     \-[EXPR_LIST] SqlNode: 'exprList'
          |        \-[NAMED_PARAM] ParameterNode: '?' {name=search, expectedType=null}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'produk0_.nama_produk' {propertyName=namaProduk,dereferenceType=PRIMITIVE,getPropertyPath=namaProduk,path=p.namaProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=p}
             |        +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=p, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
             |        \-[IDENT] IdentNode: 'namaProduk' {originalText=namaProduk}
             \-[METHOD_CALL] MethodNode: '('
                +-[METHOD_NAME] IdentNode: 'lower' {originalText=lower}
                \-[EXPR_LIST] SqlNode: 'exprList'
                   \-[NAMED_PARAM] ParameterNode: '?' {name=search, expectedType=null}
 
2016-08-09 20:38:54,388 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-09 20:38:54,388 DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select count(p) from com.agung.template.springjpa.entity.Produk p where lower(p.kodeProduk) like lower(:search) or lower(p.namaProduk) like lower(:search) 
2016-08-09 20:38:54,388 DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select count(produk0_.id) as col_0_0_ from m_produk produk0_ where lower(produk0_.kode_produk) like lower(?) or lower(produk0_.nama_produk) like lower(?) 
2016-08-09 20:38:54,388 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-09 20:38:54,393 DEBUG o.s.d.j.r.query.JpaQueryFactory - Looking up query for method findByKodeProduk 
2016-08-09 20:38:54,395 DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Produk.findByKodeProduk 
2016-08-09 20:38:54,396 DEBUG o.h.j.spi.AbstractEntityManagerImpl - Mark transaction for rollback 
2016-08-09 20:38:54,397 DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Produk.findByKodeProduk 
2016-08-09 20:38:54,408 DEBUG o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation 
2016-08-09 20:38:54,409 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-09 20:38:54,448 DEBUG o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation 
2016-08-09 20:38:54,449 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-09 20:38:54,453 DEBUG o.s.a.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.jpa.repository.support.SimpleJpaRepository@6ee758] 
2016-08-09 20:38:54,459 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:54,460 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'produkDao' 
2016-08-09 20:38:54,460 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:54,463 DEBUG o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'produkService' to bean named 'produkDao' 
2016-08-09 20:38:54,463 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:54,465 DEBUG o.s.t.a.AnnotationTransactionAttributeSource - Adding transactional method 'ProdukServiceImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '' 
2016-08-09 20:38:54,466 DEBUG o.s.a.f.a.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'produkService' with 0 common interceptors and 1 specific interceptors 
2016-08-09 20:38:54,466 DEBUG o.s.a.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.agung.template.springjpa.service.impl.ProdukServiceImpl@116b68b] 
2016-08-09 20:38:54,471 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'produkService' 
2016-08-09 20:38:54,471 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' 
2016-08-09 20:38:54,471 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' 
2016-08-09 20:38:54,471 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' 
2016-08-09 20:38:54,471 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' 
2016-08-09 20:38:54,471 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' 
2016-08-09 20:38:54,471 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator' 
2016-08-09 20:38:54,471 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' 
2016-08-09 20:38:54,471 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' 
2016-08-09 20:38:54,471 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' 
2016-08-09 20:38:54,474 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references 
2016-08-09 20:38:54,478 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' 
2016-08-09 20:38:54,478 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0' 
2016-08-09 20:38:54,478 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' 
2016-08-09 20:38:54,478 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:54,478 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource' 
2016-08-09 20:38:54,479 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' 
2016-08-09 20:38:54,479 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'foo' 
2016-08-09 20:38:54,479 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'jpaMappingContext' 
2016-08-09 20:38:54,480 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'produkDao' 
2016-08-09 20:38:54,480 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager' 
2016-08-09 20:38:54,480 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'transactionManager' 
2016-08-09 20:38:54,488 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references 
2016-08-09 20:38:54,493 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory' 
2016-08-09 20:38:54,493 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaDialect#d7f8b4' 
2016-08-09 20:38:54,497 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:54,497 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaDialect#d7f8b4' 
2016-08-09 20:38:54,498 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionManager' 
2016-08-09 20:38:54,499 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:54,500 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'transactionManager' 
2016-08-09 20:38:54,500 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory' 
2016-08-09 20:38:54,500 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' 
2016-08-09 20:38:54,500 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' 
2016-08-09 20:38:54,500 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.orm.jpa.SharedEntityManagerCreator#0' 
2016-08-09 20:38:54,500 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.orm.jpa.SharedEntityManagerCreator#0' 
2016-08-09 20:38:54,500 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory' 
2016-08-09 20:38:54,502 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.orm.jpa.SharedEntityManagerCreator#0' to allow for resolving potential circular references 
2016-08-09 20:38:54,502 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:54,503 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.orm.jpa.SharedEntityManagerCreator#0' 
2016-08-09 20:38:54,505 DEBUG o.s.c.s.GenericApplicationContext - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@2f86e6] 
2016-08-09 20:38:54,506 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor' 
2016-08-09 20:38:54,508 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] 
2016-08-09 20:38:54,508 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] 
2016-08-09 20:38:54,508 DEBUG o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] 
2016-08-09 20:38:54,509 DEBUG o.s.t.c.DefaultCacheAwareContextLoaderDelegate - Storing ApplicationContext in cache under key [[MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]] 
2016-08-09 20:38:54,509 DEBUG o.s.test.context.cache - Spring test ApplicationContext cache statistics: [ContextCache@ee53dc size = 1, hitCount = 0, missCount = 1, parentContextCount = 0] 
2016-08-09 20:38:54,511 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'com.agung.template.springjpa.produktest.ProdukDaoTest': AutowiredFieldElement for private com.agung.template.springjpa.service.ProdukService com.agung.template.springjpa.produktest.ProdukDaoTest.pService 
2016-08-09 20:38:54,512 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'produkService' 
2016-08-09 20:38:54,512 DEBUG o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'com.agung.template.springjpa.produktest.ProdukDaoTest' to bean named 'produkService' 
2016-08-09 20:38:54,512 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'com.agung.template.springjpa.produktest.ProdukDaoTest': AutowiredFieldElement for private javax.sql.DataSource com.agung.template.springjpa.produktest.ProdukDaoTest.ds 
2016-08-09 20:38:54,512 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource' 
2016-08-09 20:38:54,513 DEBUG o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'com.agung.template.springjpa.produktest.ProdukDaoTest' to bean named 'dataSource' 
2016-08-09 20:38:54,513 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor' 
2016-08-09 20:38:54,547 DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null] 
2016-08-09 20:38:54,548 DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null] 
2016-08-09 20:38:54,565 DEBUG o.d.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start 
2016-08-09 20:38:54,565 DEBUG o.d.dataset.xml.FlatXmlProducer - produce() - start 
2016-08-09 20:38:54,566 DEBUG o.d.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@284d0e, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@17286ad) - start 
2016-08-09 20:38:54,566 DEBUG o.d.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@284d0e, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@17286ad) - start 
2016-08-09 20:38:54,587 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@110a26d) - start 
2016-08-09 20:38:54,587 DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start 
2016-08-09 20:38:54,588 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@110a26d) - start 
2016-08-09 20:38:54,588 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:54,588 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:54,588 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,589 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,589 DEBUG o.d.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@110a26d) - start 
2016-08-09 20:38:54,609 DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)]) - start 
2016-08-09 20:38:54,609 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-09 20:38:54,609 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,609 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,609 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-09 20:38:54,609 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-09 20:38:54,610 DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-09 20:38:54,612 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:54,613 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,613 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,613 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:54,613 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:54,613 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:54,613 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:54,613 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:54,613 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,613 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,613 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-001) - start 
2016-08-09 20:38:54,614 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-001) - start 
2016-08-09 20:38:54,614 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:54,614 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@110a26d) - start 
2016-08-09 20:38:54,614 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:54,614 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,614 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,614 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:54,614 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:54,614 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,614 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,614 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,614 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,614 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:54,614 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,615 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,615 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:54,615 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:54,615 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:54,615 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:54,615 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:54,615 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,615 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,615 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-002) - start 
2016-08-09 20:38:54,615 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-002) - start 
2016-08-09 20:38:54,615 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:54,615 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@110a26d) - start 
2016-08-09 20:38:54,615 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:54,615 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,615 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,615 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:54,615 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:54,617 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,617 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,617 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,617 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,617 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:54,617 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,617 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,617 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:54,618 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:54,618 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:54,618 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:54,618 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:54,618 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,618 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,618 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-003) - start 
2016-08-09 20:38:54,618 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-003) - start 
2016-08-09 20:38:54,618 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:54,618 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@110a26d) - start 
2016-08-09 20:38:54,618 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:54,618 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,618 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,618 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:54,618 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:54,619 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,619 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,619 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,619 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,619 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:54,619 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,619 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,619 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:54,619 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:54,619 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:54,619 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:54,619 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:54,619 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,619 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,619 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-004) - start 
2016-08-09 20:38:54,619 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-004) - start 
2016-08-09 20:38:54,619 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:54,620 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@110a26d) - start 
2016-08-09 20:38:54,620 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:54,620 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,620 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,620 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:54,620 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:54,620 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,620 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,620 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,620 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,620 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:54,620 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,620 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,620 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:54,620 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:54,620 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:54,621 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:54,621 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:54,621 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,621 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,621 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-005) - start 
2016-08-09 20:38:54,621 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-005) - start 
2016-08-09 20:38:54,621 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:54,621 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start 
2016-08-09 20:38:54,621 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:54,621 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,621 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,621 DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start 
2016-08-09 20:38:54,621 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,621 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,621 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-09 20:38:54,622 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,622 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,622 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-09 20:38:54,623 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-09 20:38:54,623 DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start 
2016-08-09 20:38:54,623 DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[m_produk], _tableMap={M_PRODUK=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]}, _caseSensitiveTableNames=false] 
2016-08-09 20:38:54,704 DEBUG o.d.database.DatabaseConnection - Database connection info: 
	database product name=MySQL
	database version=5.6.22-log
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
	jdbc driver major version=5
	jdbc driver minor version=1
 
2016-08-09 20:38:54,705 DEBUG o.d.database.DatabaseConnection - validateSchema(validateStrict=false) - start 
2016-08-09 20:38:54,705 DEBUG o.d.database.DatabaseConnection - Schema is null. Nothing to validate. 
2016-08-09 20:38:54,706 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-09 20:38:54,706 DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start 
2016-08-09 20:38:54,706 DEBUG o.d.dataset.OrderedTableNameMap - orderedValues() - start 
2016-08-09 20:38:54,706 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,706 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,707 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-09 20:38:54,707 DEBUG org.dbunit.dataset.CompositeDataSet - addTable(newTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], tableList=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[], _tableMap={}, _caseSensitiveTableNames=false], combine=true) - start 
2016-08-09 20:38:54,707 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,707 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,707 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-09 20:38:54,707 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,707 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,707 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-09 20:38:54,707 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-09 20:38:54,708 DEBUG o.d.dataset.OrderedTableNameMap - orderedValues() - start 
2016-08-09 20:38:54,708 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,708 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,708 DEBUG o.d.operation.CompositeOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=null], , dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-09 20:38:54,734 DEBUG o.d.operation.DeleteAllOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-09 20:38:54,735 DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start 
2016-08-09 20:38:54,738 DEBUG o.d.d.s.PreparedStatementFactory - createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:54,739 DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:54,742 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-09 20:38:54,742 DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start 
2016-08-09 20:38:54,742 DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start 
2016-08-09 20:38:54,742 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-09 20:38:54,742 DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=m_produk) - start 
2016-08-09 20:38:54,742 DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start 
2016-08-09 20:38:54,742 DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database... 
2016-08-09 20:38:54,915 DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=MySQL
	database version=5.6.22-log
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
	jdbc driver major version=5
	jdbc driver minor version=1
 
2016-08-09 20:38:54,915 DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=org.apache.commons.dbcp.DelegatingResultSet@189292e 
2016-08-09 20:38:54,917 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}]) - start 
2016-08-09 20:38:54,917 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:54,917 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=berita, escapePattern=null) - start 
2016-08-09 20:38:54,917 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=berita, object=null) - start 
2016-08-09 20:38:54,917 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=berita) - start 
2016-08-09 20:38:54,917 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=berita) - end - result=BERITA 
2016-08-09 20:38:54,918 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=BERITA) - start 
2016-08-09 20:38:54,918 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=BERITA) - end - result=BERITA 
2016-08-09 20:38:54,918 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}]) - start 
2016-08-09 20:38:54,918 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:54,918 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=komentar, escapePattern=null) - start 
2016-08-09 20:38:54,918 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=komentar, object=null) - start 
2016-08-09 20:38:54,918 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar) - start 
2016-08-09 20:38:54,918 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar) - end - result=KOMENTAR 
2016-08-09 20:38:54,920 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR) - start 
2016-08-09 20:38:54,920 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR) - end - result=KOMENTAR 
2016-08-09 20:38:54,920 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}]) - start 
2016-08-09 20:38:54,920 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:54,920 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=komentar_berita, escapePattern=null) - start 
2016-08-09 20:38:54,920 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=komentar_berita, object=null) - start 
2016-08-09 20:38:54,920 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar_berita) - start 
2016-08-09 20:38:54,922 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar_berita) - end - result=KOMENTAR_BERITA 
2016-08-09 20:38:54,922 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR_BERITA) - start 
2016-08-09 20:38:54,922 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR_BERITA) - end - result=KOMENTAR_BERITA 
2016-08-09 20:38:54,922 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}]) - start 
2016-08-09 20:38:54,922 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:54,922 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-09 20:38:54,922 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=null) - start 
2016-08-09 20:38:54,923 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,923 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,923 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-09 20:38:54,923 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-09 20:38:54,923 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}]) - start 
2016-08-09 20:38:54,923 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:54,923 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=mahasiswa, escapePattern=null) - start 
2016-08-09 20:38:54,923 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=mahasiswa, object=null) - start 
2016-08-09 20:38:54,923 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=mahasiswa) - start 
2016-08-09 20:38:54,923 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=mahasiswa) - end - result=MAHASISWA 
2016-08-09 20:38:54,923 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=MAHASISWA) - start 
2016-08-09 20:38:54,923 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=MAHASISWA) - end - result=MAHASISWA 
2016-08-09 20:38:54,923 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}]) - start 
2016-08-09 20:38:54,928 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:54,929 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_menu, escapePattern=null) - start 
2016-08-09 20:38:54,929 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_menu, object=null) - start 
2016-08-09 20:38:54,929 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_menu) - start 
2016-08-09 20:38:54,929 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_menu) - end - result=T_MENU 
2016-08-09 20:38:54,929 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_MENU) - start 
2016-08-09 20:38:54,929 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_MENU) - end - result=T_MENU 
2016-08-09 20:38:54,929 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}]) - start 
2016-08-09 20:38:54,929 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:54,929 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_permission, escapePattern=null) - start 
2016-08-09 20:38:54,929 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_permission, object=null) - start 
2016-08-09 20:38:54,929 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_permission) - start 
2016-08-09 20:38:54,929 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_permission) - end - result=T_PERMISSION 
2016-08-09 20:38:54,929 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_PERMISSION) - start 
2016-08-09 20:38:54,930 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_PERMISSION) - end - result=T_PERMISSION 
2016-08-09 20:38:54,930 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}]) - start 
2016-08-09 20:38:54,930 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:54,930 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_role, escapePattern=null) - start 
2016-08-09 20:38:54,930 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_role, object=null) - start 
2016-08-09 20:38:54,930 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_role) - start 
2016-08-09 20:38:54,930 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_role) - end - result=T_ROLE 
2016-08-09 20:38:54,930 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_ROLE) - start 
2016-08-09 20:38:54,930 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_ROLE) - end - result=T_ROLE 
2016-08-09 20:38:54,930 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}]) - start 
2016-08-09 20:38:54,930 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:54,930 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_user, escapePattern=null) - start 
2016-08-09 20:38:54,930 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_user, object=null) - start 
2016-08-09 20:38:54,932 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_user) - start 
2016-08-09 20:38:54,932 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_user) - end - result=T_USER 
2016-08-09 20:38:54,932 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_USER) - start 
2016-08-09 20:38:54,932 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_USER) - end - result=T_USER 
2016-08-09 20:38:54,933 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,933 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,933 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,933 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,939 DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=m_produk (dbIdentifierQuoteString=`) 
2016-08-09 20:38:54,939 DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'm_produk' exists in schema 'null' ... 
2016-08-09 20:38:54,942 DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.apache.commons.dbcp.DelegatingResultSet@e85c6f) - start 
2016-08-09 20:38:54,942 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:54,969 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:38:54,970 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>id 
2016-08-09 20:38:54,971 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=id) - start 
2016-08-09 20:38:54,971 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-09 20:38:54,971 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-09 20:38:54,971 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:54,971 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-09 20:38:54,971 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-09 20:38:54,971 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>harga 
2016-08-09 20:38:54,971 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=3 , sqlTypeName=DECIMAL, tableName=m_produk, columnName=harga) - start 
2016-08-09 20:38:54,971 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=3, sqlTypeName=DECIMAL) - start 
2016-08-09 20:38:54,971 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=3) - start 
2016-08-09 20:38:54,971 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:54,971 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:54,971 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:54,971 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:54,971 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:54,971 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:54,971 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:54,971 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:54,971 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:54,971 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-09 20:38:54,971 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-09 20:38:54,972 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>kode_produk 
2016-08-09 20:38:54,972 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=kode_produk) - start 
2016-08-09 20:38:54,972 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-09 20:38:54,972 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-09 20:38:54,972 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:54,972 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-09 20:38:54,972 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-09 20:38:54,972 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>nama_produk 
2016-08-09 20:38:54,972 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=nama_produk) - start 
2016-08-09 20:38:54,972 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-09 20:38:54,972 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-09 20:38:54,972 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:54,972 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-09 20:38:54,972 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-09 20:38:54,972 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start 
2016-08-09 20:38:54,972 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeyNames() - start 
2016-08-09 20:38:54,977 DEBUG o.d.database.DatabaseTableMetaData - getName() - start 
2016-08-09 20:38:54,977 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:54,977 DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[id], columns=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)]) - start 
2016-08-09 20:38:54,977 DEBUG org.dbunit.dataset.Columns - getColumn(columnName=id, columns=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)]) - start 
2016-08-09 20:38:54,942 DEBUG o.d.dataset.OrderedTableNameMap - update(tableName=m_produk, object=table=m_produk, cols=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)], pk=[(id, VARCHAR, noNulls)]) - start 
2016-08-09 20:38:54,977 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,977 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,977 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:54,977 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:54,978 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=m_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:54,978 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:54,978 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-09 20:38:54,979 DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from m_produk) - start 
2016-08-09 20:38:54,979 DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from m_produk 
2016-08-09 20:38:54,979 DEBUG o.d.d.statement.SimpleStatement - executeBatch() - start 
2016-08-09 20:38:54,979 DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from m_produk 
2016-08-09 20:38:55,005 DEBUG o.d.d.statement.SimpleStatement - clearBatch() - start 
2016-08-09 20:38:55,005 DEBUG o.d.d.s.AbstractBatchStatement - close() - start 
2016-08-09 20:38:55,005 DEBUG o.d.o.AbstractBatchOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-09 20:38:55,006 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-09 20:38:55,006 DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start 
2016-08-09 20:38:55,006 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-09 20:38:55,006 DEBUG o.d.o.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-09 20:38:55,007 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-09 20:38:55,007 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,007 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,007 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,007 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,007 DEBUG o.d.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-09 20:38:55,008 DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start 
2016-08-09 20:38:55,008 DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=m_produk) - start 
2016-08-09 20:38:55,008 DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start 
2016-08-09 20:38:55,008 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,008 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,008 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,008 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,008 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,008 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:55,008 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:55,008 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,008 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:55,008 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,009 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:55,009 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,009 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:55,009 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start 
2016-08-09 20:38:55,009 DEBUG o.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=0) - start 
2016-08-09 20:38:55,009 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-09 20:38:55,009 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,009 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,009 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,009 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,009 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=kode_produk) - start 
2016-08-09 20:38:55,009 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,010 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,010 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,010 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,010 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=nama_produk) - start 
2016-08-09 20:38:55,010 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,010 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,010 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,010 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,010 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=harga) - start 
2016-08-09 20:38:55,010 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,010 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,014 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,014 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,014 DEBUG o.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=m_produk, columns=[(id, VARCHAR, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls), (harga, DECIMAL, noNulls)], keys=[(id, VARCHAR, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,016 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=m_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,016 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:55,017 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-09 20:38:55,017 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=id, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,017 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:55,017 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=id, escapePattern=null) - start 
2016-08-09 20:38:55,017 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=kode_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,018 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:55,018 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=kode_produk, escapePattern=null) - start 
2016-08-09 20:38:55,018 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=nama_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,019 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:55,019 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=nama_produk, escapePattern=null) - start 
2016-08-09 20:38:55,019 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=harga, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,019 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:55,020 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=harga, escapePattern=null) - start 
2016-08-09 20:38:55,020 DEBUG o.d.d.s.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into m_produk (id, kode_produk, nama_produk, harga) values (?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,021 DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@11ea80d}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,047 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-09 20:38:55,048 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,048 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,048 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,048 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,048 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-001, dataType=VARCHAR) - start 
2016-08-09 20:38:55,048 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-001, dataType=VARCHAR) - start 
2016-08-09 20:38:55,048 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-001, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-09 20:38:55,048 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-001) - start 
2016-08-09 20:38:55,048 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-001) - start 
2016-08-09 20:38:55,048 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=kode_produk) - start 
2016-08-09 20:38:55,048 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,048 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,048 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,049 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,049 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-001, dataType=VARCHAR) - start 
2016-08-09 20:38:55,049 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-001, dataType=VARCHAR) - start 
2016-08-09 20:38:55,049 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-001, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-09 20:38:55,049 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-001) - start 
2016-08-09 20:38:55,049 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-001) - start 
2016-08-09 20:38:55,049 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=nama_produk) - start 
2016-08-09 20:38:55,049 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,049 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,049 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,049 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,049 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk A, dataType=VARCHAR) - start 
2016-08-09 20:38:55,049 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk A, dataType=VARCHAR) - start 
2016-08-09 20:38:55,049 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk A, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-09 20:38:55,050 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk A) - start 
2016-08-09 20:38:55,052 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk A) - start 
2016-08-09 20:38:55,052 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=harga) - start 
2016-08-09 20:38:55,052 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,052 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,053 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,053 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,053 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=250000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,053 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=250000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,053 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=250000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', 'Produk A', ** NOT SPECIFIED **)) - start 
2016-08-09 20:38:55,053 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=250000) - start 
2016-08-09 20:38:55,053 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:55,053 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:55,073 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=1) - start 
2016-08-09 20:38:55,073 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start 
2016-08-09 20:38:55,073 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,074 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,075 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,075 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,075 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=kode_produk) - start 
2016-08-09 20:38:55,075 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,075 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,075 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,075 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,075 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=nama_produk) - start 
2016-08-09 20:38:55,075 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,075 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,075 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,075 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,075 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=harga) - start 
2016-08-09 20:38:55,075 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,075 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,075 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,075 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,075 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start 
2016-08-09 20:38:55,075 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,075 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,075 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,075 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,075 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-002, dataType=VARCHAR) - start 
2016-08-09 20:38:55,075 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-002, dataType=VARCHAR) - start 
2016-08-09 20:38:55,076 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-002, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', 'Produk A', 250000)) - start 
2016-08-09 20:38:55,076 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-002) - start 
2016-08-09 20:38:55,076 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-002) - start 
2016-08-09 20:38:55,076 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=kode_produk) - start 
2016-08-09 20:38:55,076 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,076 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,076 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,076 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,076 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-002, dataType=VARCHAR) - start 
2016-08-09 20:38:55,076 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-002, dataType=VARCHAR) - start 
2016-08-09 20:38:55,076 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-002, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-001', 'Produk A', 250000)) - start 
2016-08-09 20:38:55,076 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-002) - start 
2016-08-09 20:38:55,076 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-002) - start 
2016-08-09 20:38:55,076 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=nama_produk) - start 
2016-08-09 20:38:55,076 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,076 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,076 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,077 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,077 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk B, dataType=VARCHAR) - start 
2016-08-09 20:38:55,077 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk B, dataType=VARCHAR) - start 
2016-08-09 20:38:55,077 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk B, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk A', 250000)) - start 
2016-08-09 20:38:55,077 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk B) - start 
2016-08-09 20:38:55,077 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk B) - start 
2016-08-09 20:38:55,077 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=harga) - start 
2016-08-09 20:38:55,077 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,077 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,077 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,077 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,077 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=375000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,077 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=375000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,077 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=375000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk B', 250000)) - start 
2016-08-09 20:38:55,077 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=375000) - start 
2016-08-09 20:38:55,078 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:55,078 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:55,279 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=2) - start 
2016-08-09 20:38:55,279 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start 
2016-08-09 20:38:55,279 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,279 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,279 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,279 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,279 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=kode_produk) - start 
2016-08-09 20:38:55,279 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,279 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,279 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,279 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,279 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=nama_produk) - start 
2016-08-09 20:38:55,279 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,279 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,279 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,279 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,280 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=harga) - start 
2016-08-09 20:38:55,280 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,280 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,280 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,280 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,280 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start 
2016-08-09 20:38:55,280 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,280 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,280 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,280 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,280 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-003, dataType=VARCHAR) - start 
2016-08-09 20:38:55,280 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-003, dataType=VARCHAR) - start 
2016-08-09 20:38:55,280 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-003, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk B', 375000)) - start 
2016-08-09 20:38:55,282 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-003) - start 
2016-08-09 20:38:55,282 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-003) - start 
2016-08-09 20:38:55,282 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=kode_produk) - start 
2016-08-09 20:38:55,283 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,283 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,283 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,283 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,283 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-003, dataType=VARCHAR) - start 
2016-08-09 20:38:55,283 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-003, dataType=VARCHAR) - start 
2016-08-09 20:38:55,283 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-003, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-002', 'Produk B', 375000)) - start 
2016-08-09 20:38:55,283 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-003) - start 
2016-08-09 20:38:55,283 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-003) - start 
2016-08-09 20:38:55,283 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=nama_produk) - start 
2016-08-09 20:38:55,283 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,283 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,283 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,283 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,283 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk C, dataType=VARCHAR) - start 
2016-08-09 20:38:55,284 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk C, dataType=VARCHAR) - start 
2016-08-09 20:38:55,284 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk C, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk B', 375000)) - start 
2016-08-09 20:38:55,284 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk C) - start 
2016-08-09 20:38:55,284 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk C) - start 
2016-08-09 20:38:55,284 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=harga) - start 
2016-08-09 20:38:55,284 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,284 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,284 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,284 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,284 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=420000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,284 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=420000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,284 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=420000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk C', 375000)) - start 
2016-08-09 20:38:55,285 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=420000) - start 
2016-08-09 20:38:55,285 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:55,285 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:55,303 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=3) - start 
2016-08-09 20:38:55,303 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start 
2016-08-09 20:38:55,303 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,303 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,303 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,303 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,303 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=kode_produk) - start 
2016-08-09 20:38:55,303 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,304 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,304 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,304 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,304 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=nama_produk) - start 
2016-08-09 20:38:55,304 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,304 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,304 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,304 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,304 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=harga) - start 
2016-08-09 20:38:55,304 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,304 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,304 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,304 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,304 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start 
2016-08-09 20:38:55,304 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,304 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,304 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,304 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,304 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-004, dataType=VARCHAR) - start 
2016-08-09 20:38:55,304 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-004, dataType=VARCHAR) - start 
2016-08-09 20:38:55,304 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-004, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk C', 420000)) - start 
2016-08-09 20:38:55,305 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-004) - start 
2016-08-09 20:38:55,305 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-004) - start 
2016-08-09 20:38:55,305 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=kode_produk) - start 
2016-08-09 20:38:55,305 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,305 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,305 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,305 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,305 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-004, dataType=VARCHAR) - start 
2016-08-09 20:38:55,305 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-004, dataType=VARCHAR) - start 
2016-08-09 20:38:55,305 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-004, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-003', 'Produk C', 420000)) - start 
2016-08-09 20:38:55,305 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-004) - start 
2016-08-09 20:38:55,305 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-004) - start 
2016-08-09 20:38:55,305 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=nama_produk) - start 
2016-08-09 20:38:55,306 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,306 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,306 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,306 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,306 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk D, dataType=VARCHAR) - start 
2016-08-09 20:38:55,306 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk D, dataType=VARCHAR) - start 
2016-08-09 20:38:55,306 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk D, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk C', 420000)) - start 
2016-08-09 20:38:55,306 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk D) - start 
2016-08-09 20:38:55,306 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk D) - start 
2016-08-09 20:38:55,306 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=harga) - start 
2016-08-09 20:38:55,306 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,306 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,306 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,306 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,306 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=580000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,306 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=580000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,306 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=580000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk D', 420000)) - start 
2016-08-09 20:38:55,307 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=580000) - start 
2016-08-09 20:38:55,307 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:55,307 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:55,358 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=4) - start 
2016-08-09 20:38:55,359 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start 
2016-08-09 20:38:55,359 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,359 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,359 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,359 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,359 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=kode_produk) - start 
2016-08-09 20:38:55,359 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,359 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,359 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,359 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,359 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=nama_produk) - start 
2016-08-09 20:38:55,359 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,359 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,359 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,359 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,359 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=harga) - start 
2016-08-09 20:38:55,359 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,359 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,359 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,359 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,359 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start 
2016-08-09 20:38:55,360 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,360 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,360 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,360 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,360 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-005, dataType=VARCHAR) - start 
2016-08-09 20:38:55,360 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-005, dataType=VARCHAR) - start 
2016-08-09 20:38:55,360 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-005, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk D', 580000)) - start 
2016-08-09 20:38:55,360 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-005) - start 
2016-08-09 20:38:55,360 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-005) - start 
2016-08-09 20:38:55,360 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=kode_produk) - start 
2016-08-09 20:38:55,360 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,360 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,360 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,360 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,360 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-005, dataType=VARCHAR) - start 
2016-08-09 20:38:55,360 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-005, dataType=VARCHAR) - start 
2016-08-09 20:38:55,360 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-005, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-004', 'Produk D', 580000)) - start 
2016-08-09 20:38:55,360 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-005) - start 
2016-08-09 20:38:55,361 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-005) - start 
2016-08-09 20:38:55,361 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=nama_produk) - start 
2016-08-09 20:38:55,361 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,361 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,361 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,361 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,361 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk E, dataType=VARCHAR) - start 
2016-08-09 20:38:55,361 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk E, dataType=VARCHAR) - start 
2016-08-09 20:38:55,361 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk E, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-005', 'Produk D', 580000)) - start 
2016-08-09 20:38:55,361 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk E) - start 
2016-08-09 20:38:55,361 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk E) - start 
2016-08-09 20:38:55,361 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=harga) - start 
2016-08-09 20:38:55,361 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,361 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,361 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,361 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,361 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=640000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,361 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=640000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,361 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=640000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@c2c309: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-005', 'Produk E', 580000)) - start 
2016-08-09 20:38:55,361 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=640000) - start 
2016-08-09 20:38:55,362 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:55,362 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:55,364 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=5) - start 
2016-08-09 20:38:55,364 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=id) - start 
2016-08-09 20:38:55,364 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start 
2016-08-09 20:38:55,364 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=5) - start 
2016-08-09 20:38:55,364 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - executeBatch() - start 
2016-08-09 20:38:55,364 DEBUG o.d.d.s.SimplePreparedStatement - executeBatch() - start 
2016-08-09 20:38:55,364 DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start 
2016-08-09 20:38:55,365 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - clearBatch() - start 
2016-08-09 20:38:55,365 DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start 
2016-08-09 20:38:55,365 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - close() - start 
2016-08-09 20:38:55,365 DEBUG o.d.d.s.AbstractPreparedBatchStatement - close() - start 
2016-08-09 20:38:55,383 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' 
2016-08-09 20:38:55,398 DEBUG o.s.t.a.AnnotationTransactionAttributeSource - Adding transactional method 'ProdukServiceImpl.findProdukById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; '' 
2016-08-09 20:38:55,400 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-09 20:38:55,402 DEBUG o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.agung.template.springjpa.service.impl.ProdukServiceImpl.findProdukById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; '' 
2016-08-09 20:38:55,403 DEBUG o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@17c8c7e] for JPA transaction 
2016-08-09 20:38:55,406 DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin 
2016-08-09 20:38:55,406 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection 
2016-08-09 20:38:55,456 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection 
2016-08-09 20:38:55,456 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: true 
2016-08-09 20:38:55,456 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - disabling autocommit 
2016-08-09 20:38:55,460 DEBUG o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5073ab] 
2016-08-09 20:38:55,466 DEBUG o.s.d.r.c.s.TransactionalRepositoryProxyPostProcessor$CustomAnnotationTransactionAttributeSource - Adding transactional method 'findOne' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; '' 
2016-08-09 20:38:55,466 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-09 20:38:55,466 DEBUG o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@17c8c7e] for JPA transaction 
2016-08-09 20:38:55,466 DEBUG o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction 
2016-08-09 20:38:55,467 DEBUG o.s.d.j.r.s.CrudMethodMetadataPostProcessor$ThreadBoundTargetSource - Initializing lazy target object 
2016-08-09 20:38:55,484 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:38:55,488 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [p-002] 
2016-08-09 20:38:55,494 DEBUG o.h.l.p.e.p.i.ResultSetProcessorImpl - Starting ResultSet row #0 
2016-08-09 20:38:55,495 DEBUG o.h.l.p.e.p.i.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified 
2016-08-09 20:38:55,507 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([harga2_0_0_] : [NUMERIC]) - [375000.00] 
2016-08-09 20:38:55,507 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([kode_pro3_0_0_] : [VARCHAR]) - [produk-002] 
2016-08-09 20:38:55,508 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([nama_pro4_0_0_] : [VARCHAR]) - [Produk B] 
2016-08-09 20:38:55,512 DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.agung.template.springjpa.entity.Produk#p-002] 
2016-08-09 20:38:55,515 DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.agung.template.springjpa.entity.Produk#p-002] 
2016-08-09 20:38:55,519 DEBUG o.h.l.e.p.AbstractLoadPlanBasedEntityLoader - Done entity load : com.agung.template.springjpa.entity.Produk#p-002 
2016-08-09 20:38:55,520 DEBUG o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit 
2016-08-09 20:38:55,520 DEBUG o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@17c8c7e] 
2016-08-09 20:38:55,520 DEBUG o.h.e.t.spi.AbstractTransactionImpl - committing 
2016-08-09 20:38:55,522 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - committed JDBC Connection 
2016-08-09 20:38:55,522 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - re-enabling autocommit 
2016-08-09 20:38:55,524 DEBUG o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@17c8c7e] after transaction 
2016-08-09 20:38:55,524 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-09 20:38:55,524 DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection 
2016-08-09 20:38:55,524 DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection 
2016-08-09 20:38:55,526 DEBUG o.s.t.c.s.DirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = com.agung.template.springjpa.produktest.ProdukDaoTest@3fc542, testMethod = testFindProdukById@ProdukDaoTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false]. 
2016-08-09 20:38:55,527 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-09 20:38:55,527 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-09 20:38:55,528 DEBUG o.s.t.c.s.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = com.agung.template.springjpa.produktest.ProdukDaoTest@447c76, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]. 
2016-08-09 20:38:55,528 DEBUG o.s.t.c.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]] 
2016-08-09 20:38:55,528 DEBUG o.s.test.context.cache - Spring test ApplicationContext cache statistics: [ContextCache@ee53dc size = 1, hitCount = 1, missCount = 1, parentContextCount = 0] 
2016-08-09 20:38:55,528 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'com.agung.template.springjpa.produktest.ProdukDaoTest': AutowiredFieldElement for private com.agung.template.springjpa.service.ProdukService com.agung.template.springjpa.produktest.ProdukDaoTest.pService 
2016-08-09 20:38:55,528 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'produkService' 
2016-08-09 20:38:55,528 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'com.agung.template.springjpa.produktest.ProdukDaoTest': AutowiredFieldElement for private javax.sql.DataSource com.agung.template.springjpa.produktest.ProdukDaoTest.ds 
2016-08-09 20:38:55,528 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource' 
2016-08-09 20:38:55,529 DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null] 
2016-08-09 20:38:55,529 DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null] 
2016-08-09 20:38:55,529 DEBUG o.d.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start 
2016-08-09 20:38:55,529 DEBUG o.d.dataset.xml.FlatXmlProducer - produce() - start 
2016-08-09 20:38:55,530 DEBUG o.d.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@fc097e, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@40c151) - start 
2016-08-09 20:38:55,530 DEBUG o.d.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@fc097e, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@40c151) - start 
2016-08-09 20:38:55,531 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@15b5fa7) - start 
2016-08-09 20:38:55,531 DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start 
2016-08-09 20:38:55,531 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@15b5fa7) - start 
2016-08-09 20:38:55,531 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,531 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:55,531 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,531 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,531 DEBUG o.d.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@15b5fa7) - start 
2016-08-09 20:38:55,531 DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)]) - start 
2016-08-09 20:38:55,532 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-09 20:38:55,532 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,532 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,532 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-09 20:38:55,532 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-09 20:38:55,532 DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-09 20:38:55,532 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,532 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,532 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,532 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,532 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,532 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,532 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,532 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,532 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,532 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,533 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-001) - start 
2016-08-09 20:38:55,533 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-001) - start 
2016-08-09 20:38:55,533 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:55,533 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@15b5fa7) - start 
2016-08-09 20:38:55,533 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,533 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,533 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,533 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:55,533 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,533 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,533 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,533 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,533 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,533 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,533 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,533 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,533 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,533 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,533 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,533 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,533 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,533 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,534 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,534 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-002) - start 
2016-08-09 20:38:55,534 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-002) - start 
2016-08-09 20:38:55,534 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:55,534 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@15b5fa7) - start 
2016-08-09 20:38:55,534 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,534 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,534 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,534 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:55,534 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,536 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,536 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,536 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,536 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,536 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,536 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,536 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,536 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,536 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,536 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,536 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,536 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,536 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,536 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,536 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-003) - start 
2016-08-09 20:38:55,536 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-003) - start 
2016-08-09 20:38:55,536 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:55,537 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@15b5fa7) - start 
2016-08-09 20:38:55,537 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,537 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,537 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,537 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:55,537 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,537 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,537 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,537 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,537 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,537 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,537 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,537 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,537 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,537 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,537 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,537 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,537 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,539 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,542 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,542 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-004) - start 
2016-08-09 20:38:55,542 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-004) - start 
2016-08-09 20:38:55,542 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:55,542 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@15b5fa7) - start 
2016-08-09 20:38:55,542 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,542 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,542 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,542 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:55,542 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,542 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,542 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,542 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,542 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,542 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,543 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,543 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,543 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,543 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,543 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,543 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,543 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,543 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,543 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,543 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-005) - start 
2016-08-09 20:38:55,543 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-005) - start 
2016-08-09 20:38:55,543 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:55,543 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start 
2016-08-09 20:38:55,543 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,543 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,543 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,543 DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start 
2016-08-09 20:38:55,543 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,543 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,543 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-09 20:38:55,543 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,544 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,544 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-09 20:38:55,544 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-09 20:38:55,544 DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start 
2016-08-09 20:38:55,544 DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[m_produk], _tableMap={M_PRODUK=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]}, _caseSensitiveTableNames=false] 
2016-08-09 20:38:55,544 DEBUG o.d.database.DatabaseConnection - Database connection info: 
	database product name=MySQL
	database version=5.6.22-log
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
	jdbc driver major version=5
	jdbc driver minor version=1
 
2016-08-09 20:38:55,544 DEBUG o.d.database.DatabaseConnection - validateSchema(validateStrict=false) - start 
2016-08-09 20:38:55,544 DEBUG o.d.database.DatabaseConnection - Schema is null. Nothing to validate. 
2016-08-09 20:38:55,544 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-09 20:38:55,544 DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start 
2016-08-09 20:38:55,544 DEBUG o.d.dataset.OrderedTableNameMap - orderedValues() - start 
2016-08-09 20:38:55,544 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,544 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,544 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-09 20:38:55,544 DEBUG org.dbunit.dataset.CompositeDataSet - addTable(newTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], tableList=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[], _tableMap={}, _caseSensitiveTableNames=false], combine=true) - start 
2016-08-09 20:38:55,545 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,545 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,545 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-09 20:38:55,545 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,545 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,545 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-09 20:38:55,545 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-09 20:38:55,546 DEBUG o.d.dataset.OrderedTableNameMap - orderedValues() - start 
2016-08-09 20:38:55,546 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,546 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,546 DEBUG o.d.operation.CompositeOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=null], , dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-09 20:38:55,547 DEBUG o.d.operation.DeleteAllOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-09 20:38:55,547 DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start 
2016-08-09 20:38:55,547 DEBUG o.d.d.s.PreparedStatementFactory - createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,548 DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,549 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-09 20:38:55,549 DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start 
2016-08-09 20:38:55,549 DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start 
2016-08-09 20:38:55,549 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-09 20:38:55,549 DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=m_produk) - start 
2016-08-09 20:38:55,549 DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start 
2016-08-09 20:38:55,549 DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database... 
2016-08-09 20:38:55,558 DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=MySQL
	database version=5.6.22-log
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
	jdbc driver major version=5
	jdbc driver minor version=1
 
2016-08-09 20:38:55,558 DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=org.apache.commons.dbcp.DelegatingResultSet@11f1eaf 
2016-08-09 20:38:55,558 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}]) - start 
2016-08-09 20:38:55,558 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:55,559 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=berita, escapePattern=null) - start 
2016-08-09 20:38:55,559 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=berita, object=null) - start 
2016-08-09 20:38:55,559 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=berita) - start 
2016-08-09 20:38:55,559 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=berita) - end - result=BERITA 
2016-08-09 20:38:55,559 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=BERITA) - start 
2016-08-09 20:38:55,559 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=BERITA) - end - result=BERITA 
2016-08-09 20:38:55,559 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}]) - start 
2016-08-09 20:38:55,559 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:55,560 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=komentar, escapePattern=null) - start 
2016-08-09 20:38:55,563 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=komentar, object=null) - start 
2016-08-09 20:38:55,563 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar) - start 
2016-08-09 20:38:55,563 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar) - end - result=KOMENTAR 
2016-08-09 20:38:55,563 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR) - start 
2016-08-09 20:38:55,563 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR) - end - result=KOMENTAR 
2016-08-09 20:38:55,563 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}]) - start 
2016-08-09 20:38:55,563 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:55,563 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=komentar_berita, escapePattern=null) - start 
2016-08-09 20:38:55,563 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=komentar_berita, object=null) - start 
2016-08-09 20:38:55,563 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar_berita) - start 
2016-08-09 20:38:55,563 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar_berita) - end - result=KOMENTAR_BERITA 
2016-08-09 20:38:55,563 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR_BERITA) - start 
2016-08-09 20:38:55,563 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR_BERITA) - end - result=KOMENTAR_BERITA 
2016-08-09 20:38:55,563 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}]) - start 
2016-08-09 20:38:55,563 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:55,563 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-09 20:38:55,563 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=null) - start 
2016-08-09 20:38:55,563 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,563 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,564 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-09 20:38:55,564 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-09 20:38:55,564 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}]) - start 
2016-08-09 20:38:55,564 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:55,564 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=mahasiswa, escapePattern=null) - start 
2016-08-09 20:38:55,564 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=mahasiswa, object=null) - start 
2016-08-09 20:38:55,564 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=mahasiswa) - start 
2016-08-09 20:38:55,564 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=mahasiswa) - end - result=MAHASISWA 
2016-08-09 20:38:55,564 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=MAHASISWA) - start 
2016-08-09 20:38:55,564 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=MAHASISWA) - end - result=MAHASISWA 
2016-08-09 20:38:55,564 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}]) - start 
2016-08-09 20:38:55,564 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:55,564 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_menu, escapePattern=null) - start 
2016-08-09 20:38:55,564 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_menu, object=null) - start 
2016-08-09 20:38:55,564 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_menu) - start 
2016-08-09 20:38:55,564 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_menu) - end - result=T_MENU 
2016-08-09 20:38:55,565 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_MENU) - start 
2016-08-09 20:38:55,565 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_MENU) - end - result=T_MENU 
2016-08-09 20:38:55,565 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}]) - start 
2016-08-09 20:38:55,565 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:55,565 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_permission, escapePattern=null) - start 
2016-08-09 20:38:55,565 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_permission, object=null) - start 
2016-08-09 20:38:55,565 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_permission) - start 
2016-08-09 20:38:55,565 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_permission) - end - result=T_PERMISSION 
2016-08-09 20:38:55,565 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_PERMISSION) - start 
2016-08-09 20:38:55,565 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_PERMISSION) - end - result=T_PERMISSION 
2016-08-09 20:38:55,565 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}]) - start 
2016-08-09 20:38:55,567 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:55,567 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_role, escapePattern=null) - start 
2016-08-09 20:38:55,567 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_role, object=null) - start 
2016-08-09 20:38:55,567 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_role) - start 
2016-08-09 20:38:55,567 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_role) - end - result=T_ROLE 
2016-08-09 20:38:55,567 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_ROLE) - start 
2016-08-09 20:38:55,567 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_ROLE) - end - result=T_ROLE 
2016-08-09 20:38:55,567 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}]) - start 
2016-08-09 20:38:55,567 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:55,567 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_user, escapePattern=null) - start 
2016-08-09 20:38:55,567 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_user, object=null) - start 
2016-08-09 20:38:55,567 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_user) - start 
2016-08-09 20:38:55,567 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_user) - end - result=T_USER 
2016-08-09 20:38:55,567 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_USER) - start 
2016-08-09 20:38:55,569 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_USER) - end - result=T_USER 
2016-08-09 20:38:55,569 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,569 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,569 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,569 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,569 DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=m_produk (dbIdentifierQuoteString=`) 
2016-08-09 20:38:55,569 DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'm_produk' exists in schema 'null' ... 
2016-08-09 20:38:55,571 DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.apache.commons.dbcp.DelegatingResultSet@ec7116) - start 
2016-08-09 20:38:55,571 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:55,620 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:38:55,620 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>id 
2016-08-09 20:38:55,620 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=id) - start 
2016-08-09 20:38:55,620 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-09 20:38:55,620 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-09 20:38:55,620 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,620 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-09 20:38:55,620 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-09 20:38:55,621 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>harga 
2016-08-09 20:38:55,621 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=3 , sqlTypeName=DECIMAL, tableName=m_produk, columnName=harga) - start 
2016-08-09 20:38:55,621 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=3, sqlTypeName=DECIMAL) - start 
2016-08-09 20:38:55,621 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=3) - start 
2016-08-09 20:38:55,621 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,621 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,621 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,621 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,621 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,621 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,621 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,621 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,621 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,621 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-09 20:38:55,621 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-09 20:38:55,621 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>kode_produk 
2016-08-09 20:38:55,621 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=kode_produk) - start 
2016-08-09 20:38:55,621 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-09 20:38:55,621 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-09 20:38:55,621 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,621 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-09 20:38:55,621 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-09 20:38:55,621 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>nama_produk 
2016-08-09 20:38:55,621 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=nama_produk) - start 
2016-08-09 20:38:55,621 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-09 20:38:55,621 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-09 20:38:55,621 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,621 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-09 20:38:55,621 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-09 20:38:55,621 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start 
2016-08-09 20:38:55,621 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeyNames() - start 
2016-08-09 20:38:55,624 DEBUG o.d.database.DatabaseTableMetaData - getName() - start 
2016-08-09 20:38:55,625 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:55,625 DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[id], columns=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)]) - start 
2016-08-09 20:38:55,625 DEBUG org.dbunit.dataset.Columns - getColumn(columnName=id, columns=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)]) - start 
2016-08-09 20:38:55,571 DEBUG o.d.dataset.OrderedTableNameMap - update(tableName=m_produk, object=table=m_produk, cols=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)], pk=[(id, VARCHAR, noNulls)]) - start 
2016-08-09 20:38:55,625 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,625 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,625 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,625 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,625 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=m_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,626 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:55,626 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-09 20:38:55,626 DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from m_produk) - start 
2016-08-09 20:38:55,626 DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from m_produk 
2016-08-09 20:38:55,626 DEBUG o.d.d.statement.SimpleStatement - executeBatch() - start 
2016-08-09 20:38:55,626 DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from m_produk 
2016-08-09 20:38:55,640 DEBUG o.d.d.statement.SimpleStatement - clearBatch() - start 
2016-08-09 20:38:55,640 DEBUG o.d.d.s.AbstractBatchStatement - close() - start 
2016-08-09 20:38:55,640 DEBUG o.d.o.AbstractBatchOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-09 20:38:55,644 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-09 20:38:55,644 DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start 
2016-08-09 20:38:55,644 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-09 20:38:55,644 DEBUG o.d.o.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-09 20:38:55,644 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-09 20:38:55,644 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,644 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,644 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,644 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,644 DEBUG o.d.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-09 20:38:55,647 DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start 
2016-08-09 20:38:55,648 DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=m_produk) - start 
2016-08-09 20:38:55,648 DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start 
2016-08-09 20:38:55,648 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,648 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,648 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,648 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,648 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,648 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:55,648 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:55,648 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,648 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:55,648 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,648 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:55,648 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,695 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:55,695 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start 
2016-08-09 20:38:55,695 DEBUG o.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=0) - start 
2016-08-09 20:38:55,695 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-09 20:38:55,695 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,695 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,695 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,695 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,696 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=kode_produk) - start 
2016-08-09 20:38:55,696 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,696 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,696 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,696 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,696 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=nama_produk) - start 
2016-08-09 20:38:55,696 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,696 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,697 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,697 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,697 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=harga) - start 
2016-08-09 20:38:55,697 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,697 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,697 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,697 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,697 DEBUG o.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=m_produk, columns=[(id, VARCHAR, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls), (harga, DECIMAL, noNulls)], keys=[(id, VARCHAR, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,698 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=m_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,699 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:55,699 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-09 20:38:55,699 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=id, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,699 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:55,699 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=id, escapePattern=null) - start 
2016-08-09 20:38:55,699 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=kode_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,703 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:55,703 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=kode_produk, escapePattern=null) - start 
2016-08-09 20:38:55,703 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=nama_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,703 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:55,703 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=nama_produk, escapePattern=null) - start 
2016-08-09 20:38:55,703 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=harga, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,704 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:55,704 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=harga, escapePattern=null) - start 
2016-08-09 20:38:55,705 DEBUG o.d.d.s.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into m_produk (id, kode_produk, nama_produk, harga) values (?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,705 DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@aee2a2}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,713 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-09 20:38:55,714 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,714 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,714 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,714 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,714 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-001, dataType=VARCHAR) - start 
2016-08-09 20:38:55,714 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-001, dataType=VARCHAR) - start 
2016-08-09 20:38:55,714 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-001, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-09 20:38:55,714 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-001) - start 
2016-08-09 20:38:55,714 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-001) - start 
2016-08-09 20:38:55,714 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=kode_produk) - start 
2016-08-09 20:38:55,714 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,714 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,714 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,714 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,714 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-001, dataType=VARCHAR) - start 
2016-08-09 20:38:55,714 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-001, dataType=VARCHAR) - start 
2016-08-09 20:38:55,714 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-001, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-09 20:38:55,714 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-001) - start 
2016-08-09 20:38:55,714 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-001) - start 
2016-08-09 20:38:55,714 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=nama_produk) - start 
2016-08-09 20:38:55,714 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,715 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,715 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,715 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,715 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk A, dataType=VARCHAR) - start 
2016-08-09 20:38:55,715 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk A, dataType=VARCHAR) - start 
2016-08-09 20:38:55,715 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk A, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-09 20:38:55,715 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk A) - start 
2016-08-09 20:38:55,715 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk A) - start 
2016-08-09 20:38:55,715 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=harga) - start 
2016-08-09 20:38:55,715 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,715 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,715 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,715 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,715 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=250000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,715 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=250000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,715 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=250000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', 'Produk A', ** NOT SPECIFIED **)) - start 
2016-08-09 20:38:55,715 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=250000) - start 
2016-08-09 20:38:55,715 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:55,715 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:55,717 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=1) - start 
2016-08-09 20:38:55,717 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start 
2016-08-09 20:38:55,717 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,718 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,718 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,718 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,718 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=kode_produk) - start 
2016-08-09 20:38:55,718 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,718 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,718 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,718 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,718 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=nama_produk) - start 
2016-08-09 20:38:55,718 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,718 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,718 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,718 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,718 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=harga) - start 
2016-08-09 20:38:55,718 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,718 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,718 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,718 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,718 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start 
2016-08-09 20:38:55,718 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,718 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,718 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,718 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,718 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-002, dataType=VARCHAR) - start 
2016-08-09 20:38:55,718 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-002, dataType=VARCHAR) - start 
2016-08-09 20:38:55,718 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-002, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', 'Produk A', 250000)) - start 
2016-08-09 20:38:55,719 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-002) - start 
2016-08-09 20:38:55,719 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-002) - start 
2016-08-09 20:38:55,719 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=kode_produk) - start 
2016-08-09 20:38:55,719 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,719 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,719 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,719 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,719 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-002, dataType=VARCHAR) - start 
2016-08-09 20:38:55,719 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-002, dataType=VARCHAR) - start 
2016-08-09 20:38:55,719 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-002, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-001', 'Produk A', 250000)) - start 
2016-08-09 20:38:55,719 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-002) - start 
2016-08-09 20:38:55,719 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-002) - start 
2016-08-09 20:38:55,719 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=nama_produk) - start 
2016-08-09 20:38:55,719 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,719 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,719 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,719 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,719 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk B, dataType=VARCHAR) - start 
2016-08-09 20:38:55,719 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk B, dataType=VARCHAR) - start 
2016-08-09 20:38:55,719 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk B, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk A', 250000)) - start 
2016-08-09 20:38:55,719 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk B) - start 
2016-08-09 20:38:55,720 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk B) - start 
2016-08-09 20:38:55,720 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=harga) - start 
2016-08-09 20:38:55,720 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,720 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,720 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,720 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,720 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=375000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,720 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=375000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,720 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=375000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk B', 250000)) - start 
2016-08-09 20:38:55,720 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=375000) - start 
2016-08-09 20:38:55,720 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:55,720 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:55,723 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=2) - start 
2016-08-09 20:38:55,727 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start 
2016-08-09 20:38:55,727 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,727 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,727 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,727 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,727 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=kode_produk) - start 
2016-08-09 20:38:55,728 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,728 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,728 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,728 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,728 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=nama_produk) - start 
2016-08-09 20:38:55,728 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,728 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,728 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,728 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,728 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=harga) - start 
2016-08-09 20:38:55,728 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,728 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,728 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,728 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,728 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start 
2016-08-09 20:38:55,728 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,728 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,728 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,728 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,728 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-003, dataType=VARCHAR) - start 
2016-08-09 20:38:55,728 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-003, dataType=VARCHAR) - start 
2016-08-09 20:38:55,728 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-003, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk B', 375000)) - start 
2016-08-09 20:38:55,732 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-003) - start 
2016-08-09 20:38:55,732 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-003) - start 
2016-08-09 20:38:55,733 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=kode_produk) - start 
2016-08-09 20:38:55,733 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,733 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,733 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,733 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,733 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-003, dataType=VARCHAR) - start 
2016-08-09 20:38:55,733 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-003, dataType=VARCHAR) - start 
2016-08-09 20:38:55,733 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-003, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-002', 'Produk B', 375000)) - start 
2016-08-09 20:38:55,733 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-003) - start 
2016-08-09 20:38:55,733 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-003) - start 
2016-08-09 20:38:55,733 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=nama_produk) - start 
2016-08-09 20:38:55,733 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,733 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,733 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,733 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,733 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk C, dataType=VARCHAR) - start 
2016-08-09 20:38:55,733 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk C, dataType=VARCHAR) - start 
2016-08-09 20:38:55,733 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk C, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk B', 375000)) - start 
2016-08-09 20:38:55,733 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk C) - start 
2016-08-09 20:38:55,733 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk C) - start 
2016-08-09 20:38:55,733 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=harga) - start 
2016-08-09 20:38:55,733 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,733 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,734 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,734 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,734 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=420000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,734 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=420000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,734 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=420000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk C', 375000)) - start 
2016-08-09 20:38:55,734 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=420000) - start 
2016-08-09 20:38:55,734 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:55,734 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:55,736 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=3) - start 
2016-08-09 20:38:55,737 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start 
2016-08-09 20:38:55,737 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,737 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,737 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,737 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,737 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=kode_produk) - start 
2016-08-09 20:38:55,737 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,737 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,737 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,737 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,737 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=nama_produk) - start 
2016-08-09 20:38:55,737 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,737 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,737 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,737 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,737 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=harga) - start 
2016-08-09 20:38:55,737 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,737 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,737 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,737 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,737 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start 
2016-08-09 20:38:55,737 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,737 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,737 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,737 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,737 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-004, dataType=VARCHAR) - start 
2016-08-09 20:38:55,737 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-004, dataType=VARCHAR) - start 
2016-08-09 20:38:55,737 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-004, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk C', 420000)) - start 
2016-08-09 20:38:55,738 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-004) - start 
2016-08-09 20:38:55,738 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-004) - start 
2016-08-09 20:38:55,738 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=kode_produk) - start 
2016-08-09 20:38:55,738 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,738 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,738 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,738 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,738 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-004, dataType=VARCHAR) - start 
2016-08-09 20:38:55,738 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-004, dataType=VARCHAR) - start 
2016-08-09 20:38:55,738 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-004, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-003', 'Produk C', 420000)) - start 
2016-08-09 20:38:55,738 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-004) - start 
2016-08-09 20:38:55,738 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-004) - start 
2016-08-09 20:38:55,738 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=nama_produk) - start 
2016-08-09 20:38:55,738 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,738 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,738 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,738 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,738 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk D, dataType=VARCHAR) - start 
2016-08-09 20:38:55,738 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk D, dataType=VARCHAR) - start 
2016-08-09 20:38:55,738 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk D, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk C', 420000)) - start 
2016-08-09 20:38:55,739 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk D) - start 
2016-08-09 20:38:55,739 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk D) - start 
2016-08-09 20:38:55,739 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=harga) - start 
2016-08-09 20:38:55,739 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,739 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,739 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,739 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,739 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=580000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,739 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=580000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,739 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=580000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk D', 420000)) - start 
2016-08-09 20:38:55,739 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=580000) - start 
2016-08-09 20:38:55,739 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:55,739 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:55,751 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=4) - start 
2016-08-09 20:38:55,751 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start 
2016-08-09 20:38:55,751 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,751 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,751 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,751 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,751 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=kode_produk) - start 
2016-08-09 20:38:55,751 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,751 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,751 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,751 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,751 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=nama_produk) - start 
2016-08-09 20:38:55,752 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,752 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,752 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,752 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,752 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=harga) - start 
2016-08-09 20:38:55,752 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,752 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,752 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,752 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,752 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start 
2016-08-09 20:38:55,752 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,752 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,752 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,752 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,752 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-005, dataType=VARCHAR) - start 
2016-08-09 20:38:55,752 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-005, dataType=VARCHAR) - start 
2016-08-09 20:38:55,752 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-005, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk D', 580000)) - start 
2016-08-09 20:38:55,752 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-005) - start 
2016-08-09 20:38:55,752 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-005) - start 
2016-08-09 20:38:55,752 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=kode_produk) - start 
2016-08-09 20:38:55,753 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,754 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,754 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,754 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,754 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-005, dataType=VARCHAR) - start 
2016-08-09 20:38:55,754 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-005, dataType=VARCHAR) - start 
2016-08-09 20:38:55,754 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-005, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-004', 'Produk D', 580000)) - start 
2016-08-09 20:38:55,754 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-005) - start 
2016-08-09 20:38:55,754 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-005) - start 
2016-08-09 20:38:55,754 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=nama_produk) - start 
2016-08-09 20:38:55,754 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,754 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,754 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,754 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,754 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk E, dataType=VARCHAR) - start 
2016-08-09 20:38:55,755 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk E, dataType=VARCHAR) - start 
2016-08-09 20:38:55,755 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk E, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-005', 'Produk D', 580000)) - start 
2016-08-09 20:38:55,755 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk E) - start 
2016-08-09 20:38:55,755 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk E) - start 
2016-08-09 20:38:55,755 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=harga) - start 
2016-08-09 20:38:55,755 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,755 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,755 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,755 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,755 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=640000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,755 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=640000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,755 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=640000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@1d7ccfe: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-005', 'Produk E', 580000)) - start 
2016-08-09 20:38:55,755 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=640000) - start 
2016-08-09 20:38:55,756 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:55,756 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:55,758 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=5) - start 
2016-08-09 20:38:55,758 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=id) - start 
2016-08-09 20:38:55,758 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start 
2016-08-09 20:38:55,758 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=5) - start 
2016-08-09 20:38:55,758 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - executeBatch() - start 
2016-08-09 20:38:55,758 DEBUG o.d.d.s.SimplePreparedStatement - executeBatch() - start 
2016-08-09 20:38:55,758 DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start 
2016-08-09 20:38:55,758 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - clearBatch() - start 
2016-08-09 20:38:55,758 DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start 
2016-08-09 20:38:55,758 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - close() - start 
2016-08-09 20:38:55,758 DEBUG o.d.d.s.AbstractPreparedBatchStatement - close() - start 
2016-08-09 20:38:55,759 DEBUG o.s.t.a.AnnotationTransactionAttributeSource - Adding transactional method 'ProdukServiceImpl.countAllProduk' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; '' 
2016-08-09 20:38:55,759 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-09 20:38:55,759 DEBUG o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.agung.template.springjpa.service.impl.ProdukServiceImpl.countAllProduk]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; '' 
2016-08-09 20:38:55,759 DEBUG o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@14ade6e] for JPA transaction 
2016-08-09 20:38:55,759 DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin 
2016-08-09 20:38:55,759 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection 
2016-08-09 20:38:55,807 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection 
2016-08-09 20:38:55,808 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: true 
2016-08-09 20:38:55,808 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - disabling autocommit 
2016-08-09 20:38:55,808 DEBUG o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6cb891] 
2016-08-09 20:38:55,809 DEBUG o.s.d.r.c.s.TransactionalRepositoryProxyPostProcessor$CustomAnnotationTransactionAttributeSource - Adding transactional method 'count' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; '' 
2016-08-09 20:38:55,809 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-09 20:38:55,809 DEBUG o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@14ade6e] for JPA transaction 
2016-08-09 20:38:55,809 DEBUG o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction 
2016-08-09 20:38:55,810 DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select count(*) from com.agung.template.springjpa.entity.Produk x 
2016-08-09 20:38:55,812 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'agung'
       |     |  |  |  |  \-[IDENT] Node: 'template'
       |     |  |  |  \-[IDENT] Node: 'springjpa'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Produk'
       |     \-[ALIAS] Node: 'x'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[ROW_STAR] Node: '*'
 
2016-08-09 20:38:55,812 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-09 20:38:55,812 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select] 
2016-08-09 20:38:55,813 DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.agung.template.springjpa.entity.Produk (x) -> produk0_ 
2016-08-09 20:38:55,813 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select] 
2016-08-09 20:38:55,813 DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} m_produk produk0_ ) ) 
2016-08-09 20:38:55,814 DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [m_produk produk0_] 
2016-08-09 20:38:55,814 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select] 
2016-08-09 20:38:55,814 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (m_produk)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[x], fromElementByTableAlias=[produk0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'm_produk produk0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=x,role=null,tableName=m_produk,tableAlias=produk0_,origin=null,columns={,className=com.agung.template.springjpa.entity.Produk}}
 
2016-08-09 20:38:55,814 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-09 20:38:55,814 DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select count(*) from com.agung.template.springjpa.entity.Produk x 
2016-08-09 20:38:55,814 DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select count(*) as col_0_0_ from m_produk produk0_ 
2016-08-09 20:38:55,814 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-09 20:38:55,817 DEBUG org.hibernate.SQL - 
    select
        count(*) as col_0_0_ 
    from
        m_produk produk0_ 
2016-08-09 20:38:55,819 DEBUG org.hibernate.loader.Loader - Result set row: 0 
2016-08-09 20:38:55,819 DEBUG org.hibernate.loader.Loader - Result row:  
2016-08-09 20:38:55,820 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([col_0_0_] : [BIGINT]) - [5] 
2016-08-09 20:38:55,825 DEBUG o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit 
2016-08-09 20:38:55,825 DEBUG o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@14ade6e] 
2016-08-09 20:38:55,825 DEBUG o.h.e.t.spi.AbstractTransactionImpl - committing 
2016-08-09 20:38:55,826 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - committed JDBC Connection 
2016-08-09 20:38:55,826 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - re-enabling autocommit 
2016-08-09 20:38:55,826 DEBUG o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@14ade6e] after transaction 
2016-08-09 20:38:55,826 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-09 20:38:55,827 DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection 
2016-08-09 20:38:55,827 DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection 
2016-08-09 20:38:55,827 DEBUG o.s.t.c.s.DirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = com.agung.template.springjpa.produktest.ProdukDaoTest@447c76, testMethod = testCountAllProduk@ProdukDaoTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false]. 
2016-08-09 20:38:55,827 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-09 20:38:55,827 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-09 20:38:55,828 DEBUG o.s.t.c.s.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = com.agung.template.springjpa.produktest.ProdukDaoTest@16498e, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]. 
2016-08-09 20:38:55,829 DEBUG o.s.t.c.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]] 
2016-08-09 20:38:55,829 DEBUG o.s.test.context.cache - Spring test ApplicationContext cache statistics: [ContextCache@ee53dc size = 1, hitCount = 2, missCount = 1, parentContextCount = 0] 
2016-08-09 20:38:55,829 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'com.agung.template.springjpa.produktest.ProdukDaoTest': AutowiredFieldElement for private com.agung.template.springjpa.service.ProdukService com.agung.template.springjpa.produktest.ProdukDaoTest.pService 
2016-08-09 20:38:55,830 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'produkService' 
2016-08-09 20:38:55,830 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'com.agung.template.springjpa.produktest.ProdukDaoTest': AutowiredFieldElement for private javax.sql.DataSource com.agung.template.springjpa.produktest.ProdukDaoTest.ds 
2016-08-09 20:38:55,830 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource' 
2016-08-09 20:38:55,831 DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null] 
2016-08-09 20:38:55,831 DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null] 
2016-08-09 20:38:55,831 DEBUG o.d.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start 
2016-08-09 20:38:55,831 DEBUG o.d.dataset.xml.FlatXmlProducer - produce() - start 
2016-08-09 20:38:55,832 DEBUG o.d.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@12e0f78, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@f6c41) - start 
2016-08-09 20:38:55,832 DEBUG o.d.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@12e0f78, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@f6c41) - start 
2016-08-09 20:38:55,833 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@59d7b1) - start 
2016-08-09 20:38:55,834 DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start 
2016-08-09 20:38:55,834 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@59d7b1) - start 
2016-08-09 20:38:55,834 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,834 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:55,834 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,834 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,834 DEBUG o.d.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@59d7b1) - start 
2016-08-09 20:38:55,834 DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)]) - start 
2016-08-09 20:38:55,834 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-09 20:38:55,834 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,834 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,837 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-09 20:38:55,838 DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,838 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-001) - start 
2016-08-09 20:38:55,838 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-001) - start 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@59d7b1) - start 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,838 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,839 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-002) - start 
2016-08-09 20:38:55,839 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-002) - start 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@59d7b1) - start 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,839 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,840 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,840 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,840 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,840 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,840 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-003) - start 
2016-08-09 20:38:55,840 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-003) - start 
2016-08-09 20:38:55,840 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:55,840 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@59d7b1) - start 
2016-08-09 20:38:55,840 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,840 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,840 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,840 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:55,840 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,840 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,840 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,840 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,840 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,840 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,840 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,840 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,840 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,842 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,842 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,842 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,842 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,842 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,842 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,842 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-004) - start 
2016-08-09 20:38:55,842 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-004) - start 
2016-08-09 20:38:55,842 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:55,842 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@59d7b1) - start 
2016-08-09 20:38:55,842 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,842 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,843 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-005) - start 
2016-08-09 20:38:55,843 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-005) - start 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:55,843 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,844 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,844 DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start 
2016-08-09 20:38:55,844 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,844 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,844 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-09 20:38:55,844 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,844 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,844 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-09 20:38:55,844 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-09 20:38:55,844 DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start 
2016-08-09 20:38:55,844 DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[m_produk], _tableMap={M_PRODUK=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]}, _caseSensitiveTableNames=false] 
2016-08-09 20:38:55,844 DEBUG o.d.database.DatabaseConnection - Database connection info: 
	database product name=MySQL
	database version=5.6.22-log
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
	jdbc driver major version=5
	jdbc driver minor version=1
 
2016-08-09 20:38:55,845 DEBUG o.d.database.DatabaseConnection - validateSchema(validateStrict=false) - start 
2016-08-09 20:38:55,845 DEBUG o.d.database.DatabaseConnection - Schema is null. Nothing to validate. 
2016-08-09 20:38:55,845 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-09 20:38:55,845 DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start 
2016-08-09 20:38:55,845 DEBUG o.d.dataset.OrderedTableNameMap - orderedValues() - start 
2016-08-09 20:38:55,845 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,845 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,845 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-09 20:38:55,845 DEBUG org.dbunit.dataset.CompositeDataSet - addTable(newTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], tableList=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[], _tableMap={}, _caseSensitiveTableNames=false], combine=true) - start 
2016-08-09 20:38:55,845 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,845 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,845 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-09 20:38:55,845 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,845 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,845 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-09 20:38:55,845 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-09 20:38:55,845 DEBUG o.d.dataset.OrderedTableNameMap - orderedValues() - start 
2016-08-09 20:38:55,845 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,845 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,845 DEBUG o.d.operation.CompositeOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=null], , dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-09 20:38:55,846 DEBUG o.d.operation.DeleteAllOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-09 20:38:55,847 DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start 
2016-08-09 20:38:55,847 DEBUG o.d.d.s.PreparedStatementFactory - createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,848 DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,849 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-09 20:38:55,849 DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start 
2016-08-09 20:38:55,849 DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start 
2016-08-09 20:38:55,849 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-09 20:38:55,849 DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=m_produk) - start 
2016-08-09 20:38:55,849 DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start 
2016-08-09 20:38:55,849 DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database... 
2016-08-09 20:38:55,864 DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=MySQL
	database version=5.6.22-log
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
	jdbc driver major version=5
	jdbc driver minor version=1
 
2016-08-09 20:38:55,864 DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=org.apache.commons.dbcp.DelegatingResultSet@cb98a3 
2016-08-09 20:38:55,864 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}]) - start 
2016-08-09 20:38:55,864 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:55,864 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=berita, escapePattern=null) - start 
2016-08-09 20:38:55,864 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=berita, object=null) - start 
2016-08-09 20:38:55,864 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=berita) - start 
2016-08-09 20:38:55,864 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=berita) - end - result=BERITA 
2016-08-09 20:38:55,864 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=BERITA) - start 
2016-08-09 20:38:55,864 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=BERITA) - end - result=BERITA 
2016-08-09 20:38:55,864 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}]) - start 
2016-08-09 20:38:55,864 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:55,864 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=komentar, escapePattern=null) - start 
2016-08-09 20:38:55,864 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=komentar, object=null) - start 
2016-08-09 20:38:55,864 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar) - start 
2016-08-09 20:38:55,865 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar) - end - result=KOMENTAR 
2016-08-09 20:38:55,865 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR) - start 
2016-08-09 20:38:55,865 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR) - end - result=KOMENTAR 
2016-08-09 20:38:55,865 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}]) - start 
2016-08-09 20:38:55,865 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:55,865 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=komentar_berita, escapePattern=null) - start 
2016-08-09 20:38:55,865 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=komentar_berita, object=null) - start 
2016-08-09 20:38:55,865 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar_berita) - start 
2016-08-09 20:38:55,865 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar_berita) - end - result=KOMENTAR_BERITA 
2016-08-09 20:38:55,865 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR_BERITA) - start 
2016-08-09 20:38:55,865 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR_BERITA) - end - result=KOMENTAR_BERITA 
2016-08-09 20:38:55,865 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}]) - start 
2016-08-09 20:38:55,865 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:55,865 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-09 20:38:55,865 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=null) - start 
2016-08-09 20:38:55,865 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,865 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,865 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-09 20:38:55,865 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-09 20:38:55,865 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}]) - start 
2016-08-09 20:38:55,866 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:55,866 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=mahasiswa, escapePattern=null) - start 
2016-08-09 20:38:55,866 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=mahasiswa, object=null) - start 
2016-08-09 20:38:55,866 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=mahasiswa) - start 
2016-08-09 20:38:55,866 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=mahasiswa) - end - result=MAHASISWA 
2016-08-09 20:38:55,866 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=MAHASISWA) - start 
2016-08-09 20:38:55,866 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=MAHASISWA) - end - result=MAHASISWA 
2016-08-09 20:38:55,866 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}]) - start 
2016-08-09 20:38:55,866 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:55,866 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_menu, escapePattern=null) - start 
2016-08-09 20:38:55,866 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_menu, object=null) - start 
2016-08-09 20:38:55,866 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_menu) - start 
2016-08-09 20:38:55,866 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_menu) - end - result=T_MENU 
2016-08-09 20:38:55,866 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_MENU) - start 
2016-08-09 20:38:55,866 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_MENU) - end - result=T_MENU 
2016-08-09 20:38:55,866 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}]) - start 
2016-08-09 20:38:55,866 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:55,866 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_permission, escapePattern=null) - start 
2016-08-09 20:38:55,866 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_permission, object=null) - start 
2016-08-09 20:38:55,866 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_permission) - start 
2016-08-09 20:38:55,867 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_permission) - end - result=T_PERMISSION 
2016-08-09 20:38:55,867 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_PERMISSION) - start 
2016-08-09 20:38:55,867 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_PERMISSION) - end - result=T_PERMISSION 
2016-08-09 20:38:55,867 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}]) - start 
2016-08-09 20:38:55,867 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:55,867 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_role, escapePattern=null) - start 
2016-08-09 20:38:55,867 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_role, object=null) - start 
2016-08-09 20:38:55,867 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_role) - start 
2016-08-09 20:38:55,867 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_role) - end - result=T_ROLE 
2016-08-09 20:38:55,867 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_ROLE) - start 
2016-08-09 20:38:55,867 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_ROLE) - end - result=T_ROLE 
2016-08-09 20:38:55,867 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}]) - start 
2016-08-09 20:38:55,867 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:55,867 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_user, escapePattern=null) - start 
2016-08-09 20:38:55,867 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_user, object=null) - start 
2016-08-09 20:38:55,867 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_user) - start 
2016-08-09 20:38:55,867 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_user) - end - result=T_USER 
2016-08-09 20:38:55,867 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_USER) - start 
2016-08-09 20:38:55,867 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_USER) - end - result=T_USER 
2016-08-09 20:38:55,867 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,868 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,868 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,868 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,868 DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=m_produk (dbIdentifierQuoteString=`) 
2016-08-09 20:38:55,868 DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'm_produk' exists in schema 'null' ... 
2016-08-09 20:38:55,870 DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.apache.commons.dbcp.DelegatingResultSet@12f4a93) - start 
2016-08-09 20:38:55,870 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:55,908 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:38:55,908 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>id 
2016-08-09 20:38:55,908 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=id) - start 
2016-08-09 20:38:55,908 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-09 20:38:55,908 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-09 20:38:55,908 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,908 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-09 20:38:55,908 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-09 20:38:55,909 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>harga 
2016-08-09 20:38:55,909 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=3 , sqlTypeName=DECIMAL, tableName=m_produk, columnName=harga) - start 
2016-08-09 20:38:55,909 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=3, sqlTypeName=DECIMAL) - start 
2016-08-09 20:38:55,909 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=3) - start 
2016-08-09 20:38:55,909 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,909 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,909 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,909 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,909 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,909 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,909 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,909 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,909 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,909 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-09 20:38:55,909 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-09 20:38:55,909 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>kode_produk 
2016-08-09 20:38:55,909 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=kode_produk) - start 
2016-08-09 20:38:55,909 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-09 20:38:55,909 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-09 20:38:55,909 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,909 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-09 20:38:55,909 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-09 20:38:55,909 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>nama_produk 
2016-08-09 20:38:55,909 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=nama_produk) - start 
2016-08-09 20:38:55,909 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-09 20:38:55,909 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-09 20:38:55,909 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:55,909 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-09 20:38:55,909 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-09 20:38:55,909 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start 
2016-08-09 20:38:55,909 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeyNames() - start 
2016-08-09 20:38:55,911 DEBUG o.d.database.DatabaseTableMetaData - getName() - start 
2016-08-09 20:38:55,911 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:55,911 DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[id], columns=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)]) - start 
2016-08-09 20:38:55,911 DEBUG org.dbunit.dataset.Columns - getColumn(columnName=id, columns=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)]) - start 
2016-08-09 20:38:55,870 DEBUG o.d.dataset.OrderedTableNameMap - update(tableName=m_produk, object=table=m_produk, cols=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)], pk=[(id, VARCHAR, noNulls)]) - start 
2016-08-09 20:38:55,912 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,912 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,912 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,912 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,912 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=m_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,913 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:55,913 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-09 20:38:55,913 DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from m_produk) - start 
2016-08-09 20:38:55,913 DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from m_produk 
2016-08-09 20:38:55,913 DEBUG o.d.d.statement.SimpleStatement - executeBatch() - start 
2016-08-09 20:38:55,913 DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from m_produk 
2016-08-09 20:38:55,919 DEBUG o.d.d.statement.SimpleStatement - clearBatch() - start 
2016-08-09 20:38:55,919 DEBUG o.d.d.s.AbstractBatchStatement - close() - start 
2016-08-09 20:38:55,919 DEBUG o.d.o.AbstractBatchOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-09 20:38:55,920 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-09 20:38:55,920 DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start 
2016-08-09 20:38:55,920 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-09 20:38:55,920 DEBUG o.d.o.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-09 20:38:55,920 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-09 20:38:55,920 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,920 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,920 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,920 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,920 DEBUG o.d.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-09 20:38:55,922 DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start 
2016-08-09 20:38:55,923 DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=m_produk) - start 
2016-08-09 20:38:55,923 DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start 
2016-08-09 20:38:55,923 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,923 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,923 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:55,923 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:55,923 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,923 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:55,923 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:55,923 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,923 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:55,923 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,923 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:55,923 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,923 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:55,923 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start 
2016-08-09 20:38:55,923 DEBUG o.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=0) - start 
2016-08-09 20:38:55,923 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-09 20:38:55,923 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,923 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,923 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,923 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,923 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=kode_produk) - start 
2016-08-09 20:38:55,923 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,923 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,923 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,923 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,923 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=nama_produk) - start 
2016-08-09 20:38:55,924 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,924 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,924 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,924 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,924 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=harga) - start 
2016-08-09 20:38:55,924 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,924 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,924 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,924 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,924 DEBUG o.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=m_produk, columns=[(id, VARCHAR, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls), (harga, DECIMAL, noNulls)], keys=[(id, VARCHAR, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,925 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=m_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,928 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:55,929 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-09 20:38:55,929 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=id, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,930 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:55,930 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=id, escapePattern=null) - start 
2016-08-09 20:38:55,930 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=kode_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,932 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:55,933 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=kode_produk, escapePattern=null) - start 
2016-08-09 20:38:55,933 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=nama_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,935 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:55,935 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=nama_produk, escapePattern=null) - start 
2016-08-09 20:38:55,935 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=harga, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,937 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:55,937 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=harga, escapePattern=null) - start 
2016-08-09 20:38:55,937 DEBUG o.d.d.s.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into m_produk (id, kode_produk, nama_produk, harga) values (?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,941 DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@17bcfdc}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:55,943 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-09 20:38:55,943 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,943 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,943 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,943 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,943 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-001, dataType=VARCHAR) - start 
2016-08-09 20:38:55,943 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-001, dataType=VARCHAR) - start 
2016-08-09 20:38:55,943 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-001, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-09 20:38:55,943 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-001) - start 
2016-08-09 20:38:55,943 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-001) - start 
2016-08-09 20:38:55,943 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=kode_produk) - start 
2016-08-09 20:38:55,943 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,943 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,943 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,943 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,944 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-001, dataType=VARCHAR) - start 
2016-08-09 20:38:55,944 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-001, dataType=VARCHAR) - start 
2016-08-09 20:38:55,944 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-001, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-09 20:38:55,944 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-001) - start 
2016-08-09 20:38:55,944 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-001) - start 
2016-08-09 20:38:55,944 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=nama_produk) - start 
2016-08-09 20:38:55,944 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,944 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,944 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,944 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,944 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk A, dataType=VARCHAR) - start 
2016-08-09 20:38:55,944 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk A, dataType=VARCHAR) - start 
2016-08-09 20:38:55,944 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk A, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-09 20:38:55,944 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk A) - start 
2016-08-09 20:38:55,944 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk A) - start 
2016-08-09 20:38:55,944 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=harga) - start 
2016-08-09 20:38:55,944 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:55,944 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:55,944 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,944 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,945 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=250000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,945 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=250000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,945 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=250000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', 'Produk A', ** NOT SPECIFIED **)) - start 
2016-08-09 20:38:55,945 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=250000) - start 
2016-08-09 20:38:55,945 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:55,945 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:55,947 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=1) - start 
2016-08-09 20:38:55,948 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start 
2016-08-09 20:38:55,948 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,948 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,948 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,948 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,948 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=kode_produk) - start 
2016-08-09 20:38:55,948 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,948 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,948 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,948 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,948 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=nama_produk) - start 
2016-08-09 20:38:55,948 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,948 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,948 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,948 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,948 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=harga) - start 
2016-08-09 20:38:55,948 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,948 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,948 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,948 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,948 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start 
2016-08-09 20:38:55,948 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,948 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,948 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,948 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,948 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-002, dataType=VARCHAR) - start 
2016-08-09 20:38:55,948 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-002, dataType=VARCHAR) - start 
2016-08-09 20:38:55,948 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-002, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', 'Produk A', 250000)) - start 
2016-08-09 20:38:55,952 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-002) - start 
2016-08-09 20:38:55,953 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-002) - start 
2016-08-09 20:38:55,953 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=kode_produk) - start 
2016-08-09 20:38:55,953 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,953 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,953 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,953 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,953 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-002, dataType=VARCHAR) - start 
2016-08-09 20:38:55,953 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-002, dataType=VARCHAR) - start 
2016-08-09 20:38:55,953 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-002, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-001', 'Produk A', 250000)) - start 
2016-08-09 20:38:55,953 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-002) - start 
2016-08-09 20:38:55,953 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-002) - start 
2016-08-09 20:38:55,953 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=nama_produk) - start 
2016-08-09 20:38:55,953 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,953 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,953 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,953 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,953 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk B, dataType=VARCHAR) - start 
2016-08-09 20:38:55,953 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk B, dataType=VARCHAR) - start 
2016-08-09 20:38:55,953 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk B, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk A', 250000)) - start 
2016-08-09 20:38:55,953 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk B) - start 
2016-08-09 20:38:55,953 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk B) - start 
2016-08-09 20:38:55,953 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=harga) - start 
2016-08-09 20:38:55,953 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:55,953 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:55,957 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,957 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,957 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=375000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,957 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=375000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,958 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=375000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk B', 250000)) - start 
2016-08-09 20:38:55,958 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=375000) - start 
2016-08-09 20:38:55,958 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:55,958 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:55,963 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=2) - start 
2016-08-09 20:38:55,963 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start 
2016-08-09 20:38:55,963 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,963 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,963 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,963 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,963 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=kode_produk) - start 
2016-08-09 20:38:55,963 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,963 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,963 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,963 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,963 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=nama_produk) - start 
2016-08-09 20:38:55,963 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,963 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,963 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,963 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,963 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=harga) - start 
2016-08-09 20:38:55,963 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,963 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,963 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,963 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,963 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start 
2016-08-09 20:38:55,964 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,964 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,964 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,964 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,964 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-003, dataType=VARCHAR) - start 
2016-08-09 20:38:55,964 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-003, dataType=VARCHAR) - start 
2016-08-09 20:38:55,964 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-003, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk B', 375000)) - start 
2016-08-09 20:38:55,964 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-003) - start 
2016-08-09 20:38:55,964 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-003) - start 
2016-08-09 20:38:55,964 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=kode_produk) - start 
2016-08-09 20:38:55,964 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,964 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,964 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,964 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,964 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-003, dataType=VARCHAR) - start 
2016-08-09 20:38:55,964 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-003, dataType=VARCHAR) - start 
2016-08-09 20:38:55,964 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-003, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-002', 'Produk B', 375000)) - start 
2016-08-09 20:38:55,964 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-003) - start 
2016-08-09 20:38:55,964 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-003) - start 
2016-08-09 20:38:55,965 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=nama_produk) - start 
2016-08-09 20:38:55,965 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,965 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,965 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,965 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,965 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk C, dataType=VARCHAR) - start 
2016-08-09 20:38:55,965 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk C, dataType=VARCHAR) - start 
2016-08-09 20:38:55,965 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk C, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk B', 375000)) - start 
2016-08-09 20:38:55,965 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk C) - start 
2016-08-09 20:38:55,965 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk C) - start 
2016-08-09 20:38:55,965 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=harga) - start 
2016-08-09 20:38:55,965 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:55,965 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:55,965 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,965 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,965 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=420000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,965 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=420000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,965 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=420000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk C', 375000)) - start 
2016-08-09 20:38:55,965 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=420000) - start 
2016-08-09 20:38:55,965 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:55,965 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:55,969 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=3) - start 
2016-08-09 20:38:55,969 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start 
2016-08-09 20:38:55,969 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,969 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,969 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,969 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,969 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=kode_produk) - start 
2016-08-09 20:38:55,969 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,969 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,969 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,969 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,969 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=nama_produk) - start 
2016-08-09 20:38:55,970 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,970 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,970 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,970 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,970 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=harga) - start 
2016-08-09 20:38:55,970 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,970 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,970 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,970 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,970 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start 
2016-08-09 20:38:55,970 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,970 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,970 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,970 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,970 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-004, dataType=VARCHAR) - start 
2016-08-09 20:38:55,970 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-004, dataType=VARCHAR) - start 
2016-08-09 20:38:55,970 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-004, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk C', 420000)) - start 
2016-08-09 20:38:55,972 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-004) - start 
2016-08-09 20:38:55,972 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-004) - start 
2016-08-09 20:38:55,972 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=kode_produk) - start 
2016-08-09 20:38:55,972 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,972 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,972 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,972 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,972 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-004, dataType=VARCHAR) - start 
2016-08-09 20:38:55,972 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-004, dataType=VARCHAR) - start 
2016-08-09 20:38:55,972 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-004, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-003', 'Produk C', 420000)) - start 
2016-08-09 20:38:55,972 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-004) - start 
2016-08-09 20:38:55,972 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-004) - start 
2016-08-09 20:38:55,972 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=nama_produk) - start 
2016-08-09 20:38:55,973 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,973 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,973 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,973 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,973 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk D, dataType=VARCHAR) - start 
2016-08-09 20:38:55,973 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk D, dataType=VARCHAR) - start 
2016-08-09 20:38:55,973 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk D, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk C', 420000)) - start 
2016-08-09 20:38:55,973 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk D) - start 
2016-08-09 20:38:55,973 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk D) - start 
2016-08-09 20:38:55,973 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=harga) - start 
2016-08-09 20:38:55,973 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:55,973 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:55,973 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,973 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,973 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=580000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,973 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=580000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,973 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=580000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk D', 420000)) - start 
2016-08-09 20:38:55,973 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=580000) - start 
2016-08-09 20:38:55,973 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:55,973 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:55,988 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=4) - start 
2016-08-09 20:38:55,988 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start 
2016-08-09 20:38:55,988 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,988 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,988 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,988 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,988 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=kode_produk) - start 
2016-08-09 20:38:55,988 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,988 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,988 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,988 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,988 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=nama_produk) - start 
2016-08-09 20:38:55,988 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,988 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,988 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,988 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,988 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=harga) - start 
2016-08-09 20:38:55,989 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,989 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,989 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,989 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,989 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start 
2016-08-09 20:38:55,989 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,989 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,989 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,989 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:55,989 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-005, dataType=VARCHAR) - start 
2016-08-09 20:38:55,989 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-005, dataType=VARCHAR) - start 
2016-08-09 20:38:55,989 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-005, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk D', 580000)) - start 
2016-08-09 20:38:55,990 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-005) - start 
2016-08-09 20:38:55,992 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-005) - start 
2016-08-09 20:38:55,992 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=kode_produk) - start 
2016-08-09 20:38:55,992 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,992 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,992 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,992 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:55,992 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-005, dataType=VARCHAR) - start 
2016-08-09 20:38:55,992 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-005, dataType=VARCHAR) - start 
2016-08-09 20:38:55,992 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-005, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-004', 'Produk D', 580000)) - start 
2016-08-09 20:38:55,992 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-005) - start 
2016-08-09 20:38:55,992 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-005) - start 
2016-08-09 20:38:55,992 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=nama_produk) - start 
2016-08-09 20:38:55,992 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,993 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,993 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,993 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:55,993 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk E, dataType=VARCHAR) - start 
2016-08-09 20:38:55,993 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk E, dataType=VARCHAR) - start 
2016-08-09 20:38:55,993 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk E, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-005', 'Produk D', 580000)) - start 
2016-08-09 20:38:55,993 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk E) - start 
2016-08-09 20:38:55,993 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk E) - start 
2016-08-09 20:38:55,993 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=harga) - start 
2016-08-09 20:38:55,993 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:55,993 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:55,993 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,993 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:55,993 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=640000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,993 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=640000, dataType=DECIMAL) - start 
2016-08-09 20:38:55,993 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=640000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@e3fb94: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-005', 'Produk E', 580000)) - start 
2016-08-09 20:38:55,993 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=640000) - start 
2016-08-09 20:38:55,993 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:55,993 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:55,996 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=5) - start 
2016-08-09 20:38:55,996 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=id) - start 
2016-08-09 20:38:55,996 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start 
2016-08-09 20:38:55,996 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=5) - start 
2016-08-09 20:38:55,996 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - executeBatch() - start 
2016-08-09 20:38:55,996 DEBUG o.d.d.s.SimplePreparedStatement - executeBatch() - start 
2016-08-09 20:38:55,996 DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start 
2016-08-09 20:38:55,996 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - clearBatch() - start 
2016-08-09 20:38:55,996 DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start 
2016-08-09 20:38:55,996 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - close() - start 
2016-08-09 20:38:55,996 DEBUG o.d.d.s.AbstractPreparedBatchStatement - close() - start 
2016-08-09 20:38:55,997 DEBUG o.s.t.a.AnnotationTransactionAttributeSource - Adding transactional method 'ProdukServiceImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '' 
2016-08-09 20:38:55,997 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-09 20:38:55,997 DEBUG o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.agung.template.springjpa.service.impl.ProdukServiceImpl.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '' 
2016-08-09 20:38:55,998 DEBUG o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1e49cb2] for JPA transaction 
2016-08-09 20:38:55,998 DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin 
2016-08-09 20:38:55,998 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection 
2016-08-09 20:38:56,161 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection 
2016-08-09 20:38:56,162 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: true 
2016-08-09 20:38:56,162 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - disabling autocommit 
2016-08-09 20:38:56,164 DEBUG o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@14cd74a] 
2016-08-09 20:38:56,164 DEBUG o.s.d.r.c.s.TransactionalRepositoryProxyPostProcessor$CustomAnnotationTransactionAttributeSource - Adding transactional method 'save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '' 
2016-08-09 20:38:56,165 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-09 20:38:56,165 DEBUG o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1e49cb2] for JPA transaction 
2016-08-09 20:38:56,165 DEBUG o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction 
2016-08-09 20:38:56,167 DEBUG o.h.e.i.DefaultMergeEventListener - EntityCopyObserver strategy: disallow 
2016-08-09 20:38:56,171 DEBUG org.hibernate.loader.Loader - Loading entity: [com.agung.template.springjpa.entity.Produk#pk-001] 
2016-08-09 20:38:56,172 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:38:56,172 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [pk-001] 
2016-08-09 20:38:56,174 DEBUG org.hibernate.loader.Loader - Done entity load 
2016-08-09 20:38:56,181 DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 789bf42c-7fbd-4c6b-900c-ce024b650149, using strategy: org.hibernate.id.UUIDGenerator 
2016-08-09 20:38:56,186 DEBUG o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit 
2016-08-09 20:38:56,186 DEBUG o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1e49cb2] 
2016-08-09 20:38:56,186 DEBUG o.h.e.t.spi.AbstractTransactionImpl - committing 
2016-08-09 20:38:56,187 DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades 
2016-08-09 20:38:56,188 DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections 
2016-08-09 20:38:56,190 DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects 
2016-08-09 20:38:56,191 DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections 
2016-08-09 20:38:56,192 DEBUG o.h.internal.util.EntityPrinter - Listing entities: 
2016-08-09 20:38:56,193 DEBUG o.h.internal.util.EntityPrinter - com.agung.template.springjpa.entity.Produk{namaProduk=Produk-000, harga=175000, kodeProduk=p-000, id=789bf42c-7fbd-4c6b-900c-ce024b650149} 
2016-08-09 20:38:56,202 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2016-08-09 20:38:56,203 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [NUMERIC] - [175000] 
2016-08-09 20:38:56,204 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [p-000] 
2016-08-09 20:38:56,204 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [Produk-000] 
2016-08-09 20:38:56,204 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [VARCHAR] - [789bf42c-7fbd-4c6b-900c-ce024b650149] 
2016-08-09 20:38:56,223 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - committed JDBC Connection 
2016-08-09 20:38:56,223 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - re-enabling autocommit 
2016-08-09 20:38:56,224 DEBUG o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1e49cb2] after transaction 
2016-08-09 20:38:56,224 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-09 20:38:56,224 DEBUG o.h.e.j.i.JdbcCoordinatorImpl - HHH000420: Closing un-released batch 
2016-08-09 20:38:56,224 DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection 
2016-08-09 20:38:56,224 DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection 
2016-08-09 20:38:56,225 DEBUG o.s.t.c.s.DirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = com.agung.template.springjpa.produktest.ProdukDaoTest@16498e, testMethod = testInsertProdukData@ProdukDaoTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false]. 
2016-08-09 20:38:56,226 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-09 20:38:56,226 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-09 20:38:56,226 DEBUG o.s.t.c.s.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = com.agung.template.springjpa.produktest.ProdukDaoTest@a93621, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]. 
2016-08-09 20:38:56,226 DEBUG o.s.t.c.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]] 
2016-08-09 20:38:56,226 DEBUG o.s.test.context.cache - Spring test ApplicationContext cache statistics: [ContextCache@ee53dc size = 1, hitCount = 3, missCount = 1, parentContextCount = 0] 
2016-08-09 20:38:56,227 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'com.agung.template.springjpa.produktest.ProdukDaoTest': AutowiredFieldElement for private com.agung.template.springjpa.service.ProdukService com.agung.template.springjpa.produktest.ProdukDaoTest.pService 
2016-08-09 20:38:56,227 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'produkService' 
2016-08-09 20:38:56,227 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'com.agung.template.springjpa.produktest.ProdukDaoTest': AutowiredFieldElement for private javax.sql.DataSource com.agung.template.springjpa.produktest.ProdukDaoTest.ds 
2016-08-09 20:38:56,227 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource' 
2016-08-09 20:38:56,227 DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null] 
2016-08-09 20:38:56,227 DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null] 
2016-08-09 20:38:56,227 DEBUG o.d.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start 
2016-08-09 20:38:56,227 DEBUG o.d.dataset.xml.FlatXmlProducer - produce() - start 
2016-08-09 20:38:56,228 DEBUG o.d.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@48a7f3, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@1985a86) - start 
2016-08-09 20:38:56,228 DEBUG o.d.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@48a7f3, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@1985a86) - start 
2016-08-09 20:38:56,230 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1a2ed35) - start 
2016-08-09 20:38:56,230 DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start 
2016-08-09 20:38:56,230 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1a2ed35) - start 
2016-08-09 20:38:56,230 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,230 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:56,230 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,230 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,230 DEBUG o.d.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1a2ed35) - start 
2016-08-09 20:38:56,232 DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)]) - start 
2016-08-09 20:38:56,232 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-09 20:38:56,232 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,232 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,232 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-09 20:38:56,232 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-09 20:38:56,232 DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-09 20:38:56,232 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,232 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,232 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,232 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,232 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,232 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,232 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,232 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,232 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,235 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,235 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-001) - start 
2016-08-09 20:38:56,235 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-001) - start 
2016-08-09 20:38:56,235 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:56,235 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1a2ed35) - start 
2016-08-09 20:38:56,235 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,235 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,235 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,235 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:56,236 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,236 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,236 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,236 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,237 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,237 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,237 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,237 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,237 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,237 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,237 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,237 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,237 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,237 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,237 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,237 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-002) - start 
2016-08-09 20:38:56,237 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-002) - start 
2016-08-09 20:38:56,237 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1a2ed35) - start 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,238 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-003) - start 
2016-08-09 20:38:56,238 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-003) - start 
2016-08-09 20:38:56,238 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1a2ed35) - start 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,239 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-004) - start 
2016-08-09 20:38:56,239 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-004) - start 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:56,239 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1a2ed35) - start 
2016-08-09 20:38:56,240 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,240 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,240 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,240 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:56,240 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,240 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,240 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,240 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,240 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,240 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,240 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,240 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,240 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,240 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,240 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,240 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,242 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,242 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,242 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,242 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-005) - start 
2016-08-09 20:38:56,242 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-005) - start 
2016-08-09 20:38:56,242 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:56,242 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start 
2016-08-09 20:38:56,242 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,242 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,242 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,242 DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start 
2016-08-09 20:38:56,242 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,242 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,242 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-09 20:38:56,242 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,243 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,243 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-09 20:38:56,243 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-09 20:38:56,243 DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start 
2016-08-09 20:38:56,243 DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[m_produk], _tableMap={M_PRODUK=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]}, _caseSensitiveTableNames=false] 
2016-08-09 20:38:56,243 DEBUG o.d.database.DatabaseConnection - Database connection info: 
	database product name=MySQL
	database version=5.6.22-log
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
	jdbc driver major version=5
	jdbc driver minor version=1
 
2016-08-09 20:38:56,243 DEBUG o.d.database.DatabaseConnection - validateSchema(validateStrict=false) - start 
2016-08-09 20:38:56,243 DEBUG o.d.database.DatabaseConnection - Schema is null. Nothing to validate. 
2016-08-09 20:38:56,243 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-09 20:38:56,243 DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start 
2016-08-09 20:38:56,243 DEBUG o.d.dataset.OrderedTableNameMap - orderedValues() - start 
2016-08-09 20:38:56,243 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,243 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,244 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-09 20:38:56,244 DEBUG org.dbunit.dataset.CompositeDataSet - addTable(newTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], tableList=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[], _tableMap={}, _caseSensitiveTableNames=false], combine=true) - start 
2016-08-09 20:38:56,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,244 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-09 20:38:56,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-09 20:38:56,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-09 20:38:56,244 DEBUG o.d.dataset.OrderedTableNameMap - orderedValues() - start 
2016-08-09 20:38:56,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,244 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,244 DEBUG o.d.operation.CompositeOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=null], , dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-09 20:38:56,245 DEBUG o.d.operation.DeleteAllOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-09 20:38:56,246 DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start 
2016-08-09 20:38:56,246 DEBUG o.d.d.s.PreparedStatementFactory - createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,250 DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,257 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-09 20:38:56,257 DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start 
2016-08-09 20:38:56,258 DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start 
2016-08-09 20:38:56,258 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-09 20:38:56,258 DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=m_produk) - start 
2016-08-09 20:38:56,258 DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start 
2016-08-09 20:38:56,258 DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database... 
2016-08-09 20:38:56,266 DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=MySQL
	database version=5.6.22-log
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
	jdbc driver major version=5
	jdbc driver minor version=1
 
2016-08-09 20:38:56,266 DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=org.apache.commons.dbcp.DelegatingResultSet@bca971 
2016-08-09 20:38:56,266 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}]) - start 
2016-08-09 20:38:56,266 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:56,266 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=berita, escapePattern=null) - start 
2016-08-09 20:38:56,266 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=berita, object=null) - start 
2016-08-09 20:38:56,266 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=berita) - start 
2016-08-09 20:38:56,266 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=berita) - end - result=BERITA 
2016-08-09 20:38:56,267 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=BERITA) - start 
2016-08-09 20:38:56,267 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=BERITA) - end - result=BERITA 
2016-08-09 20:38:56,267 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}]) - start 
2016-08-09 20:38:56,267 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:56,267 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=komentar, escapePattern=null) - start 
2016-08-09 20:38:56,267 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=komentar, object=null) - start 
2016-08-09 20:38:56,267 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar) - start 
2016-08-09 20:38:56,267 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar) - end - result=KOMENTAR 
2016-08-09 20:38:56,267 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR) - start 
2016-08-09 20:38:56,267 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR) - end - result=KOMENTAR 
2016-08-09 20:38:56,267 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}]) - start 
2016-08-09 20:38:56,267 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:56,267 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=komentar_berita, escapePattern=null) - start 
2016-08-09 20:38:56,267 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=komentar_berita, object=null) - start 
2016-08-09 20:38:56,267 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar_berita) - start 
2016-08-09 20:38:56,267 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar_berita) - end - result=KOMENTAR_BERITA 
2016-08-09 20:38:56,267 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR_BERITA) - start 
2016-08-09 20:38:56,267 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR_BERITA) - end - result=KOMENTAR_BERITA 
2016-08-09 20:38:56,267 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}]) - start 
2016-08-09 20:38:56,268 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:56,268 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-09 20:38:56,268 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=null) - start 
2016-08-09 20:38:56,268 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,268 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,268 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-09 20:38:56,268 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-09 20:38:56,268 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}]) - start 
2016-08-09 20:38:56,268 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:56,268 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=mahasiswa, escapePattern=null) - start 
2016-08-09 20:38:56,268 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=mahasiswa, object=null) - start 
2016-08-09 20:38:56,268 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=mahasiswa) - start 
2016-08-09 20:38:56,268 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=mahasiswa) - end - result=MAHASISWA 
2016-08-09 20:38:56,268 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=MAHASISWA) - start 
2016-08-09 20:38:56,268 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=MAHASISWA) - end - result=MAHASISWA 
2016-08-09 20:38:56,268 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}]) - start 
2016-08-09 20:38:56,269 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:56,269 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_menu, escapePattern=null) - start 
2016-08-09 20:38:56,269 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_menu, object=null) - start 
2016-08-09 20:38:56,269 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_menu) - start 
2016-08-09 20:38:56,269 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_menu) - end - result=T_MENU 
2016-08-09 20:38:56,269 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_MENU) - start 
2016-08-09 20:38:56,269 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_MENU) - end - result=T_MENU 
2016-08-09 20:38:56,269 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}]) - start 
2016-08-09 20:38:56,269 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:56,269 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_permission, escapePattern=null) - start 
2016-08-09 20:38:56,269 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_permission, object=null) - start 
2016-08-09 20:38:56,269 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_permission) - start 
2016-08-09 20:38:56,269 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_permission) - end - result=T_PERMISSION 
2016-08-09 20:38:56,269 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_PERMISSION) - start 
2016-08-09 20:38:56,269 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_PERMISSION) - end - result=T_PERMISSION 
2016-08-09 20:38:56,269 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}]) - start 
2016-08-09 20:38:56,269 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:56,269 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_role, escapePattern=null) - start 
2016-08-09 20:38:56,269 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_role, object=null) - start 
2016-08-09 20:38:56,269 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_role) - start 
2016-08-09 20:38:56,269 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_role) - end - result=T_ROLE 
2016-08-09 20:38:56,269 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_ROLE) - start 
2016-08-09 20:38:56,270 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_ROLE) - end - result=T_ROLE 
2016-08-09 20:38:56,270 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}]) - start 
2016-08-09 20:38:56,270 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:56,270 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_user, escapePattern=null) - start 
2016-08-09 20:38:56,270 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_user, object=null) - start 
2016-08-09 20:38:56,270 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_user) - start 
2016-08-09 20:38:56,270 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_user) - end - result=T_USER 
2016-08-09 20:38:56,270 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_USER) - start 
2016-08-09 20:38:56,270 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_USER) - end - result=T_USER 
2016-08-09 20:38:56,270 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,270 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,270 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,270 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,270 DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=m_produk (dbIdentifierQuoteString=`) 
2016-08-09 20:38:56,270 DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'm_produk' exists in schema 'null' ... 
2016-08-09 20:38:56,280 DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.apache.commons.dbcp.DelegatingResultSet@9fed45) - start 
2016-08-09 20:38:56,280 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:56,302 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:38:56,302 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>id 
2016-08-09 20:38:56,302 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=id) - start 
2016-08-09 20:38:56,302 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-09 20:38:56,302 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-09 20:38:56,302 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,302 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-09 20:38:56,302 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-09 20:38:56,302 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>harga 
2016-08-09 20:38:56,302 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=3 , sqlTypeName=DECIMAL, tableName=m_produk, columnName=harga) - start 
2016-08-09 20:38:56,302 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=3, sqlTypeName=DECIMAL) - start 
2016-08-09 20:38:56,302 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=3) - start 
2016-08-09 20:38:56,302 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,302 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,302 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,302 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,302 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,302 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,302 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,302 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,302 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,302 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-09 20:38:56,302 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-09 20:38:56,302 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>kode_produk 
2016-08-09 20:38:56,302 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=kode_produk) - start 
2016-08-09 20:38:56,302 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-09 20:38:56,302 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-09 20:38:56,302 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,302 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-09 20:38:56,303 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-09 20:38:56,303 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>nama_produk 
2016-08-09 20:38:56,303 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=nama_produk) - start 
2016-08-09 20:38:56,303 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-09 20:38:56,303 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-09 20:38:56,303 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,303 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-09 20:38:56,303 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-09 20:38:56,303 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start 
2016-08-09 20:38:56,303 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeyNames() - start 
2016-08-09 20:38:56,309 DEBUG o.d.database.DatabaseTableMetaData - getName() - start 
2016-08-09 20:38:56,309 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:56,309 DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[id], columns=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)]) - start 
2016-08-09 20:38:56,309 DEBUG org.dbunit.dataset.Columns - getColumn(columnName=id, columns=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)]) - start 
2016-08-09 20:38:56,280 DEBUG o.d.dataset.OrderedTableNameMap - update(tableName=m_produk, object=table=m_produk, cols=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)], pk=[(id, VARCHAR, noNulls)]) - start 
2016-08-09 20:38:56,309 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,309 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,309 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,309 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,309 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=m_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,312 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:56,312 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-09 20:38:56,312 DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from m_produk) - start 
2016-08-09 20:38:56,312 DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from m_produk 
2016-08-09 20:38:56,312 DEBUG o.d.d.statement.SimpleStatement - executeBatch() - start 
2016-08-09 20:38:56,312 DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from m_produk 
2016-08-09 20:38:56,315 DEBUG o.d.d.statement.SimpleStatement - clearBatch() - start 
2016-08-09 20:38:56,315 DEBUG o.d.d.s.AbstractBatchStatement - close() - start 
2016-08-09 20:38:56,315 DEBUG o.d.o.AbstractBatchOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-09 20:38:56,315 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-09 20:38:56,316 DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start 
2016-08-09 20:38:56,316 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-09 20:38:56,316 DEBUG o.d.o.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-09 20:38:56,316 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-09 20:38:56,316 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:56,316 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:56,316 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,316 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,316 DEBUG o.d.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-09 20:38:56,316 DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start 
2016-08-09 20:38:56,317 DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=m_produk) - start 
2016-08-09 20:38:56,317 DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start 
2016-08-09 20:38:56,317 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,317 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,317 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,317 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,317 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,317 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:56,317 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:56,317 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,317 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:56,317 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,317 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:56,317 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,317 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:56,317 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start 
2016-08-09 20:38:56,317 DEBUG o.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=0) - start 
2016-08-09 20:38:56,317 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-09 20:38:56,318 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:56,318 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:56,318 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,318 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,318 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=kode_produk) - start 
2016-08-09 20:38:56,318 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:56,318 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:56,318 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,318 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,318 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=nama_produk) - start 
2016-08-09 20:38:56,318 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:56,318 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:56,318 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,318 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,318 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=harga) - start 
2016-08-09 20:38:56,318 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:56,318 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:56,318 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,318 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,318 DEBUG o.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=m_produk, columns=[(id, VARCHAR, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls), (harga, DECIMAL, noNulls)], keys=[(id, VARCHAR, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,319 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=m_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,320 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:56,320 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-09 20:38:56,320 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=id, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,326 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:56,326 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=id, escapePattern=null) - start 
2016-08-09 20:38:56,326 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=kode_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,327 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:56,327 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=kode_produk, escapePattern=null) - start 
2016-08-09 20:38:56,327 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=nama_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,328 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:56,328 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=nama_produk, escapePattern=null) - start 
2016-08-09 20:38:56,328 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=harga, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,329 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:56,329 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=harga, escapePattern=null) - start 
2016-08-09 20:38:56,329 DEBUG o.d.d.s.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into m_produk (id, kode_produk, nama_produk, harga) values (?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,329 DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@806c8b}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,330 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-09 20:38:56,332 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:56,332 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:56,332 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,332 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,332 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-001, dataType=VARCHAR) - start 
2016-08-09 20:38:56,332 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-001, dataType=VARCHAR) - start 
2016-08-09 20:38:56,332 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-001, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-09 20:38:56,332 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-001) - start 
2016-08-09 20:38:56,332 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-001) - start 
2016-08-09 20:38:56,332 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=kode_produk) - start 
2016-08-09 20:38:56,332 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:56,332 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:56,332 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,332 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,332 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-001, dataType=VARCHAR) - start 
2016-08-09 20:38:56,333 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-001, dataType=VARCHAR) - start 
2016-08-09 20:38:56,333 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-001, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-09 20:38:56,333 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-001) - start 
2016-08-09 20:38:56,333 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-001) - start 
2016-08-09 20:38:56,333 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=nama_produk) - start 
2016-08-09 20:38:56,333 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:56,333 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:56,333 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,333 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,333 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk A, dataType=VARCHAR) - start 
2016-08-09 20:38:56,333 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk A, dataType=VARCHAR) - start 
2016-08-09 20:38:56,333 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk A, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-09 20:38:56,333 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk A) - start 
2016-08-09 20:38:56,333 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk A) - start 
2016-08-09 20:38:56,333 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=harga) - start 
2016-08-09 20:38:56,333 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:56,333 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:56,333 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,333 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,334 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=250000, dataType=DECIMAL) - start 
2016-08-09 20:38:56,334 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=250000, dataType=DECIMAL) - start 
2016-08-09 20:38:56,334 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=250000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', 'Produk A', ** NOT SPECIFIED **)) - start 
2016-08-09 20:38:56,334 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=250000) - start 
2016-08-09 20:38:56,334 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:56,334 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:56,336 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=1) - start 
2016-08-09 20:38:56,336 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start 
2016-08-09 20:38:56,337 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:56,337 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:56,337 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,337 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,337 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=kode_produk) - start 
2016-08-09 20:38:56,337 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:56,337 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:56,337 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,337 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,337 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=nama_produk) - start 
2016-08-09 20:38:56,337 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:56,337 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:56,337 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,337 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,337 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=harga) - start 
2016-08-09 20:38:56,337 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:56,337 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:56,337 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,337 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,337 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start 
2016-08-09 20:38:56,337 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:56,337 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:56,337 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,337 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,337 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-002, dataType=VARCHAR) - start 
2016-08-09 20:38:56,337 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-002, dataType=VARCHAR) - start 
2016-08-09 20:38:56,337 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-002, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', 'Produk A', 250000)) - start 
2016-08-09 20:38:56,339 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-002) - start 
2016-08-09 20:38:56,339 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-002) - start 
2016-08-09 20:38:56,339 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=kode_produk) - start 
2016-08-09 20:38:56,339 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:56,339 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:56,339 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,339 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,339 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-002, dataType=VARCHAR) - start 
2016-08-09 20:38:56,339 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-002, dataType=VARCHAR) - start 
2016-08-09 20:38:56,339 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-002, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-001', 'Produk A', 250000)) - start 
2016-08-09 20:38:56,339 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-002) - start 
2016-08-09 20:38:56,339 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-002) - start 
2016-08-09 20:38:56,339 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=nama_produk) - start 
2016-08-09 20:38:56,339 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:56,339 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:56,339 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,339 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,339 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk B, dataType=VARCHAR) - start 
2016-08-09 20:38:56,339 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk B, dataType=VARCHAR) - start 
2016-08-09 20:38:56,339 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk B, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk A', 250000)) - start 
2016-08-09 20:38:56,339 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk B) - start 
2016-08-09 20:38:56,339 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk B) - start 
2016-08-09 20:38:56,340 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=harga) - start 
2016-08-09 20:38:56,340 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:56,340 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:56,340 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,340 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,340 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=375000, dataType=DECIMAL) - start 
2016-08-09 20:38:56,340 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=375000, dataType=DECIMAL) - start 
2016-08-09 20:38:56,340 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=375000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk B', 250000)) - start 
2016-08-09 20:38:56,340 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=375000) - start 
2016-08-09 20:38:56,340 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:56,340 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:56,344 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=2) - start 
2016-08-09 20:38:56,348 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start 
2016-08-09 20:38:56,348 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:56,349 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:56,349 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,349 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,349 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=kode_produk) - start 
2016-08-09 20:38:56,349 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:56,349 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:56,349 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,349 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,349 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=nama_produk) - start 
2016-08-09 20:38:56,349 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:56,349 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:56,349 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,349 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,349 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=harga) - start 
2016-08-09 20:38:56,349 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:56,349 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:56,349 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,349 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,349 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start 
2016-08-09 20:38:56,349 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:56,349 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:56,349 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,349 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,349 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-003, dataType=VARCHAR) - start 
2016-08-09 20:38:56,349 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-003, dataType=VARCHAR) - start 
2016-08-09 20:38:56,349 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-003, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk B', 375000)) - start 
2016-08-09 20:38:56,350 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-003) - start 
2016-08-09 20:38:56,350 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-003) - start 
2016-08-09 20:38:56,350 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=kode_produk) - start 
2016-08-09 20:38:56,350 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:56,350 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:56,350 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,350 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,350 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-003, dataType=VARCHAR) - start 
2016-08-09 20:38:56,350 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-003, dataType=VARCHAR) - start 
2016-08-09 20:38:56,350 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-003, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-002', 'Produk B', 375000)) - start 
2016-08-09 20:38:56,350 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-003) - start 
2016-08-09 20:38:56,350 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-003) - start 
2016-08-09 20:38:56,350 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=nama_produk) - start 
2016-08-09 20:38:56,350 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:56,350 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:56,350 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,352 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,352 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk C, dataType=VARCHAR) - start 
2016-08-09 20:38:56,352 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk C, dataType=VARCHAR) - start 
2016-08-09 20:38:56,352 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk C, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk B', 375000)) - start 
2016-08-09 20:38:56,352 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk C) - start 
2016-08-09 20:38:56,352 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk C) - start 
2016-08-09 20:38:56,352 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=harga) - start 
2016-08-09 20:38:56,353 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:56,353 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:56,353 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,353 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,353 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=420000, dataType=DECIMAL) - start 
2016-08-09 20:38:56,353 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=420000, dataType=DECIMAL) - start 
2016-08-09 20:38:56,353 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=420000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk C', 375000)) - start 
2016-08-09 20:38:56,353 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=420000) - start 
2016-08-09 20:38:56,353 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:56,353 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:56,357 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=3) - start 
2016-08-09 20:38:56,366 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start 
2016-08-09 20:38:56,367 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:56,367 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:56,367 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,367 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,367 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=kode_produk) - start 
2016-08-09 20:38:56,367 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:56,367 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:56,367 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,367 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,367 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=nama_produk) - start 
2016-08-09 20:38:56,367 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:56,367 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:56,367 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,367 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,367 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=harga) - start 
2016-08-09 20:38:56,367 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:56,367 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:56,367 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,367 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,367 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start 
2016-08-09 20:38:56,367 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:56,367 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:56,368 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,368 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,368 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-004, dataType=VARCHAR) - start 
2016-08-09 20:38:56,368 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-004, dataType=VARCHAR) - start 
2016-08-09 20:38:56,368 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-004, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk C', 420000)) - start 
2016-08-09 20:38:56,368 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-004) - start 
2016-08-09 20:38:56,368 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-004) - start 
2016-08-09 20:38:56,368 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=kode_produk) - start 
2016-08-09 20:38:56,368 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:56,368 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:56,368 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,368 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,368 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-004, dataType=VARCHAR) - start 
2016-08-09 20:38:56,368 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-004, dataType=VARCHAR) - start 
2016-08-09 20:38:56,368 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-004, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-003', 'Produk C', 420000)) - start 
2016-08-09 20:38:56,369 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-004) - start 
2016-08-09 20:38:56,369 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-004) - start 
2016-08-09 20:38:56,369 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=nama_produk) - start 
2016-08-09 20:38:56,369 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:56,369 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:56,369 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,369 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,369 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk D, dataType=VARCHAR) - start 
2016-08-09 20:38:56,369 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk D, dataType=VARCHAR) - start 
2016-08-09 20:38:56,369 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk D, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk C', 420000)) - start 
2016-08-09 20:38:56,369 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk D) - start 
2016-08-09 20:38:56,369 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk D) - start 
2016-08-09 20:38:56,369 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=harga) - start 
2016-08-09 20:38:56,369 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:56,369 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:56,369 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,369 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,369 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=580000, dataType=DECIMAL) - start 
2016-08-09 20:38:56,369 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=580000, dataType=DECIMAL) - start 
2016-08-09 20:38:56,369 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=580000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk D', 420000)) - start 
2016-08-09 20:38:56,370 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=580000) - start 
2016-08-09 20:38:56,370 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:56,370 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:56,402 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=4) - start 
2016-08-09 20:38:56,402 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start 
2016-08-09 20:38:56,402 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:56,403 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:56,403 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,403 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,403 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=kode_produk) - start 
2016-08-09 20:38:56,403 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:56,403 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:56,403 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,403 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,403 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=nama_produk) - start 
2016-08-09 20:38:56,403 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:56,403 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:56,403 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,403 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,403 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=harga) - start 
2016-08-09 20:38:56,403 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:56,403 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:56,403 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,403 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,403 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start 
2016-08-09 20:38:56,403 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:56,403 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:56,403 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,403 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,403 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-005, dataType=VARCHAR) - start 
2016-08-09 20:38:56,403 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-005, dataType=VARCHAR) - start 
2016-08-09 20:38:56,403 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-005, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk D', 580000)) - start 
2016-08-09 20:38:56,404 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-005) - start 
2016-08-09 20:38:56,404 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-005) - start 
2016-08-09 20:38:56,404 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=kode_produk) - start 
2016-08-09 20:38:56,404 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:56,404 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:56,404 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,404 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,404 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-005, dataType=VARCHAR) - start 
2016-08-09 20:38:56,404 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-005, dataType=VARCHAR) - start 
2016-08-09 20:38:56,404 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-005, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-004', 'Produk D', 580000)) - start 
2016-08-09 20:38:56,404 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-005) - start 
2016-08-09 20:38:56,404 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-005) - start 
2016-08-09 20:38:56,404 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=nama_produk) - start 
2016-08-09 20:38:56,404 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:56,404 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:56,404 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,404 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,404 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk E, dataType=VARCHAR) - start 
2016-08-09 20:38:56,404 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk E, dataType=VARCHAR) - start 
2016-08-09 20:38:56,404 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk E, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-005', 'Produk D', 580000)) - start 
2016-08-09 20:38:56,404 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk E) - start 
2016-08-09 20:38:56,408 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk E) - start 
2016-08-09 20:38:56,408 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=harga) - start 
2016-08-09 20:38:56,408 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:56,408 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:56,408 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,408 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,408 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=640000, dataType=DECIMAL) - start 
2016-08-09 20:38:56,408 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=640000, dataType=DECIMAL) - start 
2016-08-09 20:38:56,408 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=640000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@59319c: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-005', 'Produk E', 580000)) - start 
2016-08-09 20:38:56,409 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=640000) - start 
2016-08-09 20:38:56,409 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:56,409 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:56,413 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=5) - start 
2016-08-09 20:38:56,414 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=id) - start 
2016-08-09 20:38:56,414 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start 
2016-08-09 20:38:56,414 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=5) - start 
2016-08-09 20:38:56,414 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - executeBatch() - start 
2016-08-09 20:38:56,414 DEBUG o.d.d.s.SimplePreparedStatement - executeBatch() - start 
2016-08-09 20:38:56,414 DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start 
2016-08-09 20:38:56,414 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - clearBatch() - start 
2016-08-09 20:38:56,414 DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start 
2016-08-09 20:38:56,414 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - close() - start 
2016-08-09 20:38:56,414 DEBUG o.d.d.s.AbstractPreparedBatchStatement - close() - start 
2016-08-09 20:38:56,414 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-09 20:38:56,414 DEBUG o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.agung.template.springjpa.service.impl.ProdukServiceImpl.findProdukById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; '' 
2016-08-09 20:38:56,415 DEBUG o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@731692] for JPA transaction 
2016-08-09 20:38:56,415 DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin 
2016-08-09 20:38:56,415 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection 
2016-08-09 20:38:56,425 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection 
2016-08-09 20:38:56,426 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: true 
2016-08-09 20:38:56,426 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - disabling autocommit 
2016-08-09 20:38:56,426 DEBUG o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@d9e63e] 
2016-08-09 20:38:56,427 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-09 20:38:56,427 DEBUG o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@731692] for JPA transaction 
2016-08-09 20:38:56,427 DEBUG o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction 
2016-08-09 20:38:56,427 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:38:56,428 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [p-003] 
2016-08-09 20:38:56,429 DEBUG o.h.l.p.e.p.i.ResultSetProcessorImpl - Starting ResultSet row #0 
2016-08-09 20:38:56,429 DEBUG o.h.l.p.e.p.i.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified 
2016-08-09 20:38:56,429 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([harga2_0_0_] : [NUMERIC]) - [420000.00] 
2016-08-09 20:38:56,429 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([kode_pro3_0_0_] : [VARCHAR]) - [produk-003] 
2016-08-09 20:38:56,429 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([nama_pro4_0_0_] : [VARCHAR]) - [Produk C] 
2016-08-09 20:38:56,429 DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.agung.template.springjpa.entity.Produk#p-003] 
2016-08-09 20:38:56,430 DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.agung.template.springjpa.entity.Produk#p-003] 
2016-08-09 20:38:56,432 DEBUG o.h.l.e.p.AbstractLoadPlanBasedEntityLoader - Done entity load : com.agung.template.springjpa.entity.Produk#p-003 
2016-08-09 20:38:56,433 DEBUG o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit 
2016-08-09 20:38:56,433 DEBUG o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@731692] 
2016-08-09 20:38:56,433 DEBUG o.h.e.t.spi.AbstractTransactionImpl - committing 
2016-08-09 20:38:56,433 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - committed JDBC Connection 
2016-08-09 20:38:56,433 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - re-enabling autocommit 
2016-08-09 20:38:56,434 DEBUG o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@731692] after transaction 
2016-08-09 20:38:56,435 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-09 20:38:56,435 DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection 
2016-08-09 20:38:56,435 DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection 
2016-08-09 20:38:56,435 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-09 20:38:56,435 DEBUG o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.agung.template.springjpa.service.impl.ProdukServiceImpl.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '' 
2016-08-09 20:38:56,435 DEBUG o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@17913b] for JPA transaction 
2016-08-09 20:38:56,435 DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin 
2016-08-09 20:38:56,435 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection 
2016-08-09 20:38:56,436 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection 
2016-08-09 20:38:56,436 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: true 
2016-08-09 20:38:56,436 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - disabling autocommit 
2016-08-09 20:38:56,436 DEBUG o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@9c3204] 
2016-08-09 20:38:56,437 DEBUG o.s.d.r.c.s.TransactionalRepositoryProxyPostProcessor$CustomAnnotationTransactionAttributeSource - Adding transactional method 'delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '' 
2016-08-09 20:38:56,437 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-09 20:38:56,437 DEBUG o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@17913b] for JPA transaction 
2016-08-09 20:38:56,437 DEBUG o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction 
2016-08-09 20:38:56,438 DEBUG org.hibernate.loader.Loader - Loading entity: [com.agung.template.springjpa.entity.Produk#p-003] 
2016-08-09 20:38:56,439 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:38:56,439 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [p-003] 
2016-08-09 20:38:56,440 DEBUG org.hibernate.loader.Loader - Result set row: 0 
2016-08-09 20:38:56,442 DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.agung.template.springjpa.entity.Produk#p-003] 
2016-08-09 20:38:56,442 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([harga2_0_0_] : [NUMERIC]) - [420000.00] 
2016-08-09 20:38:56,443 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([kode_pro3_0_0_] : [VARCHAR]) - [produk-003] 
2016-08-09 20:38:56,443 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([nama_pro4_0_0_] : [VARCHAR]) - [Produk C] 
2016-08-09 20:38:56,443 DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.agung.template.springjpa.entity.Produk#p-003] 
2016-08-09 20:38:56,443 DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.agung.template.springjpa.entity.Produk#p-003] 
2016-08-09 20:38:56,444 DEBUG org.hibernate.loader.Loader - Done entity load 
2016-08-09 20:38:56,448 DEBUG o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit 
2016-08-09 20:38:56,448 DEBUG o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@17913b] 
2016-08-09 20:38:56,448 DEBUG o.h.e.t.spi.AbstractTransactionImpl - committing 
2016-08-09 20:38:56,448 DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades 
2016-08-09 20:38:56,448 DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections 
2016-08-09 20:38:56,449 DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects 
2016-08-09 20:38:56,449 DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections 
2016-08-09 20:38:56,449 DEBUG o.h.internal.util.EntityPrinter - Listing entities: 
2016-08-09 20:38:56,449 DEBUG o.h.internal.util.EntityPrinter - com.agung.template.springjpa.entity.Produk{namaProduk=Produk C, harga=420000.00, kodeProduk=produk-003, id=p-003} 
2016-08-09 20:38:56,449 DEBUG org.hibernate.SQL - 
    delete 
    from
        m_produk 
    where
        id=? 
2016-08-09 20:38:56,449 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [p-003] 
2016-08-09 20:38:56,456 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - committed JDBC Connection 
2016-08-09 20:38:56,456 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - re-enabling autocommit 
2016-08-09 20:38:56,457 DEBUG o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@17913b] after transaction 
2016-08-09 20:38:56,457 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-09 20:38:56,457 DEBUG o.h.e.j.i.JdbcCoordinatorImpl - HHH000420: Closing un-released batch 
2016-08-09 20:38:56,457 DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection 
2016-08-09 20:38:56,457 DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection 
2016-08-09 20:38:56,457 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-09 20:38:56,457 DEBUG o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.agung.template.springjpa.service.impl.ProdukServiceImpl.findProdukById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; '' 
2016-08-09 20:38:56,458 DEBUG o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1f08caf] for JPA transaction 
2016-08-09 20:38:56,458 DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin 
2016-08-09 20:38:56,458 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection 
2016-08-09 20:38:56,458 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection 
2016-08-09 20:38:56,458 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: true 
2016-08-09 20:38:56,458 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - disabling autocommit 
2016-08-09 20:38:56,459 DEBUG o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@defd42] 
2016-08-09 20:38:56,459 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-09 20:38:56,459 DEBUG o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1f08caf] for JPA transaction 
2016-08-09 20:38:56,459 DEBUG o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction 
2016-08-09 20:38:56,459 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:38:56,460 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [p-003] 
2016-08-09 20:38:56,465 DEBUG o.h.l.e.p.AbstractLoadPlanBasedEntityLoader - Done entity load : com.agung.template.springjpa.entity.Produk#p-003 
2016-08-09 20:38:56,465 DEBUG o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit 
2016-08-09 20:38:56,465 DEBUG o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1f08caf] 
2016-08-09 20:38:56,465 DEBUG o.h.e.t.spi.AbstractTransactionImpl - committing 
2016-08-09 20:38:56,466 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - committed JDBC Connection 
2016-08-09 20:38:56,466 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - re-enabling autocommit 
2016-08-09 20:38:56,467 DEBUG o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1f08caf] after transaction 
2016-08-09 20:38:56,467 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-09 20:38:56,467 DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection 
2016-08-09 20:38:56,467 DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection 
2016-08-09 20:38:56,468 DEBUG o.s.t.c.s.DirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = com.agung.template.springjpa.produktest.ProdukDaoTest@a93621, testMethod = testDelete@ProdukDaoTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false]. 
2016-08-09 20:38:56,468 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-09 20:38:56,468 DEBUG o.s.t.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-09 20:38:56,468 DEBUG o.s.t.c.s.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = com.agung.template.springjpa.produktest.ProdukDaoTest@6eab5d, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]. 
2016-08-09 20:38:56,468 DEBUG o.s.t.c.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]] 
2016-08-09 20:38:56,468 DEBUG o.s.test.context.cache - Spring test ApplicationContext cache statistics: [ContextCache@ee53dc size = 1, hitCount = 4, missCount = 1, parentContextCount = 0] 
2016-08-09 20:38:56,469 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'com.agung.template.springjpa.produktest.ProdukDaoTest': AutowiredFieldElement for private com.agung.template.springjpa.service.ProdukService com.agung.template.springjpa.produktest.ProdukDaoTest.pService 
2016-08-09 20:38:56,469 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'produkService' 
2016-08-09 20:38:56,469 DEBUG o.s.b.f.a.InjectionMetadata - Processing injected element of bean 'com.agung.template.springjpa.produktest.ProdukDaoTest': AutowiredFieldElement for private javax.sql.DataSource com.agung.template.springjpa.produktest.ProdukDaoTest.ds 
2016-08-09 20:38:56,469 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource' 
2016-08-09 20:38:56,469 DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null] 
2016-08-09 20:38:56,469 DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null] 
2016-08-09 20:38:56,470 DEBUG o.d.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start 
2016-08-09 20:38:56,470 DEBUG o.d.dataset.xml.FlatXmlProducer - produce() - start 
2016-08-09 20:38:56,472 DEBUG o.d.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@725ee1, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@e60ece) - start 
2016-08-09 20:38:56,472 DEBUG o.d.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@725ee1, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@e60ece) - start 
2016-08-09 20:38:56,473 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@19270ed) - start 
2016-08-09 20:38:56,473 DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start 
2016-08-09 20:38:56,473 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@19270ed) - start 
2016-08-09 20:38:56,474 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,474 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:56,474 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,474 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,474 DEBUG o.d.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@19270ed) - start 
2016-08-09 20:38:56,474 DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)]) - start 
2016-08-09 20:38:56,474 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-09 20:38:56,474 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,474 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,474 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-09 20:38:56,474 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-09 20:38:56,474 DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-09 20:38:56,474 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,474 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,474 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,474 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,474 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,474 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,474 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,474 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,474 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,474 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,480 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-001) - start 
2016-08-09 20:38:56,480 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-001) - start 
2016-08-09 20:38:56,480 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:56,480 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@19270ed) - start 
2016-08-09 20:38:56,480 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,481 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-002) - start 
2016-08-09 20:38:56,481 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-002) - start 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@19270ed) - start 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:56,481 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,482 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,482 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,482 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,482 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,482 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,482 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,482 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,482 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,482 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,482 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,486 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,486 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,486 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,486 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,486 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-003) - start 
2016-08-09 20:38:56,486 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-003) - start 
2016-08-09 20:38:56,486 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:56,486 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@19270ed) - start 
2016-08-09 20:38:56,486 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,486 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,487 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,487 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:56,487 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,487 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,487 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,487 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,487 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,487 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,487 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,487 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,487 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,487 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,487 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,487 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,487 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,487 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,487 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,487 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-004) - start 
2016-08-09 20:38:56,487 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-004) - start 
2016-08-09 20:38:56,487 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:56,487 DEBUG o.d.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=m_produk, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@19270ed) - start 
2016-08-09 20:38:56,487 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,488 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,488 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,488 DEBUG o.d.dataset.OrderedTableNameMap - isLastTable(tableName=m_produk) - start 
2016-08-09 20:38:56,488 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,488 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,488 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,488 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,488 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,488 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,488 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,488 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,488 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,488 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,488 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,488 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,488 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,488 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,488 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,488 DEBUG org.dbunit.dataset.CachedDataSet - row(values=p-005) - start 
2016-08-09 20:38:56,489 DEBUG org.dbunit.dataset.DefaultTable - addRow(values=p-005) - start 
2016-08-09 20:38:56,489 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=m_produk) - start 
2016-08-09 20:38:56,489 DEBUG o.d.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start 
2016-08-09 20:38:56,489 DEBUG o.d.dataset.OrderedTableNameMap - getLastTableName() - start 
2016-08-09 20:38:56,489 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,489 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,489 DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start 
2016-08-09 20:38:56,489 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,489 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,489 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-09 20:38:56,489 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,489 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,489 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-09 20:38:56,489 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-09 20:38:56,490 DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start 
2016-08-09 20:38:56,490 DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[m_produk], _tableMap={M_PRODUK=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]}, _caseSensitiveTableNames=false] 
2016-08-09 20:38:56,490 DEBUG o.d.database.DatabaseConnection - Database connection info: 
	database product name=MySQL
	database version=5.6.22-log
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
	jdbc driver major version=5
	jdbc driver minor version=1
 
2016-08-09 20:38:56,490 DEBUG o.d.database.DatabaseConnection - validateSchema(validateStrict=false) - start 
2016-08-09 20:38:56,490 DEBUG o.d.database.DatabaseConnection - Schema is null. Nothing to validate. 
2016-08-09 20:38:56,490 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-09 20:38:56,490 DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start 
2016-08-09 20:38:56,490 DEBUG o.d.dataset.OrderedTableNameMap - orderedValues() - start 
2016-08-09 20:38:56,490 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,490 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,490 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-09 20:38:56,490 DEBUG org.dbunit.dataset.CompositeDataSet - addTable(newTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], tableList=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[], _tableMap={}, _caseSensitiveTableNames=false], combine=true) - start 
2016-08-09 20:38:56,490 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,491 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,491 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-09 20:38:56,491 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,491 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,491 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-09 20:38:56,491 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-09 20:38:56,491 DEBUG o.d.dataset.OrderedTableNameMap - orderedValues() - start 
2016-08-09 20:38:56,491 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,491 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,491 DEBUG o.d.operation.CompositeOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=null], , dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-09 20:38:56,492 DEBUG o.d.operation.DeleteAllOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-09 20:38:56,494 DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start 
2016-08-09 20:38:56,495 DEBUG o.d.d.s.PreparedStatementFactory - createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,495 DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,496 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-09 20:38:56,496 DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start 
2016-08-09 20:38:56,496 DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start 
2016-08-09 20:38:56,496 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-09 20:38:56,496 DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=m_produk) - start 
2016-08-09 20:38:56,496 DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start 
2016-08-09 20:38:56,496 DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database... 
2016-08-09 20:38:56,507 DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=MySQL
	database version=5.6.22-log
	database major version=5
	database minor version=6
	jdbc driver name=MySQL Connector Java
	jdbc driver version=mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
	jdbc driver major version=5
	jdbc driver minor version=1
 
2016-08-09 20:38:56,507 DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=org.apache.commons.dbcp.DelegatingResultSet@17cada5 
2016-08-09 20:38:56,507 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}]) - start 
2016-08-09 20:38:56,507 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:56,507 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=berita, escapePattern=null) - start 
2016-08-09 20:38:56,507 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=berita, object=null) - start 
2016-08-09 20:38:56,507 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=berita) - start 
2016-08-09 20:38:56,508 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=berita) - end - result=BERITA 
2016-08-09 20:38:56,508 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=BERITA) - start 
2016-08-09 20:38:56,508 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=BERITA) - end - result=BERITA 
2016-08-09 20:38:56,508 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}]) - start 
2016-08-09 20:38:56,508 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:56,509 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=komentar, escapePattern=null) - start 
2016-08-09 20:38:56,509 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=komentar, object=null) - start 
2016-08-09 20:38:56,509 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar) - start 
2016-08-09 20:38:56,509 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar) - end - result=KOMENTAR 
2016-08-09 20:38:56,509 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR) - start 
2016-08-09 20:38:56,509 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR) - end - result=KOMENTAR 
2016-08-09 20:38:56,509 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}]) - start 
2016-08-09 20:38:56,509 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:56,509 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=komentar_berita, escapePattern=null) - start 
2016-08-09 20:38:56,509 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=komentar_berita, object=null) - start 
2016-08-09 20:38:56,509 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar_berita) - start 
2016-08-09 20:38:56,509 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=komentar_berita) - end - result=KOMENTAR_BERITA 
2016-08-09 20:38:56,509 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR_BERITA) - start 
2016-08-09 20:38:56,509 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=KOMENTAR_BERITA) - end - result=KOMENTAR_BERITA 
2016-08-09 20:38:56,509 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}]) - start 
2016-08-09 20:38:56,515 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:56,515 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-09 20:38:56,515 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=m_produk, object=null) - start 
2016-08-09 20:38:56,515 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,515 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,515 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - start 
2016-08-09 20:38:56,515 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=M_PRODUK) - end - result=M_PRODUK 
2016-08-09 20:38:56,515 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}]) - start 
2016-08-09 20:38:56,515 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:56,515 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=mahasiswa, escapePattern=null) - start 
2016-08-09 20:38:56,515 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=mahasiswa, object=null) - start 
2016-08-09 20:38:56,515 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=mahasiswa) - start 
2016-08-09 20:38:56,515 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=mahasiswa) - end - result=MAHASISWA 
2016-08-09 20:38:56,515 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=MAHASISWA) - start 
2016-08-09 20:38:56,515 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=MAHASISWA) - end - result=MAHASISWA 
2016-08-09 20:38:56,515 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}]) - start 
2016-08-09 20:38:56,517 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:56,518 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_menu, escapePattern=null) - start 
2016-08-09 20:38:56,518 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_menu, object=null) - start 
2016-08-09 20:38:56,518 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_menu) - start 
2016-08-09 20:38:56,518 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_menu) - end - result=T_MENU 
2016-08-09 20:38:56,518 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_MENU) - start 
2016-08-09 20:38:56,518 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_MENU) - end - result=T_MENU 
2016-08-09 20:38:56,518 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}]) - start 
2016-08-09 20:38:56,518 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:56,519 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_permission, escapePattern=null) - start 
2016-08-09 20:38:56,520 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_permission, object=null) - start 
2016-08-09 20:38:56,520 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_permission) - start 
2016-08-09 20:38:56,520 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_permission) - end - result=T_PERMISSION 
2016-08-09 20:38:56,520 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_PERMISSION) - start 
2016-08-09 20:38:56,520 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_PERMISSION) - end - result=T_PERMISSION 
2016-08-09 20:38:56,520 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}]) - start 
2016-08-09 20:38:56,520 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:56,520 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_role, escapePattern=null) - start 
2016-08-09 20:38:56,520 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_role, object=null) - start 
2016-08-09 20:38:56,520 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_role) - start 
2016-08-09 20:38:56,520 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_role) - end - result=T_ROLE 
2016-08-09 20:38:56,520 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_ROLE) - start 
2016-08-09 20:38:56,520 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_ROLE) - end - result=T_ROLE 
2016-08-09 20:38:56,520 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}]) - start 
2016-08-09 20:38:56,521 DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name 
2016-08-09 20:38:56,521 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=t_user, escapePattern=null) - start 
2016-08-09 20:38:56,521 DEBUG o.d.dataset.OrderedTableNameMap - add(tableName=t_user, object=null) - start 
2016-08-09 20:38:56,521 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_user) - start 
2016-08-09 20:38:56,521 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=t_user) - end - result=T_USER 
2016-08-09 20:38:56,521 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_USER) - start 
2016-08-09 20:38:56,521 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=T_USER) - end - result=T_USER 
2016-08-09 20:38:56,521 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,521 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,521 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,521 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,521 DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=m_produk (dbIdentifierQuoteString=`) 
2016-08-09 20:38:56,521 DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'm_produk' exists in schema 'null' ... 
2016-08-09 20:38:56,524 DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.apache.commons.dbcp.DelegatingResultSet@10fc838) - start 
2016-08-09 20:38:56,525 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:56,543 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:38:56,543 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>id 
2016-08-09 20:38:56,544 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=id) - start 
2016-08-09 20:38:56,544 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-09 20:38:56,544 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-09 20:38:56,544 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,544 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-09 20:38:56,544 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-09 20:38:56,544 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>harga 
2016-08-09 20:38:56,544 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=3 , sqlTypeName=DECIMAL, tableName=m_produk, columnName=harga) - start 
2016-08-09 20:38:56,544 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=3, sqlTypeName=DECIMAL) - start 
2016-08-09 20:38:56,544 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=3) - start 
2016-08-09 20:38:56,544 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,544 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,544 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,544 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,544 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,544 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,544 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,544 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,544 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,544 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-09 20:38:56,544 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-09 20:38:56,544 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>kode_produk 
2016-08-09 20:38:56,544 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=kode_produk) - start 
2016-08-09 20:38:56,544 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-09 20:38:56,544 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-09 20:38:56,544 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,544 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-09 20:38:56,544 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-09 20:38:56,544 DEBUG o.d.database.DefaultMetadataHandler - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>belajar schema: null<=>null table: m_produk<=>m_produk column: null<=>nama_produk 
2016-08-09 20:38:56,544 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12 , sqlTypeName=VARCHAR, tableName=m_produk, columnName=nama_produk) - start 
2016-08-09 20:38:56,544 DEBUG o.d.d.d.DefaultDataTypeFactory - createDataType(sqlType=12, sqlTypeName=VARCHAR) - start 
2016-08-09 20:38:56,544 DEBUG o.dbunit.dataset.datatype.DataType - forSqlType(sqlType=12) - start 
2016-08-09 20:38:56,544 DEBUG o.d.d.datatype.AbstractDataType - getSqlType() - start 
2016-08-09 20:38:56,544 DEBUG org.dbunit.dataset.Column - nullableValue(nullable=0) - start 
2016-08-09 20:38:56,544 DEBUG org.dbunit.dataset.Column - autoIncrementValue(isAutoIncrement=NO) - start 
2016-08-09 20:38:56,544 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start 
2016-08-09 20:38:56,544 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeyNames() - start 
2016-08-09 20:38:56,547 DEBUG o.d.database.DatabaseTableMetaData - getName() - start 
2016-08-09 20:38:56,547 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:56,547 DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[id], columns=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)]) - start 
2016-08-09 20:38:56,547 DEBUG org.dbunit.dataset.Columns - getColumn(columnName=id, columns=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)]) - start 
2016-08-09 20:38:56,525 DEBUG o.d.dataset.OrderedTableNameMap - update(tableName=m_produk, object=table=m_produk, cols=[(id, VARCHAR, noNulls), (harga, DECIMAL, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls)], pk=[(id, VARCHAR, noNulls)]) - start 
2016-08-09 20:38:56,547 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,547 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,547 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,547 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,547 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=m_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,548 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:56,548 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-09 20:38:56,548 DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from m_produk) - start 
2016-08-09 20:38:56,548 DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from m_produk 
2016-08-09 20:38:56,548 DEBUG o.d.d.statement.SimpleStatement - executeBatch() - start 
2016-08-09 20:38:56,548 DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from m_produk 
2016-08-09 20:38:56,551 DEBUG o.d.d.statement.SimpleStatement - clearBatch() - start 
2016-08-09 20:38:56,551 DEBUG o.d.d.s.AbstractBatchStatement - close() - start 
2016-08-09 20:38:56,551 DEBUG o.d.o.AbstractBatchOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start 
2016-08-09 20:38:56,552 DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start 
2016-08-09 20:38:56,552 DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start 
2016-08-09 20:38:56,552 DEBUG o.d.dataset.DefaultTableIterator - getTable() - start 
2016-08-09 20:38:56,552 DEBUG o.d.o.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start 
2016-08-09 20:38:56,552 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-09 20:38:56,552 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:56,552 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:56,552 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,552 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,552 DEBUG o.d.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[]) - start 
2016-08-09 20:38:56,553 DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start 
2016-08-09 20:38:56,553 DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=m_produk) - start 
2016-08-09 20:38:56,553 DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start 
2016-08-09 20:38:56,553 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,553 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,553 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - start 
2016-08-09 20:38:56,553 DEBUG o.d.dataset.OrderedTableNameMap - getTableName(tableName=m_produk) - end - result=M_PRODUK 
2016-08-09 20:38:56,554 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,554 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:56,554 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:56,554 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,554 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:56,554 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,554 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:56,554 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,554 DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start 
2016-08-09 20:38:56,554 DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start 
2016-08-09 20:38:56,554 DEBUG o.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=0) - start 
2016-08-09 20:38:56,554 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-09 20:38:56,554 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:56,554 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:56,554 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,554 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,554 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=kode_produk) - start 
2016-08-09 20:38:56,554 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:56,554 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:56,554 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,555 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,555 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=nama_produk) - start 
2016-08-09 20:38:56,555 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:56,555 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:56,555 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,555 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,555 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=harga) - start 
2016-08-09 20:38:56,555 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:56,555 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:56,555 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,555 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,555 DEBUG o.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=m_produk, columns=[(id, VARCHAR, noNulls), (kode_produk, VARCHAR, noNulls), (nama_produk, VARCHAR, noNulls), (harga, DECIMAL, noNulls)], keys=[(id, VARCHAR, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,556 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=m_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,557 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:56,557 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=m_produk, escapePattern=null) - start 
2016-08-09 20:38:56,557 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=id, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,563 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:56,563 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=id, escapePattern=null) - start 
2016-08-09 20:38:56,563 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=kode_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,564 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:56,565 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=kode_produk, escapePattern=null) - start 
2016-08-09 20:38:56,565 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=nama_produk, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,567 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:56,567 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=nama_produk, escapePattern=null) - start 
2016-08-09 20:38:56,567 DEBUG o.d.operation.AbstractOperation - getQualifiedName(prefix=null, name=harga, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,567 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start 
2016-08-09 20:38:56,567 DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=harga, escapePattern=null) - start 
2016-08-09 20:38:56,568 DEBUG o.d.d.s.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into m_produk (id, kode_produk, nama_produk, harga) values (?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,570 DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=jdbc:mysql://localhost:3306/belajar, UserName=root@localhost, MySQL Connector Java, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@cf294c, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@17aaca2, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@4b1e1d, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@566842], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@9e0271}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start 
2016-08-09 20:38:56,579 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start 
2016-08-09 20:38:56,579 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:56,579 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:56,579 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,579 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,579 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-001, dataType=VARCHAR) - start 
2016-08-09 20:38:56,579 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-001, dataType=VARCHAR) - start 
2016-08-09 20:38:56,579 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-001, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-09 20:38:56,580 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-001) - start 
2016-08-09 20:38:56,580 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-001) - start 
2016-08-09 20:38:56,580 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=kode_produk) - start 
2016-08-09 20:38:56,580 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:56,580 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:56,580 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,580 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,580 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-001, dataType=VARCHAR) - start 
2016-08-09 20:38:56,581 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-001, dataType=VARCHAR) - start 
2016-08-09 20:38:56,581 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-001, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-09 20:38:56,582 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-001) - start 
2016-08-09 20:38:56,582 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-001) - start 
2016-08-09 20:38:56,582 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=nama_produk) - start 
2016-08-09 20:38:56,582 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:56,582 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:56,582 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,582 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,582 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk A, dataType=VARCHAR) - start 
2016-08-09 20:38:56,582 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk A, dataType=VARCHAR) - start 
2016-08-09 20:38:56,582 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk A, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start 
2016-08-09 20:38:56,582 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk A) - start 
2016-08-09 20:38:56,582 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk A) - start 
2016-08-09 20:38:56,582 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=harga) - start 
2016-08-09 20:38:56,582 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start 
2016-08-09 20:38:56,582 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=5) - start 
2016-08-09 20:38:56,582 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,582 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,582 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=250000, dataType=DECIMAL) - start 
2016-08-09 20:38:56,583 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=250000, dataType=DECIMAL) - start 
2016-08-09 20:38:56,583 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=250000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', 'Produk A', ** NOT SPECIFIED **)) - start 
2016-08-09 20:38:56,583 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=250000) - start 
2016-08-09 20:38:56,583 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:56,583 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:56,586 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=1) - start 
2016-08-09 20:38:56,586 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start 
2016-08-09 20:38:56,586 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:56,586 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:56,586 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,586 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,586 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=kode_produk) - start 
2016-08-09 20:38:56,586 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:56,586 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:56,586 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,586 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,586 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=nama_produk) - start 
2016-08-09 20:38:56,586 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:56,586 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:56,587 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,587 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,587 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=harga) - start 
2016-08-09 20:38:56,587 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:56,587 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:56,587 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,587 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,587 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start 
2016-08-09 20:38:56,587 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:56,587 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:56,587 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,587 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,587 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-002, dataType=VARCHAR) - start 
2016-08-09 20:38:56,587 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-002, dataType=VARCHAR) - start 
2016-08-09 20:38:56,587 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-002, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-001', 'produk-001', 'Produk A', 250000)) - start 
2016-08-09 20:38:56,587 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-002) - start 
2016-08-09 20:38:56,587 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-002) - start 
2016-08-09 20:38:56,587 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=kode_produk) - start 
2016-08-09 20:38:56,587 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:56,587 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:56,587 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,587 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,587 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-002, dataType=VARCHAR) - start 
2016-08-09 20:38:56,587 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-002, dataType=VARCHAR) - start 
2016-08-09 20:38:56,587 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-002, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-001', 'Produk A', 250000)) - start 
2016-08-09 20:38:56,588 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-002) - start 
2016-08-09 20:38:56,588 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-002) - start 
2016-08-09 20:38:56,588 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=nama_produk) - start 
2016-08-09 20:38:56,588 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:56,588 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:56,588 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,588 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,588 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk B, dataType=VARCHAR) - start 
2016-08-09 20:38:56,588 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk B, dataType=VARCHAR) - start 
2016-08-09 20:38:56,588 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk B, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk A', 250000)) - start 
2016-08-09 20:38:56,588 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk B) - start 
2016-08-09 20:38:56,588 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk B) - start 
2016-08-09 20:38:56,588 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=harga) - start 
2016-08-09 20:38:56,588 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start 
2016-08-09 20:38:56,588 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=5) - start 
2016-08-09 20:38:56,588 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,588 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,590 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=375000, dataType=DECIMAL) - start 
2016-08-09 20:38:56,590 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=375000, dataType=DECIMAL) - start 
2016-08-09 20:38:56,592 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=375000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk B', 250000)) - start 
2016-08-09 20:38:56,592 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=375000) - start 
2016-08-09 20:38:56,592 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:56,592 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:56,598 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=2) - start 
2016-08-09 20:38:56,599 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start 
2016-08-09 20:38:56,599 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:56,599 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:56,599 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,599 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,599 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=kode_produk) - start 
2016-08-09 20:38:56,599 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:56,599 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:56,599 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,599 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,599 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=nama_produk) - start 
2016-08-09 20:38:56,599 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:56,599 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:56,599 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,599 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,599 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=harga) - start 
2016-08-09 20:38:56,599 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:56,599 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:56,599 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,599 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,599 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start 
2016-08-09 20:38:56,599 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:56,599 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:56,599 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,599 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,599 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-003, dataType=VARCHAR) - start 
2016-08-09 20:38:56,599 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-003, dataType=VARCHAR) - start 
2016-08-09 20:38:56,599 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-003, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-002', 'produk-002', 'Produk B', 375000)) - start 
2016-08-09 20:38:56,599 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-003) - start 
2016-08-09 20:38:56,599 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-003) - start 
2016-08-09 20:38:56,600 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=kode_produk) - start 
2016-08-09 20:38:56,600 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:56,600 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:56,600 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,600 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,600 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-003, dataType=VARCHAR) - start 
2016-08-09 20:38:56,600 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-003, dataType=VARCHAR) - start 
2016-08-09 20:38:56,600 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-003, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-002', 'Produk B', 375000)) - start 
2016-08-09 20:38:56,600 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-003) - start 
2016-08-09 20:38:56,600 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-003) - start 
2016-08-09 20:38:56,600 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=nama_produk) - start 
2016-08-09 20:38:56,600 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:56,600 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:56,600 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,600 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,600 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk C, dataType=VARCHAR) - start 
2016-08-09 20:38:56,600 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk C, dataType=VARCHAR) - start 
2016-08-09 20:38:56,600 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk C, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk B', 375000)) - start 
2016-08-09 20:38:56,600 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk C) - start 
2016-08-09 20:38:56,602 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk C) - start 
2016-08-09 20:38:56,602 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=harga) - start 
2016-08-09 20:38:56,602 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start 
2016-08-09 20:38:56,602 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=5) - start 
2016-08-09 20:38:56,602 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,602 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,602 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=420000, dataType=DECIMAL) - start 
2016-08-09 20:38:56,602 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=420000, dataType=DECIMAL) - start 
2016-08-09 20:38:56,602 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=420000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk C', 375000)) - start 
2016-08-09 20:38:56,603 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=420000) - start 
2016-08-09 20:38:56,603 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:56,603 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:56,605 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=3) - start 
2016-08-09 20:38:56,606 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start 
2016-08-09 20:38:56,606 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:56,606 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:56,606 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,606 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,606 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=kode_produk) - start 
2016-08-09 20:38:56,606 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:56,606 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:56,606 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,606 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,606 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=nama_produk) - start 
2016-08-09 20:38:56,606 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:56,606 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:56,606 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,606 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,606 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=harga) - start 
2016-08-09 20:38:56,606 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:56,606 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:56,606 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,606 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,608 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start 
2016-08-09 20:38:56,608 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:56,608 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:56,608 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,608 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,608 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-004, dataType=VARCHAR) - start 
2016-08-09 20:38:56,608 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-004, dataType=VARCHAR) - start 
2016-08-09 20:38:56,608 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-004, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-003', 'produk-003', 'Produk C', 420000)) - start 
2016-08-09 20:38:56,608 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-004) - start 
2016-08-09 20:38:56,608 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-004) - start 
2016-08-09 20:38:56,608 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=kode_produk) - start 
2016-08-09 20:38:56,608 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:56,608 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:56,608 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,608 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,608 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-004, dataType=VARCHAR) - start 
2016-08-09 20:38:56,609 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-004, dataType=VARCHAR) - start 
2016-08-09 20:38:56,609 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-004, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-003', 'Produk C', 420000)) - start 
2016-08-09 20:38:56,609 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-004) - start 
2016-08-09 20:38:56,609 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-004) - start 
2016-08-09 20:38:56,609 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=nama_produk) - start 
2016-08-09 20:38:56,609 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:56,609 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:56,609 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,609 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,609 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk D, dataType=VARCHAR) - start 
2016-08-09 20:38:56,609 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk D, dataType=VARCHAR) - start 
2016-08-09 20:38:56,609 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk D, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk C', 420000)) - start 
2016-08-09 20:38:56,609 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk D) - start 
2016-08-09 20:38:56,609 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk D) - start 
2016-08-09 20:38:56,609 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=harga) - start 
2016-08-09 20:38:56,609 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start 
2016-08-09 20:38:56,609 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=5) - start 
2016-08-09 20:38:56,609 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,610 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,610 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=580000, dataType=DECIMAL) - start 
2016-08-09 20:38:56,610 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=580000, dataType=DECIMAL) - start 
2016-08-09 20:38:56,610 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=580000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk D', 420000)) - start 
2016-08-09 20:38:56,610 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=580000) - start 
2016-08-09 20:38:56,610 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:56,610 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:56,614 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=4) - start 
2016-08-09 20:38:56,614 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start 
2016-08-09 20:38:56,614 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:56,614 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:56,614 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,614 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,614 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=kode_produk) - start 
2016-08-09 20:38:56,614 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:56,614 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:56,614 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,614 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,614 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=nama_produk) - start 
2016-08-09 20:38:56,614 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:56,615 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:56,615 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,615 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,615 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=harga) - start 
2016-08-09 20:38:56,615 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:56,615 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:56,615 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,615 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,615 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start 
2016-08-09 20:38:56,615 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:56,615 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:56,615 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,615 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start 
2016-08-09 20:38:56,615 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=p-005, dataType=VARCHAR) - start 
2016-08-09 20:38:56,615 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=p-005, dataType=VARCHAR) - start 
2016-08-09 20:38:56,615 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=p-005, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-004', 'produk-004', 'Produk D', 580000)) - start 
2016-08-09 20:38:56,616 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=p-005) - start 
2016-08-09 20:38:56,616 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=p-005) - start 
2016-08-09 20:38:56,616 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=kode_produk) - start 
2016-08-09 20:38:56,616 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:56,616 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:56,616 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,616 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=kode_produk) - start 
2016-08-09 20:38:56,616 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=produk-005, dataType=VARCHAR) - start 
2016-08-09 20:38:56,616 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=produk-005, dataType=VARCHAR) - start 
2016-08-09 20:38:56,616 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=produk-005, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-004', 'Produk D', 580000)) - start 
2016-08-09 20:38:56,616 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=produk-005) - start 
2016-08-09 20:38:56,616 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=produk-005) - start 
2016-08-09 20:38:56,616 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=nama_produk) - start 
2016-08-09 20:38:56,616 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:56,616 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:56,616 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,616 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=nama_produk) - start 
2016-08-09 20:38:56,616 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Produk E, dataType=VARCHAR) - start 
2016-08-09 20:38:56,616 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Produk E, dataType=VARCHAR) - start 
2016-08-09 20:38:56,616 DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Produk E, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-005', 'Produk D', 580000)) - start 
2016-08-09 20:38:56,616 DEBUG o.dbunit.dataset.datatype.DataType - asString(value=Produk E) - start 
2016-08-09 20:38:56,616 DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Produk E) - start 
2016-08-09 20:38:56,616 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=harga) - start 
2016-08-09 20:38:56,616 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start 
2016-08-09 20:38:56,616 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=5) - start 
2016-08-09 20:38:56,616 DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,616 DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=harga) - start 
2016-08-09 20:38:56,617 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=640000, dataType=DECIMAL) - start 
2016-08-09 20:38:56,617 DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=640000, dataType=DECIMAL) - start 
2016-08-09 20:38:56,617 DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=640000, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@2e3264: insert into m_produk (id, kode_produk, nama_produk, harga) values ('p-005', 'produk-005', 'Produk E', 580000)) - start 
2016-08-09 20:38:56,617 DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=640000) - start 
2016-08-09 20:38:56,617 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start 
2016-08-09 20:38:56,617 DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start 
2016-08-09 20:38:56,619 DEBUG o.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=m_produk, columns=[(id, UNKNOWN, nullableUnknown), (kode_produk, UNKNOWN, nullableUnknown), (nama_produk, UNKNOWN, nullableUnknown), (harga, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], row=5) - start 
2016-08-09 20:38:56,620 DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=id) - start 
2016-08-09 20:38:56,620 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start 
2016-08-09 20:38:56,620 DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=5) - start 
2016-08-09 20:38:56,620 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - executeBatch() - start 
2016-08-09 20:38:56,620 DEBUG o.d.d.s.SimplePreparedStatement - executeBatch() - start 
2016-08-09 20:38:56,620 DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start 
2016-08-09 20:38:56,620 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - clearBatch() - start 
2016-08-09 20:38:56,620 DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start 
2016-08-09 20:38:56,620 DEBUG o.d.d.s.AutomaticPreparedBatchStatement - close() - start 
2016-08-09 20:38:56,620 DEBUG o.d.d.s.AbstractPreparedBatchStatement - close() - start 
2016-08-09 20:38:56,625 DEBUG o.s.t.a.AnnotationTransactionAttributeSource - Adding transactional method 'ProdukServiceImpl.findByKode' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; '' 
2016-08-09 20:38:56,625 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager' 
2016-08-09 20:38:56,625 DEBUG o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.agung.template.springjpa.service.impl.ProdukServiceImpl.findByKode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; '' 
2016-08-09 20:38:56,626 DEBUG o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@bc8d0f] for JPA transaction 
2016-08-09 20:38:56,626 DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin 
2016-08-09 20:38:56,626 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection 
2016-08-09 20:38:56,652 DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection 
2016-08-09 20:38:56,653 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: true 
2016-08-09 20:38:56,653 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - disabling autocommit 
2016-08-09 20:38:56,653 DEBUG o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1e71476] 
2016-08-09 20:38:56,660 DEBUG o.h.jpa.criteria.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Produk as generatedAlias0 where generatedAlias0.kodeProduk=:param0 
2016-08-09 20:38:56,668 DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.agung.template.springjpa.entity.Produk as generatedAlias0 where generatedAlias0.kodeProduk=:param0 
2016-08-09 20:38:56,671 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'agung'
    |  |     |  |  |  |  \-[IDENT] Node: 'template'
    |  |     |  |  |  \-[IDENT] Node: 'springjpa'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Produk'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'kodeProduk'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'
 
2016-08-09 20:38:56,671 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-09 20:38:56,675 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select] 
2016-08-09 20:38:56,676 DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.agung.template.springjpa.entity.Produk (generatedAlias0) -> produk0_ 
2016-08-09 20:38:56,676 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : generatedAlias0 -> produk0_.id 
2016-08-09 20:38:56,676 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : generatedAlias0 -> produk0_.id 
2016-08-09 20:38:56,676 DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : kodeProduk -> org.hibernate.type.StringType@1c995f4 
2016-08-09 20:38:56,676 DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : generatedAlias0.kodeProduk -> produk0_.kode_produk 
2016-08-09 20:38:56,677 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select] 
2016-08-09 20:38:56,677 DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} produk0_.id ) ( FromClause{level=1} m_produk produk0_ ) ( where ( = ( produk0_.kode_produk produk0_.id kodeProduk ) ? ) ) ) 
2016-08-09 20:38:56,677 DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [m_produk produk0_] 
2016-08-09 20:38:56,677 DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select] 
2016-08-09 20:38:56,677 DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (m_produk)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'produk0_.id as id1_0_' {alias=generatedAlias0, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
    |  \-[SQL_TOKEN] SqlFragment: 'produk0_.harga as harga2_0_, produk0_.kode_produk as kode_pro3_0_, produk0_.nama_produk as nama_pro4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[produk0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'm_produk produk0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=m_produk,tableAlias=produk0_,origin=null,columns={,className=com.agung.template.springjpa.entity.Produk}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'produk0_.kode_produk' {propertyName=kodeProduk,dereferenceType=PRIMITIVE,getPropertyPath=kodeProduk,path=generatedAlias0.kodeProduk,tableAlias=produk0_,className=com.agung.template.springjpa.entity.Produk,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'produk0_.id' {alias=generatedAlias0, className=com.agung.template.springjpa.entity.Produk, tableAlias=produk0_}
          |  \-[IDENT] IdentNode: 'kodeProduk' {originalText=kodeProduk}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@1c995f4}
 
2016-08-09 20:38:56,678 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-09 20:38:56,678 DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from com.agung.template.springjpa.entity.Produk as generatedAlias0 where generatedAlias0.kodeProduk=:param0 
2016-08-09 20:38:56,678 DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select produk0_.id as id1_0_, produk0_.harga as harga2_0_, produk0_.kode_produk as kode_pro3_0_, produk0_.nama_produk as nama_pro4_0_ from m_produk produk0_ where produk0_.kode_produk=? 
2016-08-09 20:38:56,678 DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors 
2016-08-09 20:38:56,699 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 20:38:56,699 TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [produk-003] 
2016-08-09 20:38:56,703 DEBUG org.hibernate.loader.Loader - Result set row: 0 
2016-08-09 20:38:56,703 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([id1_0_] : [VARCHAR]) - [p-003] 
2016-08-09 20:38:56,703 DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.agung.template.springjpa.entity.Produk#p-003] 
2016-08-09 20:38:56,703 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([harga2_0_] : [NUMERIC]) - [420000.00] 
2016-08-09 20:38:56,704 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([kode_pro3_0_] : [VARCHAR]) - [produk-003] 
2016-08-09 20:38:56,704 TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([nama_pro4_0_] : [VARCHAR]) - [Produk C] 
2016-08-09 20:38:56,704 DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.agung.template.springjpa.entity.Produk#p-003] 
2016-08-09 20:38:56,704 DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.agung.template.springjpa.entity.Produk#p-003] 
2016-08-09 20:38:56,708 DEBUG o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit 
2016-08-09 20:38:56,709 DEBUG o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@bc8d0f] 
2016-08-09 20:38:56,709 DEBUG o.h.e.t.spi.AbstractTransactionImpl - committing 
2016-08-09 20:38:56,709 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - committed JDBC Connection 
2016-08-09 20:38:56,709 DEBUG o.h.e.t.i.jdbc.JdbcTransaction - re-enabling autocommit 
2016-08-09 20:38:56,712 DEBUG o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@bc8d0f] after transaction 
2016-08-09 20:38:56,712 DEBUG o.s.o.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager 
2016-08-09 20:38:56,712 DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection 
2016-08-09 20:38:56,712 DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection 
2016-08-09 20:38:56,713 DEBUG o.s.t.c.s.DirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = com.agung.template.springjpa.produktest.ProdukDaoTest@6eab5d, testMethod = testFindProdukByKode@ProdukDaoTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false]. 
2016-08-09 20:38:56,713 DEBUG o.s.t.c.s.DirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@4a2ea6 testClass = ProdukDaoTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@150c158 testClass = ProdukDaoTest, locations = '{classpath*:applicationContext.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false]. 
2016-08-09 20:38:56,717 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@123a213: startup date [Tue Aug 09 20:38:51 ICT 2016]; root of context hierarchy 
2016-08-09 20:38:56,718 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor' 
2016-08-09 20:38:56,718 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3958e7: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,produkService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,dataSource,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,foo,jpaMappingContext,produkDao,transactionManager,entityManagerFactory,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,org.springframework.orm.jpa.SharedEntityManagerCreator#0]; root of factory hierarchy 
2016-08-09 20:38:56,718 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Retrieved dependent beans for bean 'org.springframework.orm.jpa.vendor.HibernateJpaDialect#d7f8b4': [transactionManager] 
2016-08-09 20:38:56,719 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Retrieved dependent beans for bean 'produkService': [com.agung.template.springjpa.produktest.ProdukDaoTest] 
2016-08-09 20:38:56,719 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Retrieved dependent beans for bean '(inner bean)#91f68b': [produkDao] 
2016-08-09 20:38:56,719 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Retrieved dependent beans for bean '(inner bean)#c7d8b3': [(inner bean)#91f68b] 
2016-08-09 20:38:56,720 DEBUG o.s.b.f.s.DisposableBeanAdapter - Invoking destroy() on bean with name 'jpaMappingContext' 
2016-08-09 20:38:56,720 DEBUG o.s.b.f.s.DisposableBeanAdapter - Invoking destroy() on bean with name 'entityManagerFactory' 
2016-08-09 20:38:56,720 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:38:56,720 DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing 
2016-08-09 20:38:56,720 DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries 
2016-08-09 20:38:56,721 DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries 
2016-08-09 20:38:56,721 DEBUG o.h.j.i.EntityManagerFactoryRegistry - Remove: name=default 
2016-08-09 20:38:56,721 DEBUG o.s.b.f.s.DefaultListableBeanFactory - Retrieved dependent beans for bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#1883b97': [entityManagerFactory] 
2016-08-09 20:38:56,721 DEBUG o.s.b.f.s.DisposableBeanAdapter - Invoking destroy method 'close' on bean with name 'dataSource' 
2016-08-09 20:40:23,079 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 20:40:23,104 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 20:40:23,106 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@b0ed20, org.springframework.test.context.support.DirtiesContextTestExecutionListener@e24743, org.springframework.test.context.transaction.TransactionalTestExecutionListener@a10858, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1fe1d71] 
2016-08-09 20:40:23,249 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 20:40:23,732 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@36aefa: startup date [Tue Aug 09 20:40:23 ICT 2016]; root of context hierarchy 
2016-08-09 20:40:23,877 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 20:40:24,146 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:40:24,193 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 20:40:24,323 INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.3.11.Final} 
2016-08-09 20:40:24,326 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 20:40:24,329 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 20:40:24,641 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.5.Final} 
2016-08-09 20:40:25,216 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 20:40:25,415 INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 20:40:26,115 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export 
2016-08-09 20:40:26,437 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete 
2016-08-09 20:40:27,288 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:40:27,494 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:40:27,624 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:40:27,856 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:40:28,126 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:40:28,264 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@36aefa: startup date [Tue Aug 09 20:40:23 ICT 2016]; root of context hierarchy 
2016-08-09 20:40:28,267 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:41:45,445 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 20:41:45,472 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 20:41:45,474 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@b0ed20, org.springframework.test.context.support.DirtiesContextTestExecutionListener@e24743, org.springframework.test.context.transaction.TransactionalTestExecutionListener@a10858, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1fe1d71] 
2016-08-09 20:41:45,616 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 20:41:46,103 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@36aefa: startup date [Tue Aug 09 20:41:46 ICT 2016]; root of context hierarchy 
2016-08-09 20:41:46,244 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 20:41:46,499 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:41:46,542 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 20:41:46,667 INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.3.11.Final} 
2016-08-09 20:41:46,669 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 20:41:46,672 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 20:41:46,983 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.5.Final} 
2016-08-09 20:41:47,465 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 20:41:47,647 INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 20:41:48,330 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export 
2016-08-09 20:41:48,781 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete 
2016-08-09 20:41:49,572 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:41:49,802 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:41:49,926 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:41:50,026 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:41:50,143 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:41:50,236 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@36aefa: startup date [Tue Aug 09 20:41:46 ICT 2016]; root of context hierarchy 
2016-08-09 20:41:50,239 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:42:50,761 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 20:42:50,786 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 20:42:50,788 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@b0ed20, org.springframework.test.context.support.DirtiesContextTestExecutionListener@e24743, org.springframework.test.context.transaction.TransactionalTestExecutionListener@a10858, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1fe1d71] 
2016-08-09 20:42:50,936 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 20:42:51,392 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@36aefa: startup date [Tue Aug 09 20:42:51 ICT 2016]; root of context hierarchy 
2016-08-09 20:42:51,528 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 20:42:51,781 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:42:51,821 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 20:42:51,943 INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.3.11.Final} 
2016-08-09 20:42:51,947 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 20:42:51,953 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 20:42:52,262 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.5.Final} 
2016-08-09 20:42:52,746 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 20:42:52,920 INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 20:42:53,574 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export 
2016-08-09 20:42:53,578 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:42:53,578 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:42:53,679 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:42:53,679 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:42:53,723 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:42:53,723 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:42:53,798 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete 
2016-08-09 20:42:54,591 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:42:54,792 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:42:54,792 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:42:54,867 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:42:55,002 DEBUG org.hibernate.SQL - 
    select
        count(*) as col_0_0_ 
    from
        m_produk produk0_ 
2016-08-09 20:42:55,002 DEBUG org.hibernate.SQL - 
    select
        count(*) as col_0_0_ 
    from
        m_produk produk0_ 
2016-08-09 20:42:55,038 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:42:55,105 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:42:55,105 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:42:55,136 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2016-08-09 20:42:55,136 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2016-08-09 20:42:55,167 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:42:55,227 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:42:55,227 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:42:55,234 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:42:55,234 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:42:55,241 DEBUG org.hibernate.SQL - 
    delete 
    from
        m_produk 
    where
        id=? 
2016-08-09 20:42:55,241 DEBUG org.hibernate.SQL - 
    delete 
    from
        m_produk 
    where
        id=? 
2016-08-09 20:42:55,250 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:42:55,250 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:42:55,284 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:42:55,365 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 20:42:55,365 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 20:42:55,389 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@36aefa: startup date [Tue Aug 09 20:42:51 ICT 2016]; root of context hierarchy 
2016-08-09 20:42:55,396 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:43:39,929 INFO  o.s.c.s.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@16e8792: startup date [Tue Aug 09 20:43:39 ICT 2016]; root of context hierarchy 
2016-08-09 20:43:39,999 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml] 
2016-08-09 20:43:40,629 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 20:43:40,891 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:43:40,928 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 20:43:41,087 INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.3.11.Final} 
2016-08-09 20:43:41,090 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 20:43:41,093 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 20:43:41,438 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.5.Final} 
2016-08-09 20:43:41,940 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 20:43:42,106 INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 20:43:42,752 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export 
2016-08-09 20:43:42,756 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:43:42,756 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:43:42,858 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:43:42,858 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:43:42,942 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:43:42,942 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:43:43,019 INFO  o.h.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete 
2016-08-09 20:47:35,132 INFO  o.s.c.s.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@16e8792: startup date [Tue Aug 09 20:47:35 ICT 2016]; root of context hierarchy 
2016-08-09 20:47:35,200 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml] 
2016-08-09 20:47:35,847 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 20:47:36,174 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:47:36,280 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 20:47:36,563 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 20:47:36,565 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 20:47:36,567 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 20:47:36,752 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 20:47:37,536 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 20:47:39,063 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:47:39,063 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:47:39,131 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:47:39,131 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:47:39,210 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:47:39,210 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:47:39,335 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@d0ac62' 
2016-08-09 20:47:39,919 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 20:47:51,134 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 20:47:51,157 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 20:47:51,159 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@cd23d9, org.springframework.test.context.support.DirtiesContextTestExecutionListener@9cfc36, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1bd930a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1723e30] 
2016-08-09 20:47:51,310 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 20:47:51,796 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@18298f: startup date [Tue Aug 09 20:47:51 ICT 2016]; root of context hierarchy 
2016-08-09 20:47:51,948 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 20:47:52,218 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:47:52,255 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 20:47:52,395 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 20:47:52,397 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 20:47:52,400 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 20:47:52,479 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 20:47:53,134 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 20:47:54,193 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:47:54,193 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:47:54,303 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:47:54,303 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:47:54,351 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:47:54,351 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:47:54,406 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@1429932' 
2016-08-09 20:47:54,829 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 20:47:55,240 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:47:55,386 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:47:55,386 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:47:55,468 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:47:55,524 DEBUG org.hibernate.SQL - 
    select
        count(*) as col_0_0_ 
    from
        m_produk produk0_ 
2016-08-09 20:47:55,524 DEBUG org.hibernate.SQL - 
    select
        count(*) as col_0_0_ 
    from
        m_produk produk0_ 
2016-08-09 20:47:55,615 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:47:55,753 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:47:55,753 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:47:55,799 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2016-08-09 20:47:55,799 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2016-08-09 20:47:55,842 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:47:55,902 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:47:55,902 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:47:55,911 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:47:55,911 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:47:55,918 DEBUG org.hibernate.SQL - 
    delete 
    from
        m_produk 
    where
        id=? 
2016-08-09 20:47:55,918 DEBUG org.hibernate.SQL - 
    delete 
    from
        m_produk 
    where
        id=? 
2016-08-09 20:47:55,943 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:47:55,943 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:47:55,974 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:47:56,084 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 20:47:56,084 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 20:47:56,096 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@18298f: startup date [Tue Aug 09 20:47:51 ICT 2016]; root of context hierarchy 
2016-08-09 20:47:56,099 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:50:35,952 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 20:50:35,964 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 20:50:35,977 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ac3dc3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@eebfca, org.springframework.test.context.transaction.TransactionalTestExecutionListener@718207, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1371b2d] 
2016-08-09 20:50:36,122 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 20:50:36,585 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@d59286: startup date [Tue Aug 09 20:50:36 ICT 2016]; root of context hierarchy 
2016-08-09 20:50:36,728 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 20:50:37,001 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:50:37,036 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 20:50:37,174 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 20:50:37,176 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 20:50:37,179 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 20:50:37,254 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 20:50:37,808 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 20:50:38,865 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:50:38,865 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:50:38,964 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:50:38,964 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:50:39,008 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:50:39,008 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:50:39,200 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@dc4161' 
2016-08-09 20:50:39,627 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 20:50:46,024 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@d59286: startup date [Tue Aug 09 20:50:36 ICT 2016]; root of context hierarchy 
2016-08-09 20:50:46,026 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:52:28,090 INFO  o.s.c.s.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@16e8792: startup date [Tue Aug 09 20:52:28 ICT 2016]; root of context hierarchy 
2016-08-09 20:52:28,162 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml] 
2016-08-09 20:52:28,815 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 20:52:29,093 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:52:29,127 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 20:52:29,256 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 20:52:29,258 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 20:52:29,260 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 20:52:29,369 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 20:52:29,936 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 20:52:30,955 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:52:30,955 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:52:31,042 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:52:31,042 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:52:31,124 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:52:31,124 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:52:31,288 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@159970a' 
2016-08-09 20:52:31,731 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 20:52:41,492 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 20:52:41,505 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 20:52:41,519 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ac3dc3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@eebfca, org.springframework.test.context.transaction.TransactionalTestExecutionListener@718207, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1371b2d] 
2016-08-09 20:52:41,673 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 20:52:42,157 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@d59286: startup date [Tue Aug 09 20:52:42 ICT 2016]; root of context hierarchy 
2016-08-09 20:52:42,309 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 20:52:42,577 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:52:42,612 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 20:52:42,765 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 20:52:42,768 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 20:52:42,770 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 20:52:42,851 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 20:52:43,396 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 20:52:44,452 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:52:44,452 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:52:44,534 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:52:44,534 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:52:44,664 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:52:44,664 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:52:44,751 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@dc4161' 
2016-08-09 20:52:45,176 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 20:52:46,479 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@d59286: startup date [Tue Aug 09 20:52:42 ICT 2016]; root of context hierarchy 
2016-08-09 20:52:46,483 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:55:04,032 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 20:55:04,048 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 20:55:04,048 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ac3dc3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@eebfca, org.springframework.test.context.transaction.TransactionalTestExecutionListener@718207, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1371b2d] 
2016-08-09 20:55:04,204 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 20:55:04,625 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@d59286: startup date [Tue Aug 09 20:55:04 ICT 2016]; root of context hierarchy 
2016-08-09 20:55:04,750 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 20:55:04,999 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:55:05,031 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 20:55:05,155 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 20:55:05,155 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 20:55:05,155 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 20:55:05,233 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 20:55:05,733 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 20:55:06,715 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:55:06,715 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:55:06,778 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:55:06,778 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:55:06,934 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:55:06,934 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:55:07,074 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@dc4161' 
2016-08-09 20:55:07,464 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 20:55:08,587 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@d59286: startup date [Tue Aug 09 20:55:04 ICT 2016]; root of context hierarchy 
2016-08-09 20:55:08,587 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:55:08,587 INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down' 
2016-08-09 20:55:08,634 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:55:08,634 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:57:49,164 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 20:57:49,164 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 20:57:49,180 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ac3dc3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@eebfca, org.springframework.test.context.transaction.TransactionalTestExecutionListener@718207, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1371b2d] 
2016-08-09 20:57:49,336 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 20:57:49,757 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@d59286: startup date [Tue Aug 09 20:57:49 ICT 2016]; root of context hierarchy 
2016-08-09 20:57:49,882 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 20:57:50,116 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:57:50,147 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 20:57:50,287 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 20:57:50,287 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 20:57:50,287 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 20:57:50,365 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 20:57:50,865 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 20:57:51,832 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:57:51,832 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:57:51,863 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:57:51,863 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:57:51,957 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:57:51,957 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:57:52,035 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@86887b' 
2016-08-09 20:57:52,409 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 20:57:53,548 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@d59286: startup date [Tue Aug 09 20:57:49 ICT 2016]; root of context hierarchy 
2016-08-09 20:57:53,548 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:57:53,548 INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down' 
2016-08-09 20:57:53,595 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:57:53,595 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:58:36,316 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 20:58:36,316 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 20:58:36,332 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ac3dc3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@eebfca, org.springframework.test.context.transaction.TransactionalTestExecutionListener@718207, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1371b2d] 
2016-08-09 20:58:36,488 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 20:58:36,893 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@d59286: startup date [Tue Aug 09 20:58:36 ICT 2016]; root of context hierarchy 
2016-08-09 20:58:37,034 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 20:58:37,283 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:58:37,314 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 20:58:37,439 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 20:58:37,439 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 20:58:37,439 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 20:58:37,517 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 20:58:38,141 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 20:58:39,108 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:58:39,108 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:58:39,171 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:58:39,171 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 20:58:39,202 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:58:39,202 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 20:58:39,311 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@1f24169' 
2016-08-09 20:58:39,701 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 20:58:40,091 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:58:40,185 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:58:40,185 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:58:40,247 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:58:40,310 DEBUG org.hibernate.SQL - 
    select
        count(*) as col_0_0_ 
    from
        m_produk produk0_ 
2016-08-09 20:58:40,310 DEBUG org.hibernate.SQL - 
    select
        count(*) as col_0_0_ 
    from
        m_produk produk0_ 
2016-08-09 20:58:40,372 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:58:40,434 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:58:40,434 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:58:40,450 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2016-08-09 20:58:40,450 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2016-08-09 20:58:40,497 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:58:40,622 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:58:40,622 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:58:40,622 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:58:40,622 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:58:40,622 DEBUG org.hibernate.SQL - 
    delete 
    from
        m_produk 
    where
        id=? 
2016-08-09 20:58:40,622 DEBUG org.hibernate.SQL - 
    delete 
    from
        m_produk 
    where
        id=? 
2016-08-09 20:58:40,653 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:58:40,653 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 20:58:40,684 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 20:58:40,840 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 20:58:40,840 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 20:58:40,856 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@d59286: startup date [Tue Aug 09 20:58:36 ICT 2016]; root of context hierarchy 
2016-08-09 20:58:40,856 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 20:58:40,856 INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down' 
2016-08-09 20:58:40,856 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 20:58:40,856 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:45:14,946 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 21:45:14,977 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 21:45:15,009 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@718207, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1371b2d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3c6f6d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1eb8acf] 
2016-08-09 21:45:15,243 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 21:45:16,241 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 21:45:16 ICT 2016]; root of context hierarchy 
2016-08-09 21:45:16,475 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 21:45:16,927 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 21:45:17,005 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 21:45:17,271 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 21:45:17,271 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 21:45:17,271 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 21:45:17,489 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 21:45:18,612 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 21:45:20,063 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:45:20,063 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:45:20,110 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 21:45:20,110 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 21:45:20,203 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 21:45:20,203 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 21:45:20,297 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@63d9d3' 
2016-08-09 21:45:20,874 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 21:45:21,451 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 21:45:21,779 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 21:45:21,779 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 21:45:21,935 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 21:45:16 ICT 2016]; root of context hierarchy 
2016-08-09 21:45:21,935 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 21:45:21,935 INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down' 
2016-08-09 21:45:21,951 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:45:21,951 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:47:07,778 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 21:47:07,778 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 21:47:07,794 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@718207, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1371b2d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3c6f6d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1eb8acf] 
2016-08-09 21:47:07,934 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 21:47:08,355 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 21:47:08 ICT 2016]; root of context hierarchy 
2016-08-09 21:47:08,496 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 21:47:08,730 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 21:47:08,761 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 21:47:08,886 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 21:47:08,901 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 21:47:08,901 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 21:47:08,964 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 21:47:09,603 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 21:47:10,602 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:47:10,602 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:47:10,633 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 21:47:10,633 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 21:47:10,726 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 21:47:10,726 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 21:47:10,836 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@63d9d3' 
2016-08-09 21:47:11,210 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 21:47:11,569 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 21:47:11,756 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 21:47:11,756 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 21:47:11,865 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 21:47:08 ICT 2016]; root of context hierarchy 
2016-08-09 21:47:11,865 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 21:47:11,865 INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down' 
2016-08-09 21:47:11,881 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:47:11,881 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:47:42,999 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 21:47:42,999 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 21:47:43,030 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@718207, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1371b2d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3c6f6d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1eb8acf] 
2016-08-09 21:47:43,171 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 21:47:43,639 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 21:47:43 ICT 2016]; root of context hierarchy 
2016-08-09 21:47:43,763 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 21:47:44,060 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 21:47:44,091 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 21:47:44,231 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 21:47:44,231 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 21:47:44,231 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 21:47:44,294 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 21:47:45,074 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 21:47:46,072 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:47:46,072 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:47:46,103 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 21:47:46,103 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 21:47:46,181 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 21:47:46,181 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 21:47:46,400 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@63d9d3' 
2016-08-09 21:47:46,805 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 21:47:47,258 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 21:47:47,383 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 21:47:47,383 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 21:47:47,492 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 21:47:43 ICT 2016]; root of context hierarchy 
2016-08-09 21:47:47,492 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 21:47:47,492 INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down' 
2016-08-09 21:47:47,507 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:47:47,507 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:50:16,556 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 21:50:16,556 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 21:50:16,572 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@718207, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1371b2d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3c6f6d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1eb8acf] 
2016-08-09 21:50:16,712 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 21:50:17,164 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 21:50:17 ICT 2016]; root of context hierarchy 
2016-08-09 21:50:17,289 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 21:50:17,554 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 21:50:17,586 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 21:50:17,742 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 21:50:17,742 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 21:50:17,757 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 21:50:17,820 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 21:50:18,459 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 21:50:19,458 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:50:19,458 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:50:19,473 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 21:50:19,473 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 21:50:19,567 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 21:50:19,567 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 21:50:19,660 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@63d9d3' 
2016-08-09 21:50:20,050 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 21:50:20,409 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 21:50:20,550 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 21:50:20,550 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 21:50:20,659 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 21:50:17 ICT 2016]; root of context hierarchy 
2016-08-09 21:50:20,659 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 21:50:20,659 INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down' 
2016-08-09 21:50:20,675 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:50:20,675 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:53:22,013 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 21:53:22,029 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 21:53:22,044 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@718207, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1371b2d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3c6f6d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1eb8acf] 
2016-08-09 21:53:22,200 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 21:53:22,621 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 21:53:22 ICT 2016]; root of context hierarchy 
2016-08-09 21:53:22,746 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 21:53:22,996 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 21:53:23,027 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 21:53:23,152 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 21:53:23,152 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 21:53:23,152 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 21:53:23,230 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 21:53:23,791 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 21:53:24,774 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:53:24,774 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:53:24,790 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 21:53:24,790 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 21:53:24,883 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 21:53:24,883 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 21:53:24,961 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@63d9d3' 
2016-08-09 21:53:25,336 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 21:53:25,695 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 21:53:25,851 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 21:53:25,851 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 21:53:25,960 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 21:53:22 ICT 2016]; root of context hierarchy 
2016-08-09 21:53:25,960 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 21:53:25,960 INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down' 
2016-08-09 21:53:25,960 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:53:25,960 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:55:51,965 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 21:55:51,980 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 21:55:51,980 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@718207, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1371b2d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3c6f6d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1eb8acf] 
2016-08-09 21:55:52,136 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 21:55:52,573 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 21:55:52 ICT 2016]; root of context hierarchy 
2016-08-09 21:55:52,698 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 21:55:52,932 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 21:55:52,963 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 21:55:53,088 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 21:55:53,088 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 21:55:53,104 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 21:55:53,166 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 21:55:53,790 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 21:55:54,757 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:55:54,757 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:55:54,788 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 21:55:54,788 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 21:55:54,866 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 21:55:54,866 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 21:55:54,944 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@63d9d3' 
2016-08-09 21:55:55,334 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 21:55:55,693 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 21:55:55,802 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 21:55:55,802 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 21:55:55,927 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 21:55:55,958 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 21:55:52 ICT 2016]; root of context hierarchy 
2016-08-09 21:55:55,974 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 21:55:55,974 INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down' 
2016-08-09 21:55:56,021 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:55:56,021 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:57:48,878 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 21:57:48,894 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 21:57:48,910 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@718207, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1371b2d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3c6f6d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1eb8acf] 
2016-08-09 21:57:49,050 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 21:57:49,471 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 21:57:49 ICT 2016]; root of context hierarchy 
2016-08-09 21:57:49,596 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 21:57:49,846 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 21:57:49,877 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 21:57:50,002 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 21:57:50,002 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 21:57:50,017 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 21:57:50,080 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 21:57:50,672 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 21:57:51,671 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:57:51,671 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:57:51,686 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 21:57:51,686 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 21:57:51,764 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 21:57:51,764 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 21:57:51,796 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@63d9d3' 
2016-08-09 21:57:52,186 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 21:57:52,529 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 21:57:52,700 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 21:57:52,700 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 21:57:52,825 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 21:57:52,841 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 21:57:49 ICT 2016]; root of context hierarchy 
2016-08-09 21:57:52,841 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 21:57:52,841 INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down' 
2016-08-09 21:57:52,872 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 21:57:52,872 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:01:23,419 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 22:01:23,434 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 22:01:23,450 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@eebfca, org.springframework.test.context.support.DirtiesContextTestExecutionListener@718207, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1371b2d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3c6f6d] 
2016-08-09 22:01:23,590 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 22:01:24,011 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1e18270: startup date [Tue Aug 09 22:01:24 ICT 2016]; root of context hierarchy 
2016-08-09 22:01:24,152 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 22:01:24,401 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:01:24,433 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 22:01:24,557 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 22:01:24,557 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 22:01:24,573 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 22:01:24,635 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 22:01:25,291 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 22:01:26,289 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:01:26,289 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:01:26,305 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:01:26,305 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:01:26,429 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:01:26,429 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:01:26,632 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@d5923a' 
2016-08-09 22:01:27,022 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 22:01:27,350 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1e18270: startup date [Tue Aug 09 22:01:24 ICT 2016]; root of context hierarchy 
2016-08-09 22:01:27,350 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:01:27,350 INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down' 
2016-08-09 22:01:27,350 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:01:27,350 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:03:15,719 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 22:03:15,750 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 22:03:15,750 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@eebfca, org.springframework.test.context.support.DirtiesContextTestExecutionListener@718207, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1371b2d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3c6f6d] 
2016-08-09 22:03:15,890 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 22:03:16,327 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1e18270: startup date [Tue Aug 09 22:03:16 ICT 2016]; root of context hierarchy 
2016-08-09 22:03:16,452 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 22:03:16,701 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:03:16,733 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 22:03:16,857 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 22:03:16,857 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 22:03:16,857 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 22:03:16,935 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 22:03:17,513 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 22:03:18,480 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:03:18,480 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:03:18,511 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:03:18,511 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:03:18,589 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:03:18,589 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:03:18,636 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@d5923a' 
2016-08-09 22:03:19,026 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 22:03:19,353 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1e18270: startup date [Tue Aug 09 22:03:16 ICT 2016]; root of context hierarchy 
2016-08-09 22:03:19,353 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:03:19,353 INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down' 
2016-08-09 22:03:19,353 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:03:19,353 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:06:06,544 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 22:06:06,560 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 22:06:06,576 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@718207, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1371b2d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3c6f6d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1eb8acf] 
2016-08-09 22:06:06,716 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 22:06:07,122 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 22:06:07 ICT 2016]; root of context hierarchy 
2016-08-09 22:06:07,262 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 22:06:07,496 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:06:07,527 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 22:06:07,668 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 22:06:07,668 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 22:06:07,668 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 22:06:07,746 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 22:06:08,338 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 22:06:09,337 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:06:09,337 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:06:09,368 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:06:09,368 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:06:09,446 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:06:09,446 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:06:09,586 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@63d9d3' 
2016-08-09 22:06:09,976 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 22:06:10,335 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:06:10,522 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 22:06:10,522 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 22:06:10,632 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 22:06:07 ICT 2016]; root of context hierarchy 
2016-08-09 22:06:10,632 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:06:10,632 INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down' 
2016-08-09 22:06:10,647 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:06:10,647 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:06:43,164 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 22:06:43,179 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 22:06:43,195 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@718207, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1371b2d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3c6f6d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1eb8acf] 
2016-08-09 22:06:43,335 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 22:06:43,756 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 22:06:43 ICT 2016]; root of context hierarchy 
2016-08-09 22:06:43,881 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 22:06:44,131 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:06:44,162 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 22:06:44,287 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 22:06:44,287 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 22:06:44,287 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 22:06:44,365 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 22:06:44,973 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 22:06:45,956 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:06:45,956 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:06:45,972 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:06:45,972 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:06:46,065 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:06:46,065 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:06:46,206 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@63d9d3' 
2016-08-09 22:06:46,596 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 22:06:46,954 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:06:47,079 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 22:06:47,079 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 22:06:47,220 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:06:47,235 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 22:06:43 ICT 2016]; root of context hierarchy 
2016-08-09 22:06:47,235 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:06:47,235 INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down' 
2016-08-09 22:06:47,266 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:06:47,266 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:08:30,956 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 22:08:30,971 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 22:08:30,987 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@718207, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1371b2d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3c6f6d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1eb8acf] 
2016-08-09 22:08:31,127 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 22:08:31,548 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 22:08:31 ICT 2016]; root of context hierarchy 
2016-08-09 22:08:31,673 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 22:08:31,907 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:08:31,938 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 22:08:32,063 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 22:08:32,079 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 22:08:32,079 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 22:08:32,141 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 22:08:32,703 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 22:08:33,686 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:08:33,686 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:08:33,717 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:08:33,717 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:08:33,779 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:08:33,779 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:08:33,857 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@63d9d3' 
2016-08-09 22:08:34,247 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 22:08:34,606 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:08:34,793 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 22:08:34,793 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 22:08:34,918 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:08:34,965 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 22:08:31 ICT 2016]; root of context hierarchy 
2016-08-09 22:08:34,965 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:08:34,965 INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down' 
2016-08-09 22:08:35,012 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:08:35,012 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:09:48,057 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 22:09:48,073 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 22:09:48,088 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@718207, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1371b2d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3c6f6d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1eb8acf] 
2016-08-09 22:09:48,213 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 22:09:48,650 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 22:09:48 ICT 2016]; root of context hierarchy 
2016-08-09 22:09:48,775 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 22:09:49,009 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:09:49,055 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 22:09:49,180 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 22:09:49,180 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 22:09:49,180 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 22:09:49,258 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 22:09:49,851 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 22:09:50,834 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:09:50,834 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:09:50,849 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:09:50,849 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:09:50,912 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:09:50,912 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:09:51,037 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@63d9d3' 
2016-08-09 22:09:51,427 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 22:09:51,801 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:09:51,910 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 22:09:51,910 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 22:09:52,051 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:09:52,097 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 22:09:48 ICT 2016]; root of context hierarchy 
2016-08-09 22:09:52,097 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:09:52,097 INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down' 
2016-08-09 22:09:52,144 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:09:52,144 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:11:07,940 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 22:11:07,956 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 22:11:07,971 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@718207, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1371b2d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3c6f6d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1eb8acf] 
2016-08-09 22:11:08,112 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 22:11:08,533 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 22:11:08 ICT 2016]; root of context hierarchy 
2016-08-09 22:11:08,658 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 22:11:08,907 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:11:08,938 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 22:11:09,063 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 22:11:09,063 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 22:11:09,063 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 22:11:09,141 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 22:11:09,750 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 22:11:10,686 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:11:10,686 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:11:10,717 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:11:10,717 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:11:10,795 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:11:10,795 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:11:10,920 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@63d9d3' 
2016-08-09 22:11:11,310 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 22:11:11,731 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:11:11,902 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 22:11:11,902 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 22:11:12,043 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:11:12,058 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 22:11:08 ICT 2016]; root of context hierarchy 
2016-08-09 22:11:12,074 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:11:12,074 INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down' 
2016-08-09 22:11:12,121 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:11:12,121 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:20:30,507 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 22:20:30,523 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 22:20:30,539 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@718207, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1371b2d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3c6f6d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1eb8acf] 
2016-08-09 22:20:30,679 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 22:20:31,100 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 22:20:31 ICT 2016]; root of context hierarchy 
2016-08-09 22:20:31,225 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 22:20:31,475 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:20:31,506 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 22:20:31,631 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 22:20:31,631 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 22:20:31,631 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 22:20:31,709 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 22:20:32,286 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 22:20:33,269 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:20:33,269 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:20:33,284 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:20:33,284 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:20:33,378 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:20:33,378 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:20:33,440 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@63d9d3' 
2016-08-09 22:20:33,815 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 22:20:34,189 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:20:34,314 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:20:34,314 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:20:34,361 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:20:34,408 DEBUG org.hibernate.SQL - 
    select
        count(*) as col_0_0_ 
    from
        m_produk produk0_ 
2016-08-09 22:20:34,408 DEBUG org.hibernate.SQL - 
    select
        count(*) as col_0_0_ 
    from
        m_produk produk0_ 
2016-08-09 22:20:34,548 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:20:34,610 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:20:34,610 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:20:34,626 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2016-08-09 22:20:34,626 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2016-08-09 22:20:34,657 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:20:34,704 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:20:34,704 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:20:34,720 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:20:34,720 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:20:34,720 DEBUG org.hibernate.SQL - 
    delete 
    from
        m_produk 
    where
        id=? 
2016-08-09 22:20:34,720 DEBUG org.hibernate.SQL - 
    delete 
    from
        m_produk 
    where
        id=? 
2016-08-09 22:20:34,735 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:20:34,735 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:20:34,751 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:20:34,798 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 22:20:34,798 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 22:20:34,813 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 22:20:31 ICT 2016]; root of context hierarchy 
2016-08-09 22:20:34,813 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:35:57,910 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 22:35:57,910 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 22:35:57,926 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@718207, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1371b2d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3c6f6d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1eb8acf] 
2016-08-09 22:35:58,066 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 22:35:58,534 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 22:35:58 ICT 2016]; root of context hierarchy 
2016-08-09 22:35:58,659 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 22:35:58,893 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:35:58,924 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 22:35:59,065 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 22:35:59,065 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 22:35:59,065 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 22:35:59,143 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 22:35:59,767 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 22:36:00,749 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:36:00,749 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:36:00,843 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:36:00,843 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:36:00,905 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:36:00,905 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:36:00,952 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@63d9d3' 
2016-08-09 22:36:01,342 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 22:36:01,717 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:36:01,857 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:36:01,857 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:36:01,904 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:36:01,982 DEBUG org.hibernate.SQL - 
    select
        count(*) as col_0_0_ 
    from
        m_produk produk0_ 
2016-08-09 22:36:01,982 DEBUG org.hibernate.SQL - 
    select
        count(*) as col_0_0_ 
    from
        m_produk produk0_ 
2016-08-09 22:36:02,013 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:36:02,060 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:36:02,060 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:36:02,091 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2016-08-09 22:36:02,091 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2016-08-09 22:36:02,153 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:36:02,263 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:36:02,263 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:36:02,278 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:36:02,278 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:36:02,278 DEBUG org.hibernate.SQL - 
    delete 
    from
        m_produk 
    where
        id=? 
2016-08-09 22:36:02,278 DEBUG org.hibernate.SQL - 
    delete 
    from
        m_produk 
    where
        id=? 
2016-08-09 22:36:02,325 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:36:02,325 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:36:02,356 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:36:02,450 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 22:36:02,450 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 22:36:02,465 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 22:35:58 ICT 2016]; root of context hierarchy 
2016-08-09 22:36:02,465 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:37:17,196 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 22:37:17,196 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 22:37:17,211 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@718207, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1371b2d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3c6f6d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1eb8acf] 
2016-08-09 22:37:17,367 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 22:37:17,898 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 22:37:17 ICT 2016]; root of context hierarchy 
2016-08-09 22:37:18,054 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 22:37:18,303 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:37:18,334 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 22:37:18,459 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 22:37:18,459 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 22:37:18,459 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 22:37:18,522 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 22:37:19,130 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 22:37:20,113 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:37:20,113 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:37:20,238 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:37:20,238 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:37:20,300 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:37:20,300 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:37:20,394 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@63d9d3' 
2016-08-09 22:37:20,784 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 22:37:21,080 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 22:37:17 ICT 2016]; root of context hierarchy 
2016-08-09 22:37:21,080 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:37:50,091 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2016-08-09 22:37:50,091 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext] 
2016-08-09 22:37:50,107 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@718207, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1371b2d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3c6f6d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1eb8acf] 
2016-08-09 22:37:50,247 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2016-08-09 22:37:50,669 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 22:37:50 ICT 2016]; root of context hierarchy 
2016-08-09 22:37:50,809 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-09 22:37:51,059 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-09 22:37:51,090 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-09 22:37:51,215 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-09 22:37:51,215 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-09 22:37:51,215 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-09 22:37:51,293 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-09 22:37:51,885 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-09 22:37:52,868 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:37:52,868 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-09 22:37:52,993 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:37:52,993 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-09 22:37:53,071 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:37:53,071 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-09 22:37:53,133 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@63d9d3' 
2016-08-09 22:37:53,523 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2016-08-09 22:37:53,898 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:37:53,991 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:37:53,991 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:37:54,054 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:37:54,085 DEBUG org.hibernate.SQL - 
    select
        count(*) as col_0_0_ 
    from
        m_produk produk0_ 
2016-08-09 22:37:54,085 DEBUG org.hibernate.SQL - 
    select
        count(*) as col_0_0_ 
    from
        m_produk produk0_ 
2016-08-09 22:37:54,116 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:37:54,163 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:37:54,163 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:37:54,179 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2016-08-09 22:37:54,179 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2016-08-09 22:37:54,225 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:37:54,303 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:37:54,303 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:37:54,319 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:37:54,319 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:37:54,319 DEBUG org.hibernate.SQL - 
    delete 
    from
        m_produk 
    where
        id=? 
2016-08-09 22:37:54,319 DEBUG org.hibernate.SQL - 
    delete 
    from
        m_produk 
    where
        id=? 
2016-08-09 22:37:54,319 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:37:54,319 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2016-08-09 22:37:54,350 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2016-08-09 22:37:54,397 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 22:37:54,397 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2016-08-09 22:37:54,413 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1b0d3ed: startup date [Tue Aug 09 22:37:50 ICT 2016]; root of context hierarchy 
2016-08-09 22:37:54,413 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2016-08-14 20:37:43,307 INFO  o.s.c.s.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@cf57e3: startup date [Sun Aug 14 20:37:43 ICT 2016]; root of context hierarchy 
2016-08-14 20:37:43,416 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml] 
2016-08-14 20:37:44,492 INFO  o.s.c.s.PropertySourcesPlaceholderConfigurer - Loading properties file from URL [file:/D:/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/jdbc.properties] 
2016-08-14 20:37:44,820 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2016-08-14 20:37:44,960 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2016-08-14 20:37:45,241 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2016-08-14 20:37:45,241 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2016-08-14 20:37:45,241 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2016-08-14 20:37:45,428 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2016-08-14 20:37:46,317 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2016-08-14 20:37:47,690 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-14 20:37:47,690 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2016-08-14 20:37:48,002 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-14 20:37:48,002 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2016-08-14 20:37:48,158 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-14 20:37:48,158 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2016-08-14 20:37:48,455 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@d0ac62' 
2016-08-14 20:37:49,125 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-19 19:55:04,837 INFO  o.s.c.s.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@17f6480: startup date [Sun Aug 19 19:55:04 WIB 2018]; root of context hierarchy 
2018-08-19 19:55:05,141 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml] 
2018-08-19 19:55:08,019 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-19 19:55:08,214 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-19 19:55:08,591 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-19 19:55:08,594 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-19 19:55:08,603 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-19 19:55:08,861 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-19 19:55:11,054 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2018-08-19 19:55:12,472 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-19 19:55:12,472 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-19 19:55:12,684 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-19 19:55:12,684 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-19 19:55:13,138 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-19 19:55:13,138 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-19 19:55:13,486 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5325cf' 
2018-08-19 19:55:13,635 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-19 19:55:15,254 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-19 20:45:22,146 INFO  o.s.c.s.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@12cbfa: startup date [Sun Aug 19 20:45:22 WIB 2018]; root of context hierarchy 
2018-08-19 20:45:22,346 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [applicationContext.xml] 
2018-08-20 10:51:55,730 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2018-08-20 10:51:55,822 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1606c0b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ec1f8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1445d7f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@396c1e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3f5566] 
2018-08-20 10:51:56,053 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2018-08-20 10:51:57,565 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@6a205: startup date [Mon Aug 20 10:51:57 WIB 2018]; root of context hierarchy 
2018-08-20 10:51:58,884 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 10:51:59,060 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 10:51:59,631 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.2.17.Final} 
2018-08-20 10:51:59,636 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 10:51:59,880 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 10:52:03,105 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2018-08-20 10:52:05,348 DEBUG org.hibernate.SQL - 
    
    drop table if exists m_produk 
2018-08-20 10:52:05,348 DEBUG org.hibernate.SQL - 
    
    drop table if exists m_produk 
2018-08-20 10:52:06,236 DEBUG org.hibernate.SQL - 
    
    create table m_produk (
       id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) engine=InnoDB 
2018-08-20 10:52:06,236 DEBUG org.hibernate.SQL - 
    
    create table m_produk (
       id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) engine=InnoDB 
2018-08-20 10:52:06,485 DEBUG org.hibernate.SQL - 
    
    alter table m_produk 
       add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 10:52:06,485 DEBUG org.hibernate.SQL - 
    
    alter table m_produk 
       add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 10:52:06,833 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@b97ced' 
2018-08-20 10:52:06,951 WARN  o.s.c.s.GenericApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml]: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties; 
2018-08-20 10:52:06,994 ERROR o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ec1f8] to prepare test instance [com.agung.template.springjpa.produktest.ProdukDaoTest@494b6] 
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:107)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:242)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml]: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1699)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:859)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:107)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 31 common frames omitted
Caused by: java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties;
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:124)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:890)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1695)
	... 46 common frames omitted
2018-08-20 10:52:07,044 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2018-08-20 10:52:07,244 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1be4f71: startup date [Mon Aug 20 10:52:07 WIB 2018]; root of context hierarchy 
2018-08-20 10:52:07,358 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 10:52:07,359 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 10:52:07,413 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2018-08-20 10:52:07,450 DEBUG org.hibernate.SQL - 
    
    drop table if exists m_produk 
2018-08-20 10:52:07,450 DEBUG org.hibernate.SQL - 
    
    drop table if exists m_produk 
2018-08-20 10:52:07,687 DEBUG org.hibernate.SQL - 
    
    create table m_produk (
       id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) engine=InnoDB 
2018-08-20 10:52:07,687 DEBUG org.hibernate.SQL - 
    
    create table m_produk (
       id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) engine=InnoDB 
2018-08-20 10:52:07,798 DEBUG org.hibernate.SQL - 
    
    alter table m_produk 
       add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 10:52:07,798 DEBUG org.hibernate.SQL - 
    
    alter table m_produk 
       add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 10:52:08,014 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@b97ced' 
2018-08-20 10:52:08,036 WARN  o.s.c.s.GenericApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml]: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties; 
2018-08-20 10:52:08,040 ERROR o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ec1f8] to prepare test instance [com.agung.template.springjpa.produktest.ProdukDaoTest@12acd89] 
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:107)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:242)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml]: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1699)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:859)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:107)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 31 common frames omitted
Caused by: java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties;
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:124)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:890)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1695)
	... 46 common frames omitted
2018-08-20 10:52:08,045 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2018-08-20 10:52:08,185 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@8ed9cf: startup date [Mon Aug 20 10:52:08 WIB 2018]; root of context hierarchy 
2018-08-20 10:52:08,308 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 10:52:08,309 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 10:52:08,357 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2018-08-20 10:52:08,406 DEBUG org.hibernate.SQL - 
    
    drop table if exists m_produk 
2018-08-20 10:52:08,406 DEBUG org.hibernate.SQL - 
    
    drop table if exists m_produk 
2018-08-20 10:52:08,480 DEBUG org.hibernate.SQL - 
    
    create table m_produk (
       id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) engine=InnoDB 
2018-08-20 10:52:08,480 DEBUG org.hibernate.SQL - 
    
    create table m_produk (
       id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) engine=InnoDB 
2018-08-20 10:52:08,623 DEBUG org.hibernate.SQL - 
    
    alter table m_produk 
       add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 10:52:08,623 DEBUG org.hibernate.SQL - 
    
    alter table m_produk 
       add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 10:52:08,838 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@b97ced' 
2018-08-20 10:52:08,855 WARN  o.s.c.s.GenericApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml]: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties; 
2018-08-20 10:52:08,860 ERROR o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ec1f8] to prepare test instance [com.agung.template.springjpa.produktest.ProdukDaoTest@105a99b] 
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:107)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:242)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml]: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1699)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:859)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:107)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 31 common frames omitted
Caused by: java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties;
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:124)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:890)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1695)
	... 46 common frames omitted
2018-08-20 10:52:08,865 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2018-08-20 10:52:08,969 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1f60a8c: startup date [Mon Aug 20 10:52:08 WIB 2018]; root of context hierarchy 
2018-08-20 10:52:09,076 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 10:52:09,076 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 10:52:09,115 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2018-08-20 10:52:09,142 DEBUG org.hibernate.SQL - 
    
    drop table if exists m_produk 
2018-08-20 10:52:09,142 DEBUG org.hibernate.SQL - 
    
    drop table if exists m_produk 
2018-08-20 10:52:09,303 DEBUG org.hibernate.SQL - 
    
    create table m_produk (
       id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) engine=InnoDB 
2018-08-20 10:52:09,303 DEBUG org.hibernate.SQL - 
    
    create table m_produk (
       id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) engine=InnoDB 
2018-08-20 10:52:09,393 DEBUG org.hibernate.SQL - 
    
    alter table m_produk 
       add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 10:52:09,393 DEBUG org.hibernate.SQL - 
    
    alter table m_produk 
       add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 10:52:09,631 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@b97ced' 
2018-08-20 10:52:09,651 WARN  o.s.c.s.GenericApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml]: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties; 
2018-08-20 10:52:09,654 ERROR o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ec1f8] to prepare test instance [com.agung.template.springjpa.produktest.ProdukDaoTest@1f8def] 
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:107)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:242)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml]: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1699)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:859)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:107)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 31 common frames omitted
Caused by: java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties;
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:124)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:890)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1695)
	... 46 common frames omitted
2018-08-20 10:52:09,663 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2018-08-20 10:52:09,783 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@ead3af: startup date [Mon Aug 20 10:52:09 WIB 2018]; root of context hierarchy 
2018-08-20 10:52:09,871 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 10:52:09,874 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 10:52:09,930 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2018-08-20 10:52:09,990 DEBUG org.hibernate.SQL - 
    
    drop table if exists m_produk 
2018-08-20 10:52:09,990 DEBUG org.hibernate.SQL - 
    
    drop table if exists m_produk 
2018-08-20 10:52:10,098 DEBUG org.hibernate.SQL - 
    
    create table m_produk (
       id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) engine=InnoDB 
2018-08-20 10:52:10,098 DEBUG org.hibernate.SQL - 
    
    create table m_produk (
       id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) engine=InnoDB 
2018-08-20 10:52:10,220 DEBUG org.hibernate.SQL - 
    
    alter table m_produk 
       add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 10:52:10,220 DEBUG org.hibernate.SQL - 
    
    alter table m_produk 
       add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 10:52:10,423 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@b97ced' 
2018-08-20 10:52:10,441 WARN  o.s.c.s.GenericApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml]: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties; 
2018-08-20 10:52:10,443 ERROR o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ec1f8] to prepare test instance [com.agung.template.springjpa.produktest.ProdukDaoTest@b03411] 
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:107)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:242)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml]: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1699)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:859)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:107)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 31 common frames omitted
Caused by: java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties;
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:124)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:890)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1695)
	... 46 common frames omitted
2018-08-20 10:52:10,464 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2018-08-20 10:52:10,531 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@fcf6c0, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ac188d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@26b7ee, org.springframework.test.context.transaction.TransactionalTestExecutionListener@123faef, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@b8437d] 
2018-08-20 10:52:10,548 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2018-08-20 10:52:10,638 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@2a4417: startup date [Mon Aug 20 10:52:10 WIB 2018]; root of context hierarchy 
2018-08-20 10:52:10,721 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 10:52:10,722 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 10:52:10,775 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2018-08-20 10:52:10,841 DEBUG org.hibernate.SQL - 
    
    drop table if exists m_produk 
2018-08-20 10:52:10,841 DEBUG org.hibernate.SQL - 
    
    drop table if exists m_produk 
2018-08-20 10:52:10,946 DEBUG org.hibernate.SQL - 
    
    create table m_produk (
       id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) engine=InnoDB 
2018-08-20 10:52:10,946 DEBUG org.hibernate.SQL - 
    
    create table m_produk (
       id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) engine=InnoDB 
2018-08-20 10:52:11,112 DEBUG org.hibernate.SQL - 
    
    alter table m_produk 
       add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 10:52:11,112 DEBUG org.hibernate.SQL - 
    
    alter table m_produk 
       add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 10:52:11,427 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@b97ced' 
2018-08-20 10:52:11,447 WARN  o.s.c.s.GenericApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml]: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties; 
2018-08-20 10:52:11,450 ERROR o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ac188d] to prepare test instance [com.agung.template.springjpa.produktest.utilitytest.JSONConverterTest@1b377c5] 
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:107)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:242)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml]: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1699)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:859)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:107)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 31 common frames omitted
Caused by: java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties;
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:124)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:890)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1695)
	... 46 common frames omitted
2018-08-20 10:52:11,469 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2018-08-20 10:52:11,597 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@33f5cd: startup date [Mon Aug 20 10:52:11 WIB 2018]; root of context hierarchy 
2018-08-20 10:52:11,684 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 10:52:11,685 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 10:52:11,724 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2018-08-20 10:52:11,762 DEBUG org.hibernate.SQL - 
    
    drop table if exists m_produk 
2018-08-20 10:52:11,762 DEBUG org.hibernate.SQL - 
    
    drop table if exists m_produk 
2018-08-20 10:52:11,892 DEBUG org.hibernate.SQL - 
    
    create table m_produk (
       id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) engine=InnoDB 
2018-08-20 10:52:11,892 DEBUG org.hibernate.SQL - 
    
    create table m_produk (
       id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) engine=InnoDB 
2018-08-20 10:52:12,006 DEBUG org.hibernate.SQL - 
    
    alter table m_produk 
       add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 10:52:12,006 DEBUG org.hibernate.SQL - 
    
    alter table m_produk 
       add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 10:52:12,185 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@b97ced' 
2018-08-20 10:52:12,208 WARN  o.s.c.s.GenericApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml]: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties; 
2018-08-20 10:52:12,209 ERROR o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ac188d] to prepare test instance [com.agung.template.springjpa.produktest.utilitytest.JSONConverterTest@c28305] 
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:107)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:242)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml]: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1699)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:859)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:107)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 31 common frames omitted
Caused by: java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties;
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:124)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:890)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1695)
	... 46 common frames omitted
2018-08-20 10:52:58,415 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e84876: startup date [Mon Aug 20 10:52:58 WIB 2018]; root of context hierarchy 
2018-08-20 10:52:58,855 WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [com.agung.template.springjpa.Config]; nested exception is java.io.FileNotFoundException: class path resource [classpath*:jdbc.properties] cannot be opened because it does not exist 
2018-08-20 10:53:41,920 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e84876: startup date [Mon Aug 20 10:53:41 WIB 2018]; root of context hierarchy 
2018-08-20 10:53:43,622 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$fb7505e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 10:53:43,766 ERROR com.zaxxer.hikari.HikariConfig - Failed to load driver class ${jdbc.driver} from HikariConfig class classloader sun.misc.Launcher$AppClassLoader@19e0bfd 
2018-08-20 10:53:43,784 WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactoryBean' defined in com.agung.template.springjpa.Config: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean]: Factory method 'entityManagerFactoryBean' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'initDataSource' defined in com.agung.template.springjpa.Config: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'initDataSource' threw exception; nested exception is java.lang.RuntimeException: Failed to load driver class ${jdbc.driver} in either of HikariConfig class loader or Thread context classloader 
2018-08-20 10:56:57,781 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e84876: startup date [Mon Aug 20 10:56:57 WIB 2018]; root of context hierarchy 
2018-08-20 10:56:58,640 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$fb7505e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 10:56:58,818 ERROR com.zaxxer.hikari.HikariConfig - Failed to load driver class ${jdbc.driver} from HikariConfig class classloader sun.misc.Launcher$AppClassLoader@19e0bfd 
2018-08-20 10:56:58,826 WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'entityManagerFactoryBean' defined in com.agung.template.springjpa.Config: Unsatisfied dependency expressed through method 'entityManagerFactoryBean' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'initDataSource' defined in com.agung.template.springjpa.Config: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'initDataSource' threw exception; nested exception is java.lang.RuntimeException: Failed to load driver class ${jdbc.driver} in either of HikariConfig class loader or Thread context classloader 
2018-08-20 10:57:38,137 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e84876: startup date [Mon Aug 20 10:57:38 WIB 2018]; root of context hierarchy 
2018-08-20 10:57:38,969 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$fb7505e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 10:57:39,125 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 10:57:39,197 WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'entityManagerFactoryBean' defined in com.agung.template.springjpa.Config: Unsatisfied dependency expressed through method 'entityManagerFactoryBean' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'initDataSource' defined in com.agung.template.springjpa.Config: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'initDataSource' threw exception; nested exception is java.lang.RuntimeException: Driver com.mysql.jdbc.Driver claims to not accept jdbcUrl, ${jdbc.url} 
2018-08-20 10:58:06,897 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e84876: startup date [Mon Aug 20 10:58:06 WIB 2018]; root of context hierarchy 
2018-08-20 10:58:07,730 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$fb7505e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 10:58:07,874 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 10:58:07,898 WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'entityManagerFactoryBean' defined in com.agung.template.springjpa.Config: Unsatisfied dependency expressed through method 'entityManagerFactoryBean' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'initDataSource' defined in com.agung.template.springjpa.Config: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'initDataSource' threw exception; nested exception is java.lang.RuntimeException: Driver com.mysql.jdbc.Driver claims to not accept jdbcUrl, ${jdbc.url} 
2018-08-20 10:59:14,274 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e84876: startup date [Mon Aug 20 10:59:14 WIB 2018]; root of context hierarchy 
2018-08-20 10:59:15,204 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$fb7505e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 10:59:15,336 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 10:59:15,374 WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'entityManagerFactoryBean' defined in com.agung.template.springjpa.Config: Unsatisfied dependency expressed through method 'entityManagerFactoryBean' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'initDataSource' defined in com.agung.template.springjpa.Config: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'initDataSource' threw exception; nested exception is java.lang.RuntimeException: Driver com.mysql.jdbc.Driver claims to not accept jdbcUrl, ${jdbc.url} 
2018-08-20 11:00:04,867 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e84876: startup date [Mon Aug 20 11:00:04 WIB 2018]; root of context hierarchy 
2018-08-20 11:00:05,780 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$fb7505e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:00:05,920 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:00:06,850 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:00:07,435 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:00:07,570 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:00:07,954 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.2.17.Final} 
2018-08-20 11:00:07,959 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:00:08,163 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:00:08,781 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect 
2018-08-20 11:00:10,262 WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactoryBean' defined in com.agung.template.springjpa.Config: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties; 
2018-08-20 11:00:10,263 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated... 
2018-08-20 11:00:10,274 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed. 
2018-08-20 11:02:10,418 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e84876: startup date [Mon Aug 20 11:02:10 WIB 2018]; root of context hierarchy 
2018-08-20 11:02:11,349 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$fb7505e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:02:11,468 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:02:12,010 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:02:12,397 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:02:12,434 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:02:12,613 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.2.17.Final} 
2018-08-20 11:02:12,616 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:02:12,711 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:02:13,084 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect 
2018-08-20 11:02:14,387 WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactoryBean' defined in com.agung.template.springjpa.Config: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties; 
2018-08-20 11:02:14,388 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated... 
2018-08-20 11:02:14,395 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed. 
2018-08-20 11:04:07,612 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e84876: startup date [Mon Aug 20 11:04:07 WIB 2018]; root of context hierarchy 
2018-08-20 11:04:08,434 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$fb7505e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:04:08,572 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:04:09,080 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:04:09,478 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:04:09,518 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:04:09,681 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.2.17.Final} 
2018-08-20 11:04:09,685 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:04:09,801 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:04:10,179 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect 
2018-08-20 11:04:11,284 WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactoryBean' defined in com.agung.template.springjpa.Config: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties; 
2018-08-20 11:04:11,285 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated... 
2018-08-20 11:04:11,292 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed. 
2018-08-20 11:05:37,927 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e84876: startup date [Mon Aug 20 11:05:37 WIB 2018]; root of context hierarchy 
2018-08-20 11:05:38,908 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$fb7505e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:05:39,035 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:05:39,549 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:05:39,975 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:05:40,022 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:05:40,237 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.2.17.Final} 
2018-08-20 11:05:40,240 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:05:40,336 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:05:40,681 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect 
2018-08-20 11:05:41,769 WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactoryBean' defined in com.agung.template.springjpa.Config: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.hibernate.engine.spi.SessionFactoryImplementor.getProperties()Ljava/util/Properties; 
2018-08-20 11:05:41,770 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated... 
2018-08-20 11:05:41,778 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed. 
2018-08-20 11:11:09,094 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a48474: startup date [Mon Aug 20 11:11:09 WIB 2018]; root of context hierarchy 
2018-08-20 11:11:10,637 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$f3bd1beb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:11:10,860 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:11:11,842 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:11:12,376 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:11:12,530 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:11:12,841 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:11:12,845 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:11:12,862 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:11:13,248 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:11:13,601 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect 
2018-08-20 11:11:14,824 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:11:15,027 WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'produkService': Unsatisfied dependency expressed through field 'produDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'produkDao': Cannot create inner bean '(inner bean)#115fb77' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#115fb77': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'entityManagerFactory' available 
2018-08-20 11:11:15,049 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:11:15,051 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated... 
2018-08-20 11:11:15,068 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed. 
2018-08-20 11:11:45,161 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a48474: startup date [Mon Aug 20 11:11:45 WIB 2018]; root of context hierarchy 
2018-08-20 11:11:46,609 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$f3bd1beb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:11:46,762 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:11:47,273 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:11:47,629 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:11:47,667 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:11:47,810 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:11:47,814 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:11:47,817 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:11:47,914 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:11:48,208 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect 
2018-08-20 11:11:49,321 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:11:49,529 WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'produkService': Unsatisfied dependency expressed through field 'produDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'produkDao': Cannot create inner bean '(inner bean)#115fb77' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#115fb77': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'entityManagerFactory' available 
2018-08-20 11:11:49,531 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:11:49,533 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated... 
2018-08-20 11:11:49,543 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed. 
2018-08-20 11:13:03,680 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a48474: startup date [Mon Aug 20 11:13:03 WIB 2018]; root of context hierarchy 
2018-08-20 11:13:04,663 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$f3bd1beb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:13:04,808 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:13:05,372 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:13:05,730 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:13:05,772 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:13:05,951 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:13:05,960 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:13:05,967 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:13:06,065 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:13:06,389 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect 
2018-08-20 11:13:07,502 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:13:08,432 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:14:01,881 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a48474: startup date [Mon Aug 20 11:14:01 WIB 2018]; root of context hierarchy 
2018-08-20 11:14:02,754 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$f3bd1beb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:14:02,854 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:14:03,373 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:14:03,765 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:14:03,804 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:14:03,981 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:14:03,984 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:14:03,988 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:14:04,073 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:14:04,351 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect 
2018-08-20 11:14:05,371 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:14:06,236 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:15:03,046 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a48474: startup date [Mon Aug 20 11:15:03 WIB 2018]; root of context hierarchy 
2018-08-20 11:15:03,857 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$f3bd1beb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:15:03,969 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:15:04,494 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:15:04,803 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:15:04,840 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:15:04,986 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:15:04,990 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:15:04,993 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:15:05,102 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:15:05,436 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect 
2018-08-20 11:15:06,473 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:15:07,326 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:16:31,811 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a48474: startup date [Mon Aug 20 11:16:31 WIB 2018]; root of context hierarchy 
2018-08-20 11:16:32,615 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$8caedc2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:16:32,724 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:16:33,233 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:16:33,599 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:16:33,636 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:16:33,789 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:16:33,793 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:16:33,796 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:16:33,916 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:16:34,201 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect 
2018-08-20 11:16:35,296 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:16:36,170 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:16:58,412 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a48474: startup date [Mon Aug 20 11:16:58 WIB 2018]; root of context hierarchy 
2018-08-20 11:16:59,321 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$f3bd1beb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:16:59,434 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:16:59,962 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:17:00,303 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:17:00,342 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:17:00,483 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:17:00,487 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:17:00,490 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:17:00,584 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:17:00,891 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect 
2018-08-20 11:17:01,985 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:17:02,826 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:17:35,008 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a48474: startup date [Mon Aug 20 11:17:35 WIB 2018]; root of context hierarchy 
2018-08-20 11:17:35,911 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$f3bd1beb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:17:36,019 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:17:36,593 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:17:36,956 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:17:36,996 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:17:37,177 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:17:37,186 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:17:37,192 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:17:37,296 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:17:37,603 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect 
2018-08-20 11:17:38,706 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:17:39,403 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:19:03,106 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a48474: startup date [Mon Aug 20 11:19:03 WIB 2018]; root of context hierarchy 
2018-08-20 11:19:04,032 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$f3bd1beb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:19:04,148 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:19:04,665 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:19:05,035 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:19:05,072 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:19:05,217 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:19:05,220 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:19:05,224 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:19:05,331 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:19:05,628 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect 
2018-08-20 11:19:06,674 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:19:07,517 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:19:58,945 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a48474: startup date [Mon Aug 20 11:19:58 WIB 2018]; root of context hierarchy 
2018-08-20 11:19:59,772 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$f3bd1beb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:19:59,920 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:20:00,446 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:20:00,789 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:20:00,833 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:20:01,029 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:20:01,033 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:20:01,037 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:20:01,116 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:20:01,416 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect 
2018-08-20 11:20:02,487 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:20:03,314 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:20:59,855 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a48474: startup date [Mon Aug 20 11:20:59 WIB 2018]; root of context hierarchy 
2018-08-20 11:21:00,769 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$f3bd1beb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:21:00,906 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:21:01,439 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:21:01,828 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:21:01,865 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:21:02,014 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:21:02,017 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:21:02,024 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:21:02,147 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:21:02,431 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect 
2018-08-20 11:21:03,474 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:21:04,200 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:21:27,732 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a48474: startup date [Mon Aug 20 11:21:27 WIB 2018]; root of context hierarchy 
2018-08-20 11:21:28,759 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$f3bd1beb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:21:28,887 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:21:29,410 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:21:29,809 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:21:29,848 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:21:30,009 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:21:30,033 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:21:30,041 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:21:30,145 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:21:30,434 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect 
2018-08-20 11:21:31,469 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:21:32,166 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:22:34,732 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a48474: startup date [Mon Aug 20 11:22:34 WIB 2018]; root of context hierarchy 
2018-08-20 11:22:35,616 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$f3bd1beb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:22:35,733 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:22:36,263 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:22:36,614 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:22:36,652 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:22:36,842 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:22:36,850 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:22:36,854 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:22:36,941 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:22:37,235 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect 
2018-08-20 11:22:38,297 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:22:39,131 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:23:02,039 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2018-08-20 11:23:02,078 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@16da883, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1afc369, org.springframework.test.context.support.DirtiesContextTestExecutionListener@19d4f69, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1c43f4e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@10dbf45] 
2018-08-20 11:23:02,284 INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from URL [file:/media/agung/DATA/5.PROJECK/JAVA%20DEVELOPMENT/1.TEMPLATE%20PROJECK/Template-Projeck-SpringDataJpa/target/classes/applicationContext.xml] 
2018-08-20 11:23:03,567 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@17f23d9: startup date [Mon Aug 20 11:23:03 WIB 2018]; root of context hierarchy 
2018-08-20 11:23:04,451 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:23:04,502 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:23:04,723 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:23:04,728 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:23:04,732 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:23:04,855 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:23:05,746 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2018-08-20 11:23:07,076 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:23:07,076 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:23:07,224 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-20 11:23:07,224 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-20 11:23:07,486 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 11:23:07,486 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 11:23:07,745 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@1942b48' 
2018-08-20 11:23:07,862 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:23:08,860 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:23:09,972 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2018-08-20 11:23:10,388 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:23:10,388 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:23:10,595 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2018-08-20 11:23:10,897 DEBUG org.hibernate.SQL - 
    select
        count(*) as col_0_0_ 
    from
        m_produk produk0_ 
2018-08-20 11:23:10,897 DEBUG org.hibernate.SQL - 
    select
        count(*) as col_0_0_ 
    from
        m_produk produk0_ 
2018-08-20 11:23:11,067 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2018-08-20 11:23:11,311 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:23:11,311 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:23:11,389 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:23:11,389 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:23:11,510 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2018-08-20 11:23:11,775 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2018-08-20 11:23:12,056 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2018-08-20 11:23:12,056 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2018-08-20 11:23:12,067 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@17f23d9: startup date [Mon Aug 20 11:23:03 WIB 2018]; root of context hierarchy 
2018-08-20 11:23:12,074 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:24:35,820 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2018-08-20 11:24:35,857 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@cf48b7, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@19b62af, org.springframework.test.context.support.DirtiesContextTestExecutionListener@dd8682, org.springframework.test.context.transaction.TransactionalTestExecutionListener@16da883, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1afc369] 
2018-08-20 11:24:36,165 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1f2a664: startup date [Mon Aug 20 11:24:36 WIB 2018]; root of context hierarchy 
2018-08-20 11:24:37,261 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$5c2aa547] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:24:37,477 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:24:38,038 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:24:38,414 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:24:38,478 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:24:38,750 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:24:38,754 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:24:38,757 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:24:38,857 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:24:39,200 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect 
2018-08-20 11:24:40,720 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:24:41,958 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:24:42,683 ERROR org.dbunit.database.DatabaseDataSet - Table 'm_produk' not found in tableMap=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[], _tableMap={}, _caseSensitiveTableNames=false] 
2018-08-20 11:24:42,716 ERROR org.dbunit.database.DatabaseDataSet - Table 'm_produk' not found in tableMap=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[], _tableMap={}, _caseSensitiveTableNames=false] 
2018-08-20 11:24:42,730 ERROR org.dbunit.database.DatabaseDataSet - Table 'm_produk' not found in tableMap=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[], _tableMap={}, _caseSensitiveTableNames=false] 
2018-08-20 11:24:42,780 ERROR org.dbunit.database.DatabaseDataSet - Table 'm_produk' not found in tableMap=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[], _tableMap={}, _caseSensitiveTableNames=false] 
2018-08-20 11:24:42,793 ERROR org.dbunit.database.DatabaseDataSet - Table 'm_produk' not found in tableMap=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[], _tableMap={}, _caseSensitiveTableNames=false] 
2018-08-20 11:24:42,882 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1f2a664: startup date [Mon Aug 20 11:24:36 WIB 2018]; root of context hierarchy 
2018-08-20 11:24:42,916 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:24:42,932 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated... 
2018-08-20 11:24:42,991 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed. 
2018-08-20 11:26:28,418 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2018-08-20 11:26:28,459 INFO  o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@cf48b7, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@19b62af, org.springframework.test.context.support.DirtiesContextTestExecutionListener@dd8682, org.springframework.test.context.transaction.TransactionalTestExecutionListener@16da883, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1afc369] 
2018-08-20 11:26:28,744 INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1f2a664: startup date [Mon Aug 20 11:26:28 WIB 2018]; root of context hierarchy 
2018-08-20 11:26:29,789 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$5c2aa547] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:26:29,994 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:26:30,516 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:26:30,876 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:26:30,939 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:26:31,183 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:26:31,187 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:26:31,191 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:26:31,301 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:26:31,645 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2018-08-20 11:26:32,996 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:26:32,996 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:26:33,063 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-20 11:26:33,063 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-20 11:26:33,183 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 11:26:33,183 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 11:26:33,365 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@dcd8c0' 
2018-08-20 11:26:33,480 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:26:34,416 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:26:35,235 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2018-08-20 11:26:36,003 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:26:36,003 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:26:36,168 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2018-08-20 11:26:36,417 DEBUG org.hibernate.SQL - 
    select
        count(*) as col_0_0_ 
    from
        m_produk produk0_ 
2018-08-20 11:26:36,417 DEBUG org.hibernate.SQL - 
    select
        count(*) as col_0_0_ 
    from
        m_produk produk0_ 
2018-08-20 11:26:36,544 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2018-08-20 11:26:36,766 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:26:36,766 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:26:36,812 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:26:36,812 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:26:36,913 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2018-08-20 11:26:37,159 WARN  o.d.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'MySQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products. 
2018-08-20 11:26:37,373 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2018-08-20 11:26:37,373 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2018-08-20 11:26:37,399 INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1f2a664: startup date [Mon Aug 20 11:26:28 WIB 2018]; root of context hierarchy 
2018-08-20 11:26:37,402 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:26:37,404 INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down' 
2018-08-20 11:26:37,406 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:26:37,406 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:26:37,461 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated... 
2018-08-20 11:26:37,470 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed. 
2018-08-20 11:27:09,161 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a48474: startup date [Mon Aug 20 11:27:09 WIB 2018]; root of context hierarchy 
2018-08-20 11:27:10,035 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$f3bd1beb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:27:10,156 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:27:10,674 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:27:11,027 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:27:11,065 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:27:11,237 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:27:11,240 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:27:11,243 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:27:11,336 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:27:11,620 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2018-08-20 11:27:12,652 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:27:12,652 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:27:12,684 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-20 11:27:12,684 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-20 11:27:12,790 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 11:27:12,790 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 11:27:13,005 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@31c2ee' 
2018-08-20 11:27:13,080 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:27:13,796 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:30:41,303 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@9711b: startup date [Mon Aug 20 11:30:41 WIB 2018]; root of context hierarchy 
2018-08-20 11:30:42,196 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$fb7505e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:30:42,307 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:30:42,869 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:30:43,208 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:30:43,244 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:30:43,392 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:30:43,396 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:30:43,400 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:30:43,505 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:30:43,803 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2018-08-20 11:30:44,813 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:30:44,813 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:30:44,938 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-20 11:30:44,938 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-20 11:30:45,200 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 11:30:45,200 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 11:30:45,381 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@101c80' 
2018-08-20 11:30:45,470 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:30:46,284 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:30:46,998 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:30:46,998 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:30:47,134 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:30:47,134 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:30:47,258 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ limit ? 
2018-08-20 11:30:47,258 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ limit ? 
2018-08-20 11:32:19,935 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@9711b: startup date [Mon Aug 20 11:32:19 WIB 2018]; root of context hierarchy 
2018-08-20 11:32:20,847 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$fb7505e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:32:20,970 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:32:21,491 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:32:21,847 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:32:21,885 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:32:22,035 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:32:22,038 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:32:22,041 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:32:22,138 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:32:22,441 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2018-08-20 11:32:23,387 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:32:23,387 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:32:23,461 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-20 11:32:23,461 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-20 11:32:23,899 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 11:32:23,899 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 11:32:24,249 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@101c80' 
2018-08-20 11:32:24,331 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:32:25,105 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:32:25,773 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:32:25,773 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:32:25,883 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:32:25,883 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:32:26,041 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ limit ? 
2018-08-20 11:32:26,041 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ limit ? 
2018-08-20 11:32:26,070 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:32:26,070 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:35:57,797 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@9711b: startup date [Mon Aug 20 11:35:57 WIB 2018]; root of context hierarchy 
2018-08-20 11:35:58,631 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$fb7505e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:35:58,760 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:35:59,296 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:35:59,749 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:36:00,047 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:36:00,258 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:36:00,269 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:36:00,272 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:36:00,385 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:36:00,697 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2018-08-20 11:36:02,018 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:36:02,018 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:36:02,192 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-20 11:36:02,192 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-20 11:36:02,330 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 11:36:02,330 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 11:36:02,813 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@101c80' 
2018-08-20 11:36:02,942 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:36:04,248 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:36:05,266 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:36:05,266 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:36:05,403 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:36:05,403 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:36:05,533 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ limit ? 
2018-08-20 11:36:05,533 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ limit ? 
2018-08-20 11:36:05,606 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2018-08-20 11:36:05,606 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2018-08-20 11:36:05,624 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:36:05,624 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:37:48,694 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@8e4374: startup date [Mon Aug 20 11:37:48 WIB 2018]; root of context hierarchy 
2018-08-20 11:37:52,473 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$b84908ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:38:05,361 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:38:06,802 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:38:13,302 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:38:13,401 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:38:14,097 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:38:14,112 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:38:14,121 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:38:14,509 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:38:15,660 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2018-08-20 11:38:21,211 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:38:21,211 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:38:21,729 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-20 11:38:21,729 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-20 11:38:21,870 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 11:38:21,870 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 11:38:22,074 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@8d467e' 
2018-08-20 11:38:22,398 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:38:26,010 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:38:29,068 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:38:29,068 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:38:29,390 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:38:29,390 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:38:29,632 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ limit ? 
2018-08-20 11:38:29,632 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ limit ? 
2018-08-20 11:38:29,919 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2018-08-20 11:38:29,919 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2018-08-20 11:38:30,098 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:38:30,098 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:42:38,062 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@9711b: startup date [Mon Aug 20 11:42:38 WIB 2018]; root of context hierarchy 
2018-08-20 11:42:39,254 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$fb7505e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:42:39,419 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:42:40,129 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:42:40,601 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:42:40,729 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:42:41,023 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:42:41,031 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:42:41,034 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:42:41,300 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:42:41,753 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2018-08-20 11:42:42,874 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:42:42,874 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:42:42,944 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-20 11:42:42,944 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-20 11:42:43,046 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 11:42:43,046 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 11:42:43,280 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@101c80' 
2018-08-20 11:42:43,366 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:42:44,070 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:42:44,671 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:42:44,671 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:42:44,765 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:42:44,765 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:42:44,913 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ limit ? 
2018-08-20 11:42:44,913 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ limit ? 
2018-08-20 11:42:44,985 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2018-08-20 11:42:44,985 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2018-08-20 11:42:44,997 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:42:44,997 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:43:58,187 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@9711b: startup date [Mon Aug 20 11:43:58 WIB 2018]; root of context hierarchy 
2018-08-20 11:43:59,164 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$fb7505e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:43:59,289 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:43:59,827 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:44:00,217 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:44:00,258 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:44:00,444 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:44:00,448 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:44:00,455 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:44:00,568 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:44:00,883 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2018-08-20 11:44:01,897 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:44:01,897 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:44:01,968 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-20 11:44:01,968 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-20 11:44:02,103 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 11:44:02,103 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 11:44:02,284 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@101c80' 
2018-08-20 11:44:02,406 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:44:03,267 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:44:03,847 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:44:03,847 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:44:03,943 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:44:03,943 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:44:04,094 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ limit ? 
2018-08-20 11:44:04,094 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ limit ? 
2018-08-20 11:44:04,202 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2018-08-20 11:44:04,202 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2018-08-20 11:44:04,212 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:44:04,212 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:50:26,639 INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@9711b: startup date [Mon Aug 20 11:50:26 WIB 2018]; root of context hierarchy 
2018-08-20 11:50:27,591 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'config' of type [com.agung.template.springjpa.Config$$EnhancerBySpringCGLIB$$fb7505e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018-08-20 11:50:27,705 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 
2018-08-20 11:50:28,250 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 
2018-08-20 11:50:28,766 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:50:28,803 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] 
2018-08-20 11:50:29,002 INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.1.0.Final} 
2018-08-20 11:50:29,008 INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found 
2018-08-20 11:50:29,016 INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist 
2018-08-20 11:50:29,134 INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} 
2018-08-20 11:50:29,415 INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect 
2018-08-20 11:50:30,449 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:50:30,449 DEBUG org.hibernate.SQL - 
    drop table if exists m_produk 
2018-08-20 11:50:30,540 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-20 11:50:30,540 DEBUG org.hibernate.SQL - 
    create table m_produk (
        id varchar(255) not null,
        harga decimal(19,2) not null,
        kode_produk varchar(255) not null,
        nama_produk varchar(255) not null,
        primary key (id)
    ) ENGINE=InnoDB 
2018-08-20 11:50:30,617 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 11:50:30,617 DEBUG org.hibernate.SQL - 
    alter table m_produk 
        add constraint UK_t5g2ekpvg0brj4j5e7uc6of4u unique (kode_produk) 
2018-08-20 11:50:30,811 INFO  o.h.t.s.internal.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@101c80' 
2018-08-20 11:50:30,893 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2018-08-20 11:50:31,833 INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory 
2018-08-20 11:50:32,738 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:32,738 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:32,847 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:32,847 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:32,898 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:32,898 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:32,947 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:32,947 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:32,990 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:32,990 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,036 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,036 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,113 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,113 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,158 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,158 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,206 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,206 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,258 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,258 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,302 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,302 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,358 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,358 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,425 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,425 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,480 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,480 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,525 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,525 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,572 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,572 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,626 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,626 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,670 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,670 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,705 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,705 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,738 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,738 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,783 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,783 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,849 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,849 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,881 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,881 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,915 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,915 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,949 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,949 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,994 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:33,994 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,316 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,316 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,360 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,360 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,394 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,394 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,428 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,428 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,472 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,472 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,506 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,506 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,550 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,550 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,617 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,617 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,661 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,661 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,706 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,706 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,751 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,751 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,796 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,796 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,840 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,840 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,907 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,907 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,952 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,952 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,996 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:34,996 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,064 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,064 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,108 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,108 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,153 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,153 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,196 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,196 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,241 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,241 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,285 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,285 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,331 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,331 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,376 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,376 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,422 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,422 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,464 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,464 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,509 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,509 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,554 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,554 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,620 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,620 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,666 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,666 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,710 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,710 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,755 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,755 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,802 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,802 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,844 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,844 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,889 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,889 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,933 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,933 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,977 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:35,977 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,022 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,022 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,066 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,066 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,111 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,111 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,156 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,156 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,200 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,200 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,245 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,245 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,314 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,314 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,359 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,359 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,403 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,403 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,460 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,460 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,492 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,492 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,526 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,526 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,559 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,559 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,604 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,604 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,638 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,638 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,671 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,671 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,704 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,704 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,738 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,738 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,783 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,783 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,816 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,816 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,851 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,851 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,894 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,894 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,928 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,928 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,961 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,961 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,994 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:36,994 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,028 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,028 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,075 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,075 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,117 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,117 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,167 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,167 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,217 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,217 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,263 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,263 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,307 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,307 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,352 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,352 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,397 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,397 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,452 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,452 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,496 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,496 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,541 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,541 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,586 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,586 DEBUG org.hibernate.SQL - 
    insert 
    into
        m_produk
        (harga, kode_produk, nama_produk, id) 
    values
        (?, ?, ?, ?) 
2018-08-20 11:50:37,719 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ limit ? 
2018-08-20 11:50:37,719 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ limit ? 
2018-08-20 11:50:37,816 DEBUG org.hibernate.SQL - 
    select
        count(produk0_.id) as col_0_0_ 
    from
        m_produk produk0_ 
2018-08-20 11:50:37,816 DEBUG org.hibernate.SQL - 
    select
        count(produk0_.id) as col_0_0_ 
    from
        m_produk produk0_ 
2018-08-20 11:50:37,955 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2018-08-20 11:50:37,955 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_,
        produk0_.harga as harga2_0_,
        produk0_.kode_produk as kode_pro3_0_,
        produk0_.nama_produk as nama_pro4_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.kode_produk=? 
2018-08-20 11:50:37,968 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
2018-08-20 11:50:37,968 DEBUG org.hibernate.SQL - 
    select
        produk0_.id as id1_0_0_,
        produk0_.harga as harga2_0_0_,
        produk0_.kode_produk as kode_pro3_0_0_,
        produk0_.nama_produk as nama_pro4_0_0_ 
    from
        m_produk produk0_ 
    where
        produk0_.id=? 
